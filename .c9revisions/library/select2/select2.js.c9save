{"ts":1370635375628,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":true,"ts":1370635296074,"patch":[[{"diffs":[[1,"/*\r\nCopyright 2012 Igor Vaynberg\r\n\r\nVersion: 3.0 Timestamp: Tue Jul 31 21:09:16 PDT 2012\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this work except in\r\ncompliance with the License. You may obtain a copy of the License in the LICENSE file, or at:\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is\r\ndistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and limitations under the License.\r\n*/\r\n(function($) {\r\n    if (typeof $.fn.each2 == \"undefined\") {\r\n        $.fn.extend({\r\n            /*\r\n            * 4-10 times faster .each replacement\r\n            * use it carefully, as it overrides jQuery context of element on each iteration\r\n            */\r\n            each2: function(c) {\r\n                var j = $([0]), i = -1, l = this.length;\r\n                while (\r\n    \t\t\t\t++i < l\r\n\t\t\t\t\t&& (j.context = j[0] = this[i])\r\n\t\t\t\t\t&& c.call(j[0], i, j) !== false //\"this\"=DOM, i=index, j=jQuery object\r\n\t\t\t\t);\r\n                return this;\r\n            }\r\n        });\r\n    }\r\n})(jQuery);\r\n\r\n(function($, undefined) {\r\n    \"use strict\";\r\n    /*global document, window, jQuery, console */\r\n\r\n    if (window.Select2 !== undefined) {\r\n        return;\r\n    }\r\n\r\n    var KEY, AbstractSelect2, SingleSelect2, MultiSelect2, nextUid, sizer;\r\n\r\n    KEY = {\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        LEFT: 37,\r\n        UP: 38,\r\n        RIGHT: 39,\r\n        DOWN: 40,\r\n        SHIFT: 16,\r\n        CTRL: 17,\r\n        ALT: 18,\r\n        PAGE_UP: 33,\r\n        PAGE_DOWN: 34,\r\n        HOME: 36,\r\n        END: 35,\r\n        BACKSPACE: 8,\r\n        DELETE: 46,\r\n        isArrow: function(k) {\r\n            k = k.which ? k.which : k;\r\n            switch (k) {\r\n                case KEY.LEFT:\r\n                case KEY.RIGHT:\r\n                case KEY.UP:\r\n                case KEY.DOWN:\r\n                    return true;\r\n            }\r\n            return false;\r\n        },\r\n        isControl: function(k) {\r\n            k = k.which ? k.which : k;\r\n            switch (k) {\r\n                case KEY.SHIFT:\r\n                case KEY.CTRL:\r\n                case KEY.ALT:\r\n                    return true;\r\n            }\r\n\r\n            if (k.metaKey) return true;\r\n\r\n            return false;\r\n        },\r\n        isFunctionKey: function(k) {\r\n            k = k.which ? k.which : k;\r\n            return k >= 112 && k <= 123;\r\n        }\r\n    };\r\n\r\n    nextUid = (function() { var counter = 1; return function() { return counter++; }; } ());\r\n\r\n    function escapeMarkup(markup) {\r\n        if (markup && typeof (markup) === \"string\") {\r\n            return markup.replace(\"&\", \"&amp;\");\r\n        } else {\r\n            return markup;\r\n        }\r\n    }\r\n\r\n    function indexOf(value, array) {\r\n        var i = 0, l = array.length, v;\r\n\r\n        if (typeof value === \"undefined\") {\r\n            return -1;\r\n        }\r\n\r\n        if (value.constructor === String) {\r\n            for (; i < l; i = i + 1) if (value.localeCompare(array[i]) === 0) return i;\r\n        } else {\r\n            for (; i < l; i = i + 1) {\r\n                v = array[i];\r\n                if (v.constructor === String) {\r\n                    if (v.localeCompare(value) === 0) return i;\r\n                } else {\r\n                    if (v === value) return i;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n    * Compares equality of a and b taking into account that a and b may be strings, in which case localeCompare is used\r\n    * @param a\r\n    * @param b\r\n    */\r\n    function equal(a, b) {\r\n        if (a === b) return true;\r\n        if (a === undefined || b === undefined) return false;\r\n        if (a === null || b === null) return false;\r\n        if (a.constructor === String) return a.localeCompare(b) === 0;\r\n        if (b.constructor === String) return b.localeCompare(a) === 0;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n    * Splits the string into an array of values, trimming each value. An empty array is returned for nulls or empty\r\n    * strings\r\n    * @param string\r\n    * @param separator\r\n    */\r\n    function splitVal(string, separator) {\r\n        var val, i, l;\r\n        if (string === null || string.length < 1) return [];\r\n        val = string.split(separator);\r\n        for (i = 0, l = val.length; i < l; i = i + 1) val[i] = $.trim(val[i]);\r\n        return val;\r\n    }\r\n\r\n    function getSideBorderPadding(element) {\r\n        return element.outerWidth() - element.width();\r\n    }\r\n\r\n    function installKeyUpChangeEvent(element) {\r\n        var key = \"keyup-change-value\";\r\n        element.bind(\"keydown\", function() {\r\n            if ($.data(element, key) === undefined) {\r\n                $.data(element, key, element.val());\r\n            }\r\n        });\r\n        element.bind(\"keyup\", function() {\r\n            var val = $.data(element, key);\r\n            if (val !== undefined && element.val() !== val) {\r\n                $.removeData(element, key);\r\n                element.trigger(\"keyup-change\");\r\n            }\r\n        });\r\n    }\r\n\r\n    $(document).delegate(\"*\", \"mousemove\", function(e) {\r\n        $.data(document, \"select2-lastpos\", { x: e.pageX, y: e.pageY });\r\n    });\r\n\r\n    /**\r\n    * filters mouse events so an event is fired only if the mouse moved.\r\n    *\r\n    * filters out mouse events that occur when mouse is stationary but\r\n    * the elements under the pointer are scrolled.\r\n    */\r\n    function installFilteredMouseMove(element) {\r\n        element.bind(\"mousemove\", function(e) {\r\n            var lastpos = $.data(document, \"select2-lastpos\");\r\n            if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {\r\n                $(e.target).trigger(\"mousemove-filtered\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made\r\n    * within the last quietMillis milliseconds.\r\n    *\r\n    * @param quietMillis number of milliseconds to wait before invoking fn\r\n    * @param fn function to be debounced\r\n    * @return debounced version of fn\r\n    */\r\n    function debounce(quietMillis, fn) {\r\n        var timeout;\r\n        return function() {\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(fn, quietMillis);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * A simple implementation of a thunk\r\n    * @param formula function used to lazily initialize the thunk\r\n    * @return {Function}\r\n    */\r\n    function thunk(formula) {\r\n        var evaluated = false,\r\n            value;\r\n        return function() {\r\n            if (evaluated === false) { value = formula(); evaluated = true; }\r\n            return value;\r\n        };\r\n    };\r\n\r\n    function installDebouncedScroll(threshold, element) {\r\n        var notify = debounce(threshold, function(e) { element.trigger(\"scroll-debounced\", e); });\r\n        element.bind(\"scroll\", function(e) {\r\n            if (indexOf(e.target, element.get()) >= 0) notify(e);\r\n        });\r\n    }\r\n\r\n    function killEvent(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    function measureTextWidth(e) {\r\n        if (!sizer) {\r\n            var style = e[0].currentStyle || window.getComputedStyle(e[0], null);\r\n            sizer = $(\"<div></div>\").css({\r\n                position: \"absolute\",\r\n                left: \"-10000px\",\r\n                top: \"-10000px\",\r\n                display: \"none\",\r\n                fontSize: style.fontSize,\r\n                fontFamily: style.fontFamily,\r\n                fontStyle: style.fontStyle,\r\n                fontWeight: style.fontWeight,\r\n                letterSpacing: style.letterSpacing,\r\n                textTransform: style.textTransform,\r\n                whiteSpace: \"nowrap\"\r\n            });\r\n            $(\"body\").append(sizer);\r\n        }\r\n        sizer.text(e.val());\r\n        return sizer.width();\r\n    }\r\n\r\n    function markMatch(text, term, markup) {\r\n        var match = text.toUpperCase().indexOf(term.toUpperCase()),\r\n            tl = term.length;\r\n\r\n        if (match < 0) {\r\n            markup.push(text);\r\n            return;\r\n        }\r\n\r\n        markup.push(text.substring(0, match));\r\n        markup.push(\"<span class='select2-match'>\");\r\n        markup.push(text.substring(match, match + tl));\r\n        markup.push(\"</span>\");\r\n        markup.push(text.substring(match + tl, text.length));\r\n    }\r\n\r\n    /**\r\n    * Produces an ajax-based query function\r\n    *\r\n    * @param options object containing configuration paramters\r\n    * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax\r\n    * @param options.url url for the data\r\n    * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.\r\n    * @param options.dataType request data type: ajax, jsonp, other datatatypes supported by jQuery's $.ajax function or the transport function if specified\r\n    * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often\r\n    * @param options.results a function(remoteData, pageNumber) that converts data returned form the remote request to the format expected by Select2.\r\n    *      The expected format is an object containing the following keys:\r\n    *      results array of objects that will be used as choices\r\n    *      more (optional) boolean indicating whether there are more results available\r\n    *      Example: {results:[{id:1, text:'Red'},{id:2, text:'Blue'}], more:true}\r\n    */\r\n    function ajax(options) {\r\n        var timeout, // current scheduled but not yet executed request\r\n            requestSequence = 0, // sequence used to drop out-of-order responses\r\n            handler = null,\r\n            quietMillis = options.quietMillis || 100;\r\n\r\n        return function(query) {\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                requestSequence += 1; // increment the sequence\r\n                var requestNumber = requestSequence, // this request's sequence number\r\n                    data = options.data, // ajax data function\r\n                    transport = options.transport || $.ajax,\r\n                    type = options.type || 'GET'; // set type of request (GET or POST)\r\n\r\n                data = data.call(this, query.term, query.page, query.context);\r\n\r\n                if (null !== handler) { handler.abort(); }\r\n\r\n                handler = transport.call(null, {\r\n                    url: options.url,\r\n                    dataType: options.dataType,\r\n                    data: data,\r\n                    type: type,\r\n                    success: function(data) {\r\n                        if (requestNumber < requestSequence) {\r\n                            return;\r\n                        }\r\n                        // TODO 3.0 - replace query.page with query so users have access to term, page, etc.\r\n                        var results = options.results(data, query.page);\r\n                        query.callback(results);\r\n                    }\r\n                });\r\n            }, quietMillis);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Produces a query function that works with a local array\r\n    *\r\n    * @param options object containing configuration parameters. The options parameter can either be an array or an\r\n    * object.\r\n    *\r\n    * If the array form is used it is assumed that it contains objects with 'id' and 'text' keys.\r\n    *\r\n    * If the object form is used ti is assumed that it contains 'data' and 'text' keys. The 'data' key should contain\r\n    * an array of objects that will be used as choices. These objects must contain at least an 'id' key. The 'text'\r\n    * key can either be a String in which case it is expected that each element in the 'data' array has a key with the\r\n    * value of 'text' which will be used to match choices. Alternatively, text can be a function(item) that can extract\r\n    * the text.\r\n    */\r\n    function local(options) {\r\n        var data = options, // data elements\r\n            dataText,\r\n            text = function(item) { return \"\" + item.text; }; // function used to retrieve the text portion of a data item that is matched against the search\r\n\r\n        if (!$.isArray(data)) {\r\n            text = data.text;\r\n            // if text is not a function we assume it to be a key name\r\n            if (!$.isFunction(text)) {\r\n                dataText = data.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available\r\n                text = function(item) { return item[dataText]; };\r\n            }\r\n            data = data.results;\r\n        }\r\n\r\n        return function(query) {\r\n            var t = query.term, filtered = {};\r\n            if (t === \"\") {\r\n                query.callback({ results: data });\r\n                return;\r\n            }\r\n            filtered.results = $(data)\r\n                .filter(function() { return query.matcher(t, text(this)); })\r\n                .get();\r\n            query.callback(filtered);\r\n        };\r\n    }\r\n\r\n    // TODO javadoc\r\n    function tags(data) {\r\n        // TODO even for a function we should probably return a wrapper that does the same object/string check as\r\n        // the function for arrays. otherwise only functions that return objects are supported.\r\n        if ($.isFunction(data)) {\r\n            return data;\r\n        }\r\n\r\n        // if not a function we assume it to be an array\r\n\r\n        return function(query) {\r\n            var t = query.term, filtered = { results: [] };\r\n            $(data).each(function() {\r\n                var isObject = this.text !== undefined,\r\n                    text = isObject ? this.text : this;\r\n                if (t === \"\" || query.matcher(t, text)) {\r\n                    filtered.results.push(isObject ? this : { id: this, text: this });\r\n                }\r\n            });\r\n            query.callback(filtered);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * Checks if the formatter function should be used.\r\n    *\r\n    * Throws an error if it is not a function. Returns true if it should be used,\r\n    * false if no formatting should be performed.\r\n    *\r\n    * @param formatter\r\n    */\r\n    function checkFormatter(formatter, formatterName) {\r\n        if ($.isFunction(formatter)) return true;\r\n        if (!formatter) return fasle;\r\n        throw new Error(\"formatterName must be a function or a falsy value\");\r\n    }\r\n\r\n    /**\r\n    * blurs any Select2 container that has focus when an element outside them was clicked or received focus\r\n    *\r\n    * also takes care of clicks on label tags that point to the source element\r\n    */\r\n    $(document).ready(function() {\r\n        $(document).delegate(\"*\", \"mousedown touchend\", function(e) {\r\n            var target = $(e.target).closest(\"div.select2-container\").get(0), attr;\r\n            if (target) {\r\n                $(document).find(\"div.select2-container-active\").each(function() {\r\n                    if (this !== target) $(this).data(\"select2\").blur();\r\n                });\r\n            } else {\r\n                target = $(e.target).closest(\"div.select2-drop\").get(0);\r\n                $(document).find(\"div.select2-drop-active\").each(function() {\r\n                    if (this !== target) $(this).data(\"select2\").blur();\r\n                });\r\n            }\r\n\r\n            target = $(e.target);\r\n            attr = target.attr(\"for\");\r\n            if (\"LABEL\" === e.target.tagName && attr && attr.length > 0) {\r\n                target = $(\"#\" + attr);\r\n                target = target.data(\"select2\");\r\n                if (target !== undefined) { target.focus(); e.preventDefault(); }\r\n            }\r\n        });\r\n    });\r\n\r\n    function evaluate(val) {\r\n        return $.isFunction(val) ? val() : val;\r\n    }\r\n\r\n    /**\r\n    * Creates a new class\r\n    *\r\n    * @param superClass\r\n    * @param methods\r\n    */\r\n    function clazz(SuperClass, methods) {\r\n        var constructor = function() { };\r\n        constructor.prototype = new SuperClass;\r\n        constructor.prototype.constructor = constructor;\r\n        constructor.prototype.parent = SuperClass.prototype;\r\n        constructor.prototype = $.extend(constructor.prototype, methods);\r\n        return constructor;\r\n    }\r\n\r\n    AbstractSelect2 = clazz(Object, {\r\n\r\n        // abstract\r\n        bind: function(func) {\r\n            var self = this;\r\n            return function() {\r\n                func.apply(self, arguments);\r\n            };\r\n        },\r\n\r\n        // abstract\r\n        init: function(opts) {\r\n            var results, search, resultsSelector = \".select2-results\";\r\n\r\n            // prepare options\r\n            this.opts = opts = this.prepareOpts(opts);\r\n\r\n            this.id = opts.id;\r\n\r\n            // destroy if called on an existing component\r\n            if (opts.element.data(\"select2\") !== undefined &&\r\n                opts.element.data(\"select2\") !== null) {\r\n                this.destroy();\r\n            }\r\n\r\n            this.enabled = true;\r\n            this.container = this.createContainer();\r\n\r\n            // cache the body so future lookups are cheap\r\n            this.body = thunk(function() { return opts.element.closest(\"body\"); });\r\n\r\n            if (opts.element.attr(\"class\") !== undefined) {\r\n                this.container.addClass(opts.element.attr(\"class\"));\r\n            }\r\n\r\n            this.container.css(evaluate(opts.containerCss));\r\n            this.container.addClass(evaluate(opts.containerCssClass));\r\n\r\n            // swap container for the element\r\n            this.opts.element\r\n                .data(\"select2\", this)\r\n                .hide()\r\n                .after(this.container);\r\n            this.container.data(\"select2\", this);\r\n\r\n            this.dropdown = this.container.find(\".select2-drop\");\r\n            this.dropdown.css(evaluate(opts.dropdownCss));\r\n            this.dropdown.addClass(evaluate(opts.dropdownCssClass));\r\n            this.dropdown.data(\"select2\", this);\r\n\r\n            this.results = results = this.container.find(resultsSelector);\r\n            this.search = search = this.container.find(\"input.select2-input\");\r\n\r\n            search.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\"));\r\n\r\n            this.resultsPage = 0;\r\n            this.context = null;\r\n\r\n            // initialize the container\r\n            this.initContainer();\r\n            this.initContainerWidth();\r\n\r\n            installFilteredMouseMove(this.results);\r\n            this.dropdown.delegate(resultsSelector, \"mousemove-filtered\", this.bind(this.highlightUnderEvent));\r\n\r\n            installDebouncedScroll(80, this.results);\r\n            this.dropdown.delegate(resultsSelector, \"scroll-debounced\", this.bind(this.loadMoreIfNeeded));\r\n\r\n            // if jquery.mousewheel plugin is installed we can prevent out-of-bounds scrolling of results via mousewheel\r\n            if ($.fn.mousewheel) {\r\n                results.mousewheel(function(e, delta, deltaX, deltaY) {\r\n                    var top = results.scrollTop(), height;\r\n                    if (deltaY > 0 && top - deltaY <= 0) {\r\n                        results.scrollTop(0);\r\n                        killEvent(e);\r\n                    } else if (deltaY < 0 && results.get(0).scrollHeight - results.scrollTop() + deltaY <= results.height()) {\r\n                        results.scrollTop(results.get(0).scrollHeight - results.height());\r\n                        killEvent(e);\r\n                    }\r\n                });\r\n            }\r\n\r\n            installKeyUpChangeEvent(search);\r\n            search.bind(\"keyup-change\", this.bind(this.updateResults));\r\n            search.bind(\"focus\", function() { search.addClass(\"select2-focused\"); if (search.val() === \" \") search.val(\"\"); });\r\n            search.bind(\"blur\", function() { search.removeClass(\"select2-focused\"); });\r\n\r\n            this.dropdown.delegate(resultsSelector, \"mouseup\", this.bind(function(e) {\r\n                if ($(e.target).closest(\".select2-result-selectable:not(.select2-disabled)\").length > 0) {\r\n                    this.highlightUnderEvent(e);\r\n                    this.selectHighlighted(e);\r\n                } else {\r\n                    this.focusSearch();\r\n                }\r\n                killEvent(e);\r\n            }));\r\n\r\n            // trap all mouse events from leaving the dropdown. sometimes there may be a modal that is listening\r\n            // for mouse events outside of itself so it can close itself. since the dropdown is now outside the select2's\r\n            // dom it will trigger the popup close, which is not what we want\r\n            this.dropdown.bind(\"click mouseup mousedown\", function(e) { e.stopPropagation(); });\r\n\r\n            if ($.isFunction(this.opts.initSelection)) {\r\n                // initialize selection based on the current value of the source element\r\n                this.initSelection();\r\n\r\n                // if the user has provided a function that can set selection based on the value of the source element\r\n                // we monitor the change event on the element and trigger it, allowing for two way synchronization\r\n                this.monitorSource();\r\n            }\r\n\r\n            if (opts.element.is(\":disabled\")) this.disable();\r\n        },\r\n\r\n        // abstract\r\n        destroy: function() {\r\n            var select2 = this.opts.element.data(\"select2\");\r\n            if (select2 !== undefined) {\r\n                select2.container.remove();\r\n                select2.dropdown.remove();\r\n                select2.opts.element\r\n                    .removeData(\"select2\")\r\n                    .unbind(\".select2\")\r\n                    .show();\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        prepareOpts: function(opts) {\r\n            var element, select, idKey, ajaxUrl;\r\n\r\n            element = opts.element;\r\n\r\n            if (element.get(0).tagName.toLowerCase() === \"select\") {\r\n                this.select = select = opts.element;\r\n            }\r\n\r\n            //Custom tags separator.\r\n            opts.separator = opts.separator || \",\";\r\n\r\n            if (select) {\r\n                // these options are not allowed when attached to a select because they are picked up off the element itself\r\n                $.each([\"id\", \"multiple\", \"ajax\", \"query\", \"createSearchChoice\", \"initSelection\", \"data\", \"tags\"], function() {\r\n                    if (this in opts) {\r\n                        throw new Error(\"Option '\" + this + \"' is not allowed for Select2 when attached to a <select> element.\");\r\n                    }\r\n                });\r\n            }\r\n\r\n            opts = $.extend({}, {\r\n                populateResults: function(container, results, query) {\r\n                    var populate, data, result, children, id = this.opts.id;\r\n\r\n                    populate = function(results, container, depth) {\r\n\r\n                        var i, l, result, selectable, compound, node, label, innerContainer, formatted;\r\n                        for (i = 0, l = results.length; i < l; i = i + 1) {\r\n\r\n                            result = results[i];\r\n                            selectable = id(result) !== undefined;\r\n                            compound = (\"children\" in result) && result.children.length > 0;\r\n\r\n                            node = $(\"<li></li>\");\r\n                            node.addClass(\"select2-results-dept-\" + depth);\r\n                            node.addClass(\"select2-result\");\r\n                            node.addClass(selectable ? \"select2-result-selectable\" : \"select2-result-unselectable\");\r\n                            if (compound) { node.addClass(\"select2-result-with-children\"); }\r\n\r\n                            label = $(\"<div></div>\");\r\n                            label.addClass(\"select2-result-label\");\r\n\r\n                            formatted = opts.formatResult(result, label, query);\r\n                            if (formatted !== undefined) {\r\n                                label.html(escapeMarkup(formatted));\r\n                            }\r\n\r\n                            node.append(label);\r\n\r\n                            if (compound) {\r\n\r\n                                innerContainer = $(\"<ul></ul>\");\r\n                                innerContainer.addClass(\"select2-result-sub\");\r\n                                populate(result.children, innerContainer, depth + 1);\r\n                                node.append(innerContainer);\r\n                            }\r\n\r\n                            node.data(\"select2-data\", result);\r\n                            container.append(node);\r\n                        }\r\n                    };\r\n\r\n                    populate(results, container, 0);\r\n                }\r\n            }, $.fn.select2.defaults, opts);\r\n\r\n            if (typeof (opts.id) !== \"function\") {\r\n                idKey = opts.id;\r\n                opts.id = function(e) { return e[idKey]; };\r\n            }\r\n\r\n            if (select) {\r\n                opts.query = this.bind(function(query) {\r\n                    var data = { results: [], more: false },\r\n                        term = query.term,\r\n                        children, firstChild, process;\r\n\r\n                    process = function(element, collection) {\r\n                        var group;\r\n                        if (element.is(\"option\")) {\r\n                            if (query.matcher(term, element.text(), element)) {\r\n                                collection.push({ id: element.attr(\"value\"), text: element.text(), element: element.get() });\r\n                            }\r\n                        } else if (element.is(\"optgroup\")) {\r\n                            group = { text: element.attr(\"label\"), children: [], element: element.get() };\r\n                            element.children().each2(function(i, elm) { process(elm, group.children); });\r\n                            if (group.children.length > 0) {\r\n                                collection.push(group);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    children = element.children();\r\n\r\n                    // ignore the placeholder option if there is one\r\n                    if (this.getPlaceholder() !== undefined && children.length > 0) {\r\n                        firstChild = children[0];\r\n                        if ($(firstChild).text() === \"\") {\r\n                            children = children.not(firstChild);\r\n                        }\r\n                    }\r\n\r\n                    children.each2(function(i, elm) { process(elm, data.results); });\r\n\r\n                    query.callback(data);\r\n                });\r\n                // this is needed because inside val() we construct choices from options and there id is hardcoded\r\n                opts.id = function(e) { return e.id; };\r\n            } else {\r\n                if (!(\"query\" in opts)) {\r\n                    if (\"ajax\" in opts) {\r\n                        ajaxUrl = opts.element.data(\"ajax-url\");\r\n                        if (ajaxUrl && ajaxUrl.length > 0) {\r\n                            opts.ajax.url = ajaxUrl;\r\n                        }\r\n                        opts.query = ajax(opts.ajax);\r\n                    } else if (\"data\" in opts) {\r\n                        opts.query = local(opts.data);\r\n                    } else if (\"tags\" in opts) {\r\n                        opts.query = tags(opts.tags);\r\n                        opts.createSearchChoice = function(term) { return { id: term, text: term }; };\r\n                        opts.initSelection = function(element, callback) {\r\n                            var data = [];\r\n                            $(splitVal(element.val(), opts.separator)).each(function() {\r\n                                var id = this, text = this, tags = opts.tags;\r\n                                if ($.isFunction(tags)) tags = tags();\r\n                                $(tags).each(function() { if (equal(this.id, id)) { text = this.text; return false; } });\r\n                                data.push({ id: id, text: text });\r\n                            });\r\n\r\n                            callback(data);\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            if (typeof (opts.query) !== \"function\") {\r\n                throw \"query function not defined for Select2 \" + opts.element.attr(\"id\");\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        /**\r\n        * Monitor the original element for changes and update select2 accordingly\r\n        */\r\n        // abstract\r\n        monitorSource: function() {\r\n            this.opts.element.bind(\"change.select2\", this.bind(function(e) {\r\n                if (this.opts.element.data(\"select2-change-triggered\") !== true) {\r\n                    this.initSelection();\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n        * Triggers the change event on the source element\r\n        */\r\n        // abstract\r\n        triggerChange: function(details) {\r\n\r\n            details = details || {};\r\n            details = $.extend({}, details, { type: \"change\", val: this.val() });\r\n            // prevents recursive triggering\r\n            this.opts.element.data(\"select2-change-triggered\", true);\r\n            this.opts.element.trigger(details);\r\n            this.opts.element.data(\"select2-change-triggered\", false);\r\n\r\n            // some validation frameworks ignore the change event and listen instead to keyup, click for selects\r\n            // so here we trigger the click event manually\r\n            this.opts.element.click();\r\n        },\r\n\r\n\r\n        // abstract\r\n        enable: function() {\r\n            if (this.enabled) return;\r\n\r\n            this.enabled = true;\r\n            this.container.removeClass(\"select2-container-disabled\");\r\n        },\r\n\r\n        // abstract\r\n        disable: function() {\r\n            if (!this.enabled) return;\r\n\r\n            this.close();\r\n\r\n            this.enabled = false;\r\n            this.container.addClass(\"select2-container-disabled\");\r\n        },\r\n\r\n        // abstract\r\n        opened: function() {\r\n            return this.container.hasClass(\"select2-dropdown-open\");\r\n        },\r\n\r\n        // abstract\r\n        positionDropdown: function() {\r\n            var offset = this.container.offset(),\r\n                height = this.container.outerHeight(),\r\n                width = this.container.outerWidth(),\r\n                dropHeight = this.dropdown.outerHeight(),\r\n                viewportBottom = $(window).scrollTop() + document.documentElement.clientHeight,\r\n                dropTop = offset.top + height,\r\n                enoughRoomBelow = dropTop + dropHeight <= viewportBottom,\r\n                enoughRoomAbove = (offset.top - dropHeight) >= this.body().scrollTop(),\r\n                aboveNow = this.dropdown.hasClass(\"select2-drop-above\"),\r\n                above,\r\n                css;\r\n\r\n            // console.log(\"below/ droptop:\", dropTop, \"dropHeight\", dropHeight, \"sum\", (dropTop+dropHeight)+\" viewport bottom\", viewportBottom, \"enough?\", enoughRoomBelow);\r\n            // console.log(\"above/ offset.top\", offset.top, \"dropHeight\", dropHeight, \"top\", (offset.top-dropHeight), \"scrollTop\", this.body().scrollTop(), \"enough?\", enoughRoomAbove);\r\n\r\n            // always prefer the current above/below alignment, unless there is not enough room\r\n\r\n            if (aboveNow) {\r\n                above = true;\r\n                if (!enoughRoomAbove && enoughRoomBelow) above = false;\r\n            } else {\r\n                above = false;\r\n                if (!enoughRoomBelow && enoughRoomAbove) above = true;\r\n            }\r\n\r\n            if (above) {\r\n                dropTop = offset.top - dropHeight;\r\n                this.container.addClass(\"select2-drop-above\");\r\n                this.dropdown.addClass(\"select2-drop-above\");\r\n            }\r\n            else {\r\n                this.container.removeClass(\"select2-drop-above\");\r\n                this.dropdown.removeClass(\"select2-drop-above\");\r\n            }\r\n\r\n            css = {\r\n                top: dropTop,\r\n                left: offset.left,\r\n                width: width\r\n            };\r\n\r\n            this.dropdown.css(css);\r\n        },\r\n\r\n        // abstract\r\n        shouldOpen: function() {\r\n            var event;\r\n\r\n            if (this.opened()) return false;\r\n\r\n            event = jQuery.Event(\"open\");\r\n            this.opts.element.trigger(event);\r\n            return !event.isDefaultPrevented();\r\n        },\r\n\r\n        // abstract\r\n        clearDropdownAlignmentPreference: function() {\r\n            // clear the classes used to figure out the preference of where the dropdown should be opened\r\n            this.container.removeClass(\"select2-drop-above\");\r\n            this.dropdown.removeClass(\"select2-drop-above\");\r\n        },\r\n\r\n        /**\r\n        * Opens the dropdown\r\n        *\r\n        * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,\r\n        * the dropdown is already open, or if the 'open' event listener on the element called preventDefault().\r\n        */\r\n        // abstract\r\n        open: function() {\r\n\r\n            if (!this.shouldOpen()) return false;\r\n\r\n            window.setTimeout(this.bind(this.opening), 1);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n        * Performs the opening of the dropdown\r\n        */\r\n        // abstract\r\n        opening: function() {\r\n            this.clearDropdownAlignmentPreference();\r\n\r\n            if (this.search.val() === \" \") { this.search.val(\"\"); }\r\n\r\n            this.dropdown.addClass(\"select2-drop-active\");\r\n            this.container.addClass(\"select2-dropdown-open\").addClass(\"select2-container-active\");\r\n\r\n            this.updateResults(true);\r\n\r\n            if (this.dropdown[0] !== this.body().children().last()[0]) {\r\n                this.dropdown.detach().appendTo(this.body());\r\n            }\r\n\r\n            this.dropdown.show();\r\n            this.ensureHighlightVisible();\r\n\r\n            this.positionDropdown();\r\n\r\n            this.focusSearch();\r\n        },\r\n\r\n        // abstract\r\n        close: function() {\r\n            if (!this.opened()) return;\r\n\r\n            this.clearDropdownAlignmentPreference();\r\n\r\n            this.dropdown.hide();\r\n            this.container.removeClass(\"select2-dropdown-open\").removeClass(\"select2-container-active\");\r\n            this.results.empty();\r\n            this.clearSearch();\r\n\r\n            this.opts.element.trigger(jQuery.Event(\"close\"));\r\n        },\r\n\r\n        // abstract\r\n        clearSearch: function() {\r\n\r\n        },\r\n\r\n        // abstract\r\n        ensureHighlightVisible: function() {\r\n            var results = this.results, children, index, child, hb, rb, y, more;\r\n\r\n            index = this.highlight();\r\n\r\n            if (index < 0) return;\r\n\r\n            if (index == 0) {\r\n\r\n                // if the first element is highlighted scroll all the way to the top,\r\n                // that way any unselectable headers above it will also be scrolled\r\n                // into view\r\n\r\n                results.scrollTop(0);\r\n                return;\r\n            }\r\n\r\n            children = results.find(\".select2-result-selectable\");\r\n\r\n            child = $(children[index]);\r\n\r\n            hb = child.offset().top + child.outerHeight();\r\n\r\n            // if this is the last child lets also make sure select2-more-results is visible\r\n            if (index === children.length - 1) {\r\n                more = results.find(\"li.select2-more-results\");\r\n                if (more.length > 0) {\r\n                    hb = more.offset().top + more.outerHeight();\r\n                }\r\n            }\r\n\r\n            rb = results.offset().top + results.outerHeight();\r\n            if (hb > rb) {\r\n                results.scrollTop(results.scrollTop() + (hb - rb));\r\n            }\r\n            y = child.offset().top - results.offset().top;\r\n\r\n            // make sure the top of the element is visible\r\n            if (y < 0) {\r\n                results.scrollTop(results.scrollTop() + y); // y is negative\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        moveHighlight: function(delta) {\r\n            var choices = this.results.find(\".select2-result-selectable\"),\r\n                index = this.highlight();\r\n\r\n            while (index > -1 && index < choices.length) {\r\n                index += delta;\r\n                var choice = $(choices[index]);\r\n                if (choice.hasClass(\"select2-result-selectable\") && !choice.hasClass(\"select2-disabled\")) {\r\n                    this.highlight(index);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        highlight: function(index) {\r\n            var choices = this.results.find(\".select2-result-selectable\").not(\".select2-disabled\");\r\n\r\n            if (arguments.length === 0) {\r\n                return indexOf(choices.filter(\".select2-highlighted\")[0], choices.get());\r\n            }\r\n\r\n            if (index >= choices.length) index = choices.length - 1;\r\n            if (index < 0) index = 0;\r\n\r\n            choices.removeClass(\"select2-highlighted\");\r\n\r\n            $(choices[index]).addClass(\"select2-highlighted\");\r\n            this.ensureHighlightVisible();\r\n\r\n        },\r\n\r\n        // abstract\r\n        countSelectableResults: function() {\r\n            return this.results.find(\".select2-result-selectable\").not(\".select2-disabled\").length;\r\n        },\r\n\r\n        // abstract\r\n        highlightUnderEvent: function(event) {\r\n            var el = $(event.target).closest(\".select2-result-selectable\");\r\n            if (el.length > 0 && !el.is(\".select2-highlighted\")) {\r\n                var choices = this.results.find('.select2-result-selectable');\r\n                this.highlight(choices.index(el));\r\n            } else if (el.length == 0) {\r\n                // if we are over an unselectable item remove al highlights\r\n                this.results.find(\".select2-highlighted\").removeClass(\"select2-highlighted\");\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        loadMoreIfNeeded: function() {\r\n            var results = this.results,\r\n                more = results.find(\"li.select2-more-results\"),\r\n                below, // pixels the element is below the scroll fold, below==0 is when the element is starting to be visible\r\n                offset = -1, // index of first element without data\r\n                page = this.resultsPage + 1,\r\n                self = this,\r\n                term = this.search.val(),\r\n                context = this.context;\r\n\r\n            if (more.length === 0) return;\r\n            below = more.offset().top - results.offset().top - results.height();\r\n\r\n            if (below <= 0) {\r\n                more.addClass(\"select2-active\");\r\n                this.opts.query({\r\n                    term: term,\r\n                    page: page,\r\n                    context: context,\r\n                    matcher: this.opts.matcher,\r\n                    callback: this.bind(function(data) {\r\n\r\n                        self.opts.populateResults.call(this, results, data.results, { term: term, page: page, context: context });\r\n\r\n                        if (data.more === true) {\r\n                            more.detach().appendTo(results.children(\":last\")).text(self.opts.formatLoadMore(page + 1));\r\n                            window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                        } else {\r\n                            more.remove();\r\n                        }\r\n                        self.positionDropdown();\r\n                        self.resultsPage = page;\r\n                    })\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n        * @param initial whether or not this is the call to this method right after the dropdown has been opened\r\n        */\r\n        // abstract\r\n        updateResults: function(initial) {\r\n            var search = this.search, results = this.results, opts = this.opts, data, self = this;\r\n\r\n            // if the search is currently hidden we do not alter the results\r\n            if (initial !== true && (this.showSearchInput === false || !this.opened())) {\r\n                return;\r\n            }\r\n\r\n            search.addClass(\"select2-active\");\r\n\r\n            function postRender() {\r\n                results.scrollTop(0);\r\n                search.removeClass(\"select2-active\");\r\n                self.positionDropdown();\r\n            }\r\n\r\n            function render(html) {\r\n                results.html(escapeMarkup(html));\r\n                postRender();\r\n            }\r\n\r\n            if (opts.maximumSelectionSize >= 1) {\r\n                data = this.data();\r\n                if ($.isArray(data) && data.length >= opts.maximumSelectionSize && checkFormatter(opts.formatSelectionTooBig, \"formatSelectionTooBig\")) {\r\n                    render(\"<li class='select2-selection-limit'>\" + opts.formatSelectionTooBig(opts.maximumSelectionSize) + \"</li>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (search.val().length < opts.minimumInputLength && checkFormatter(opts.formatInputTooShort, \"formatInputTooShort\")) {\r\n                render(\"<li class='select2-no-results'>\" + opts.formatInputTooShort(search.val(), opts.minimumInputLength) + \"</li>\");\r\n                return;\r\n            }\r\n\r\n            this.resultsPage = 1;\r\n            opts.query({\r\n                term: search.val(),\r\n                page: this.resultsPage,\r\n                context: null,\r\n                matcher: opts.matcher,\r\n                callback: this.bind(function(data) {\r\n                    var def; // default choice\r\n\r\n                    // save context, if any\r\n                    this.context = (data.context === undefined) ? null : data.context;\r\n\r\n                    // create a default choice and prepend it to the list\r\n                    if (this.opts.createSearchChoice && search.val() !== \"\") {\r\n                        def = this.opts.createSearchChoice.call(null, search.val(), data.results);\r\n                        if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {\r\n                            if ($(data.results).filter(\r\n                            function() {\r\n                                return equal(self.id(this), self.id(def));\r\n                            }).length === 0) {\r\n                                data.results.unshift(def);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, \"formatNoMatches\")) {\r\n                        render(\"<li class='select2-no-results'>\" + opts.formatNoMatches(search.val()) + \"</li>\");\r\n                        return;\r\n                    }\r\n\r\n                    results.empty();\r\n                    self.opts.populateResults.call(this, results, data.results, { term: search.val(), page: this.resultsPage, context: null });\r\n\r\n                    if (data.more === true && checkFormatter(opts.formatLoadMore, \"formatLoadMore\")) {\r\n                        results.children().filter(\":last\").append(\"<li class='select2-more-results'>\" + escapeMarkup(opts.formatLoadMore(this.resultsPage)) + \"</li>\");\r\n                        window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                    }\r\n\r\n                    this.postprocessResults(data, initial);\r\n\r\n                    postRender();\r\n                })\r\n            });\r\n        },\r\n\r\n        // abstract\r\n        cancel: function() {\r\n            this.close();\r\n        },\r\n\r\n        // abstract\r\n        blur: function() {\r\n            this.close();\r\n            this.container.removeClass(\"select2-container-active\");\r\n            this.dropdown.removeClass(\"select2-drop-active\");\r\n            // synonymous to .is(':focus'), which is available in jquery >= 1.6\r\n            if (this.search[0] === document.activeElement) { this.search.blur(); }\r\n            this.clearSearch();\r\n            this.selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n        },\r\n\r\n        // abstract\r\n        focusSearch: function() {\r\n            /* we do this in a timeout so that current event processing can complete before this code is executed.\r\n            this makes sure the search field is focussed even if the current event would blur it */\r\n            window.setTimeout(this.bind(function() {\r\n                this.search.focus();\r\n                // reset the value so IE places the cursor at the end of the input box\r\n                this.search.val(this.search.val());\r\n            }), 10);\r\n        },\r\n\r\n        // abstract\r\n        selectHighlighted: function() {\r\n            var index = this.highlight(),\r\n                highlighted = this.results.find(\".select2-highlighted\").not(\".select2-disabled\"),\r\n                data = highlighted.closest('.select2-result-selectable').data(\"select2-data\");\r\n            if (data) {\r\n                highlighted.addClass(\"select2-disabled\");\r\n                this.highlight(index);\r\n                this.onSelect(data);\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        getPlaceholder: function() {\r\n            return this.opts.element.attr(\"placeholder\") ||\r\n                this.opts.element.attr(\"data-placeholder\") || // jquery 1.4 compat\r\n                this.opts.element.data(\"placeholder\") ||\r\n                this.opts.placeholder;\r\n        },\r\n\r\n        /**\r\n        * Get the desired width for the container element.  This is\r\n        * derived first from option `width` passed to select2, then\r\n        * the inline 'style' on the original element, and finally\r\n        * falls back to the jQuery calculated element width.\r\n        */\r\n        // abstract\r\n        initContainerWidth: function() {\r\n            function resolveContainerWidth() {\r\n                var style, attrs, matches, i, l;\r\n\r\n                if (this.opts.width === \"off\") {\r\n                    return null;\r\n                } else if (this.opts.width === \"element\") {\r\n                    return this.opts.element.outerWidth() === 0 ? 'auto' : this.opts.element.outerWidth() + 'px';\r\n                } else if (this.opts.width === \"copy\" || this.opts.width === \"resolve\") {\r\n                    // check if there is inline style on the element that contains width\r\n                    style = this.opts.element.attr('style');\r\n                    if (style !== undefined) {\r\n                        attrs = style.split(';');\r\n                        for (i = 0, l = attrs.length; i < l; i = i + 1) {\r\n                            matches = attrs[i].replace(/\\s/g, '')\r\n                                .match(/width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/);\r\n                            if (matches !== null && matches.length >= 1)\r\n                                return matches[1];\r\n                        }\r\n                    }\r\n\r\n                    if (this.opts.width === \"resolve\") {\r\n                        // next check if css('width') can resolve a width that is percent based, this is sometimes possible\r\n                        // when attached to input type=hidden or elements hidden via css\r\n                        style = this.opts.element.css('width');\r\n                        if (style.indexOf(\"%\") > 0) return style;\r\n\r\n                        // finally, fallback on the calculated width of the element\r\n                        return (this.opts.element.outerWidth() === 0 ? 'auto' : this.opts.element.outerWidth() + 'px');\r\n                    }\r\n\r\n                    return null;\r\n                } else if ($.isFunction(this.opts.width)) {\r\n                    return this.opts.width();\r\n                } else {\r\n                    return this.opts.width;\r\n                }\r\n            };\r\n\r\n            var width = resolveContainerWidth.call(this);\r\n            if (width !== null) {\r\n                this.container.attr(\"style\", \"width: \" + width);\r\n            }\r\n        }\r\n    });\r\n\r\n    SingleSelect2 = clazz(AbstractSelect2, {\r\n\r\n        // single\r\n\r\n        createContainer: function() {\r\n            var container = $(\"<div></div>\", {\r\n                \"class\": \"select2-container\"\r\n            }).html([\r\n                \"    <a href='javascript:void(0)' class='select2-choice'>\",\r\n                \"   <span></span><abbr class='select2-search-choice-close' style='display:none;'></abbr>\",\r\n                \"   <div><b></b></div>\",\r\n                \"</a>\",\r\n                \"    <div class='select2-drop select2-offscreen'>\",\r\n                \"   <div class='select2-search'>\",\r\n                \"       <input type='text' autocomplete='off' class='select2-input'/>\",\r\n                \"   </div>\",\r\n                \"   <ul class='select2-results'>\",\r\n                \"   </ul>\",\r\n                \"</div>\"].join(\"\"));\r\n            return container;\r\n        },\r\n\r\n        // single\r\n        opening: function() {\r\n            this.search.show();\r\n            this.parent.opening.apply(this, arguments);\r\n            this.dropdown.removeClass(\"select2-offscreen\");\r\n        },\r\n\r\n        // single\r\n        close: function() {\r\n            if (!this.opened()) return;\r\n            this.parent.close.apply(this, arguments);\r\n            this.dropdown.removeAttr(\"style\").addClass(\"select2-offscreen\").insertAfter(this.selection).show();\r\n        },\r\n\r\n        // single\r\n        focus: function() {\r\n            this.close();\r\n            this.selection.focus();\r\n        },\r\n\r\n        // single\r\n        isFocused: function() {\r\n            return this.selection[0] === document.activeElement;\r\n        },\r\n\r\n        // single\r\n        cancel: function() {\r\n            this.parent.cancel.apply(this, arguments);\r\n            this.selection.focus();\r\n        },\r\n\r\n        // single\r\n        initContainer: function() {\r\n\r\n            var selection,\r\n                container = this.container,\r\n                dropdown = this.dropdown,\r\n                clickingInside = false;\r\n\r\n            this.selection = selection = container.find(\".select2-choice\");\r\n\r\n            this.search.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    switch (e.which) {\r\n                        case KEY.UP:\r\n                        case KEY.DOWN:\r\n                            this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.TAB:\r\n                        case KEY.ENTER:\r\n                            this.selectHighlighted();\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ESC:\r\n                            this.cancel(e);\r\n                            killEvent(e);\r\n                            return;\r\n                    }\r\n                } else {\r\n\r\n                    if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\r\n                        return;\r\n                    }\r\n\r\n                    this.open();\r\n\r\n                    if (e.which === KEY.ENTER) {\r\n                        // do not propagate the event otherwise we open, and propagate enter which closes\r\n                        return;\r\n                    }\r\n                }\r\n            }));\r\n\r\n            this.search.bind(\"focus\", this.bind(function() {\r\n                this.selection.attr(\"tabIndex\", \"-1\");\r\n            }));\r\n            this.search.bind(\"blur\", this.bind(function() {\r\n                if (!this.opened()) this.container.removeClass(\"select2-container-active\");\r\n                window.setTimeout(this.bind(function() { this.selection.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\")); }), 10);\r\n            }));\r\n\r\n            selection.bind(\"mousedown\", this.bind(function(e) {\r\n                clickingInside = true;\r\n\r\n                if (this.opened()) {\r\n                    this.close();\r\n                    this.selection.focus();\r\n                } else if (this.enabled) {\r\n                    this.open();\r\n                }\r\n                killEvent(e);\r\n\r\n                clickingInside = false;\r\n            }));\r\n\r\n            dropdown.bind(\"mousedown\", this.bind(function() { this.search.focus(); }));\r\n\r\n            selection.bind(\"focus\", this.bind(function() {\r\n                this.container.addClass(\"select2-container-active\");\r\n                // hide the search so the tab key does not focus on it\r\n                this.search.attr(\"tabIndex\", \"-1\");\r\n            }));\r\n\r\n            selection.bind(\"blur\", this.bind(function() {\r\n                this.container.removeClass(\"select2-container-active\");\r\n                window.setTimeout(this.bind(function() { this.search.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\")); }), 10);\r\n            }));\r\n\r\n            selection.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                this.open();\r\n\r\n                if (e.which === KEY.ENTER) {\r\n                    // do not propagate the event otherwise we open, and propagate enter which closes\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                // do not set the search input value for non-alpha-numeric keys\r\n                // otherwise pressing down results in a '(' being set in the search field\r\n                if (e.which < 48) { // '0' == 48\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                var keyWritten = String.fromCharCode(e.which).toLowerCase();\r\n\r\n                if (e.shiftKey) {\r\n                    keyWritten = keyWritten.toUpperCase();\r\n                }\r\n\r\n                this.search.val(keyWritten);\r\n\r\n                // prevent event propagation so it doesnt replay on the now focussed search field and result in double key entry\r\n                killEvent(e);\r\n            }));\r\n\r\n            selection.delegate(\"abbr\", \"mousedown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n                this.clear();\r\n                killEvent(e);\r\n                this.close();\r\n                this.triggerChange();\r\n                this.selection.focus();\r\n            }));\r\n\r\n            this.setPlaceholder();\r\n\r\n            this.search.bind(\"focus\", this.bind(function() {\r\n                this.container.addClass(\"select2-container-active\");\r\n            }));\r\n        },\r\n\r\n        // single\r\n        clear: function() {\r\n            this.opts.element.val(\"\");\r\n            this.selection.find(\"span\").empty();\r\n            this.selection.removeData(\"select2-data\");\r\n            this.setPlaceholder();\r\n        },\r\n\r\n        /**\r\n        * Sets selection based on source element's value\r\n        */\r\n        // single\r\n        initSelection: function() {\r\n            var selected;\r\n            if (this.opts.element.val() === \"\") {\r\n                this.close();\r\n                this.setPlaceholder();\r\n            } else {\r\n                var self = this;\r\n                this.opts.initSelection.call(null, this.opts.element, function(selected) {\r\n                    if (selected !== undefined && selected !== null) {\r\n                        self.updateSelection(selected);\r\n                        self.close();\r\n                        self.setPlaceholder();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // single\r\n        prepareOpts: function() {\r\n            var opts = this.parent.prepareOpts.apply(this, arguments);\r\n\r\n            if (opts.element.get(0).tagName.toLowerCase() === \"select\") {\r\n                // install the selection initializer\r\n                opts.initSelection = function(element, callback) {\r\n                    var selected = element.find(\":selected\");\r\n                    // a single select box always has a value, no need to null check 'selected'\r\n                    if ($.isFunction(callback))\r\n                        callback({ id: selected.attr(\"value\"), text: selected.text() });\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        // single\r\n        setPlaceholder: function() {\r\n            var placeholder = this.getPlaceholder();\r\n\r\n            if (this.opts.element.val() === \"\" && placeholder !== undefined) {\r\n\r\n                // check for a first blank option if attached to a select\r\n                if (this.select && this.select.find(\"option:first\").text() !== \"\") return;\r\n\r\n                this.selection.find(\"span\").html(escapeMarkup(placeholder));\r\n\r\n                this.selection.addClass(\"select2-default\");\r\n\r\n                this.selection.find(\"abbr\").hide();\r\n            }\r\n        },\r\n\r\n        // single\r\n        postprocessResults: function(data, initial) {\r\n            var selected = 0, self = this, showSearchInput = true;\r\n\r\n            // find the selected element in the result list\r\n\r\n            this.results.find(\".select2-result-selectable\").each2(function(i, elm) {\r\n                if (equal(self.id(elm.data(\"select2-data\")), self.opts.element.val())) {\r\n                    selected = i;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            // and highlight it\r\n\r\n            this.highlight(selected);\r\n\r\n            // hide the search box if this is the first we got the results and there are a few of them\r\n\r\n            if (initial === true) {\r\n                // TODO below we use data.results.length, but what we really need is something recursive to calc the length\r\n                // TODO in case there are optgroups\r\n                showSearchInput = this.showSearchInput = data.results.length >= this.opts.minimumResultsForSearch;\r\n                this.dropdown.find(\".select2-search\")[showSearchInput ? \"removeClass\" : \"addClass\"](\"select2-search-hidden\");\r\n\r\n                //add \"select2-with-searchbox\" to the container if search box is shown\r\n                $(this.dropdown, this.container)[showSearchInput ? \"addClass\" : \"removeClass\"](\"select2-with-searchbox\");\r\n            }\r\n\r\n        },\r\n\r\n        // single\r\n        onSelect: function(data) {\r\n            var old = this.opts.element.val();\r\n\r\n            this.opts.element.val(this.id(data));\r\n            this.updateSelection(data);\r\n            this.close();\r\n            this.selection.focus();\r\n\r\n            if (!equal(old, this.id(data))) { this.triggerChange(); }\r\n        },\r\n\r\n        // single\r\n        updateSelection: function(data) {\r\n\r\n            var container = this.selection.find(\"span\"), formatted;\r\n\r\n            this.selection.data(\"select2-data\", data);\r\n\r\n            container.empty();\r\n            formatted = this.opts.formatSelection(data, container);\r\n            if (formatted !== undefined) {\r\n                container.append(escapeMarkup(formatted));\r\n            }\r\n\r\n            this.selection.removeClass(\"select2-default\");\r\n\r\n            if (this.opts.allowClear && this.getPlaceholder() !== undefined) {\r\n                this.selection.find(\"abbr\").show();\r\n            }\r\n        },\r\n\r\n        // single\r\n        val: function() {\r\n            var val, data = null, self = this;\r\n\r\n            if (arguments.length === 0) {\r\n                return this.opts.element.val();\r\n            }\r\n\r\n            val = arguments[0];\r\n\r\n            if (this.select) {\r\n                this.select\r\n                    .val(val)\r\n                    .find(\":selected\").each2(function(i, elm) {\r\n                        data = { id: elm.attr(\"value\"), text: elm.text() };\r\n                        return false;\r\n                    });\r\n                this.updateSelection(data);\r\n                this.setPlaceholder();\r\n            } else {\r\n                if (this.opts.initSelection === undefined) {\r\n                    throw new Error(\"cannot call val() if initSelection() is not defined\");\r\n                }\r\n                // val is an id. !val is true for [undefined,null,'']\r\n                if (!val) {\r\n                    this.clear();\r\n                    return;\r\n                }\r\n                this.opts.initSelection(this.opts.element, function(data) {\r\n                    self.opts.element.val(!data ? \"\" : self.id(data));\r\n                    self.updateSelection(data);\r\n                    self.setPlaceholder();\r\n                });\r\n            }\r\n        },\r\n\r\n        // single\r\n        clearSearch: function() {\r\n            this.search.val(\"\");\r\n        },\r\n\r\n        // single\r\n        data: function(value) {\r\n            var data;\r\n\r\n            if (arguments.length === 0) {\r\n                data = this.selection.data(\"select2-data\");\r\n                if (data == undefined) data = null;\r\n                return data;\r\n            } else {\r\n                if (!value || value === \"\") {\r\n                    this.clear();\r\n                } else {\r\n                    this.opts.element.val(!value ? \"\" : this.id(value));\r\n                    this.updateSelection(value);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    MultiSelect2 = clazz(AbstractSelect2, {\r\n\r\n        // multi\r\n        createContainer: function() {\r\n            var container = $(\"<div></div>\", {\r\n                \"class\": \"select2-container select2-container-multi\"\r\n            }).html([\r\n                \"    <ul class='select2-choices'>\",\r\n            //\"<li class='select2-search-choice'><span>California</span><a href=\"javascript:void(0)\" class=\"select2-search-choice-close\"></a></li>\" ,\r\n                \"  <li class='select2-search-field'>\",\r\n                \"    <input type='text' autocomplete='off' style='width: 25px;' class='select2-input'>\",\r\n                \"  </li>\",\r\n                \"</ul>\",\r\n                \"<div class='select2-drop select2-drop-multi' style='display:none;'>\",\r\n                \"   <ul class='select2-results'>\",\r\n                \"   </ul>\",\r\n                \"</div>\"].join(\"\"));\r\n            return container;\r\n        },\r\n\r\n        // multi\r\n        prepareOpts: function() {\r\n            var opts = this.parent.prepareOpts.apply(this, arguments);\r\n\r\n            // TODO validate placeholder is a string if specified\r\n\r\n            if (opts.element.get(0).tagName.toLowerCase() === \"select\") {\r\n                // install sthe selection initializer\r\n                opts.initSelection = function(element, callback) {\r\n\r\n                    var data = [];\r\n                    element.find(\":selected\").each2(function(i, elm) {\r\n                        data.push({ id: elm.attr(\"value\"), text: elm.text() });\r\n                    });\r\n\r\n                    if ($.isFunction(callback))\r\n                        callback(data);\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        // multi\r\n        initContainer: function() {\r\n\r\n            var selector = \".select2-choices\", selection;\r\n\r\n            this.searchContainer = this.container.find(\".select2-search-field\");\r\n            this.selection = selection = this.container.find(selector);\r\n\r\n            this.search.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.BACKSPACE && this.search.val() === \"\") {\r\n                    this.close();\r\n\r\n                    var choices,\r\n                        selected = selection.find(\".select2-search-choice-focus\");\r\n                    if (selected.length > 0) {\r\n                        this.unselect(selected.first());\r\n                        this.search.width(10);\r\n                        killEvent(e);\r\n                        return;\r\n                    }\r\n\r\n                    choices = selection.find(\".select2-search-choice\");\r\n                    if (choices.length > 0) {\r\n                        choices.last().addClass(\"select2-search-choice-focus\");\r\n                    }\r\n                } else {\r\n                    selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    switch (e.which) {\r\n                        case KEY.UP:\r\n                        case KEY.DOWN:\r\n                            this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ENTER:\r\n                        case KEY.TAB:\r\n                            this.selectHighlighted();\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ESC:\r\n                            this.cancel(e);\r\n                            killEvent(e);\r\n                            return;\r\n                    }\r\n                }\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                this.open();\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                }\r\n            }));\r\n\r\n            this.search.bind(\"keyup\", this.bind(this.resizeSearch));\r\n\r\n            this.search.bind(\"blur\", this.bind(function() {\r\n                this.container.removeClass(\"select2-container-active\");\r\n            }));\r\n\r\n            this.container.delegate(selector, \"mousedown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n                this.clearPlaceholder();\r\n                this.open();\r\n                this.focusSearch();\r\n                e.preventDefault();\r\n            }));\r\n\r\n            this.container.delegate(selector, \"focus\", this.bind(function() {\r\n                if (!this.enabled) return;\r\n                this.container.addClass(\"select2-container-active\");\r\n                this.dropdown.addClass(\"select2-drop-active\");\r\n                this.clearPlaceholder();\r\n            }));\r\n\r\n            // set the placeholder if necessary\r\n            this.clearSearch();\r\n        },\r\n\r\n        // multi\r\n        enable: function() {\r\n            if (this.enabled) return;\r\n\r\n            this.parent.enable.apply(this, arguments);\r\n\r\n            this.search.removeAttr(\"disabled\");\r\n        },\r\n\r\n        // multi\r\n        disable: function() {\r\n            if (!this.enabled) return;\r\n\r\n            this.parent.disable.apply(this, arguments);\r\n\r\n            this.search.attr(\"disabled\", true);\r\n        },\r\n\r\n        // multi\r\n        initSelection: function() {\r\n            var data;\r\n            if (this.opts.element.val() === \"\") {\r\n                this.updateSelection([]);\r\n                this.close();\r\n                // set the placeholder if necessary\r\n                this.clearSearch();\r\n            }\r\n            if (this.select || this.opts.element.val() !== \"\") {\r\n                var self = this;\r\n                this.opts.initSelection.call(null, this.opts.element, function(data) {\r\n                    if (data !== undefined && data !== null) {\r\n                        self.updateSelection(data);\r\n                        self.close();\r\n                        // set the placeholder if necessary\r\n                        self.clearSearch();\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // multi\r\n        clearSearch: function() {\r\n            var placeholder = this.getPlaceholder();\r\n\r\n            if (placeholder !== undefined && this.getVal().length === 0 && this.search.hasClass(\"select2-focused\") === false) {\r\n                this.search.val(placeholder).addClass(\"select2-default\");\r\n                // stretch the search box to full width of the container so as much of the placeholder is visible as possible\r\n                this.resizeSearch();\r\n            } else {\r\n                // we set this to \" \" instead of \"\" and later clear it on focus() because there is a firefox bug\r\n                // that does not properly render the caret when the field starts out blank\r\n                this.search.val(\" \").width(10);\r\n            }\r\n        },\r\n\r\n        // multi\r\n        clearPlaceholder: function() {\r\n            if (this.search.hasClass(\"select2-default\")) {\r\n                this.search.val(\"\").removeClass(\"select2-default\");\r\n            } else {\r\n                // work around for the space character we set to avoid firefox caret bug\r\n                if (this.search.val() === \" \") this.search.val(\"\");\r\n            }\r\n        },\r\n\r\n        // multi\r\n        opening: function() {\r\n            this.parent.opening.apply(this, arguments);\r\n\r\n            this.clearPlaceholder();\r\n            this.resizeSearch();\r\n            this.focusSearch();\r\n        },\r\n\r\n        // multi\r\n        close: function() {\r\n            if (!this.opened()) return;\r\n            this.parent.close.apply(this, arguments);\r\n        },\r\n\r\n        // multi\r\n        focus: function() {\r\n            this.close();\r\n            this.search.focus();\r\n        },\r\n\r\n        // multi\r\n        isFocused: function() {\r\n            return this.search.hasClass(\"select2-focused\");\r\n        },\r\n\r\n        // multi\r\n        updateSelection: function(data) {\r\n            var ids = [], filtered = [], self = this;\r\n\r\n            // filter out duplicates\r\n            $(data).each(function() {\r\n                if (indexOf(self.id(this), ids) < 0) {\r\n                    ids.push(self.id(this));\r\n                    filtered.push(this);\r\n                }\r\n            });\r\n            data = filtered;\r\n\r\n            this.selection.find(\".select2-search-choice\").remove();\r\n            $(data).each(function() {\r\n                self.addSelectedChoice(this);\r\n            });\r\n            self.postprocessResults();\r\n        },\r\n\r\n        // multi\r\n        onSelect: function(data) {\r\n            this.addSelectedChoice(data);\r\n            if (this.select) { this.postprocessResults(); }\r\n\r\n            if (this.opts.closeOnSelect) {\r\n                this.close();\r\n                this.search.width(10);\r\n            } else {\r\n                this.search.width(10);\r\n                this.resizeSearch();\r\n\r\n                if (this.countSelectableResults() > 0) {\r\n                    this.positionDropdown();\r\n                } else {\r\n                    // if nothing left to select close\r\n                    this.close();\r\n                }\r\n            }\r\n\r\n            // since its not possible to select an element that has already been\r\n            // added we do not need to check if this is a new element before firing change\r\n            this.triggerChange({ added: data });\r\n\r\n            this.focusSearch();\r\n        },\r\n\r\n        // multi\r\n        cancel: function() {\r\n            this.close();\r\n            this.focusSearch();\r\n        },\r\n\r\n        // multi\r\n        addSelectedChoice: function(data) {\r\n            var choice = $(\r\n                    \"<li class='select2-search-choice'>\" +\r\n                    \"    <div></div>\" +\r\n                    \"    <a href='javascript:void(0)' class='select2-search-choice-close' tabindex='-1'></a>\" +\r\n                    \"</li>\"),\r\n                id = this.id(data),\r\n                val = this.getVal(),\r\n                formatted;\r\n\r\n            formatted = this.opts.formatSelection(data, choice);\r\n            choice.find(\"div\").replaceWith(\"<div>\" + escapeMarkup(formatted) + \"</div>\");\r\n            choice.find(\".select2-search-choice-close\")\r\n                .bind(\"click dblclick\", this.bind(function(e) {\r\n                    if (!this.enabled) return;\r\n\r\n                    $(e.target).closest(\".select2-search-choice\").fadeOut('fast').animate({ width: \"hide\" }, 50, this.bind(function() {\r\n                        this.unselect($(e.target));\r\n                        this.selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n                        this.close();\r\n                        this.focusSearch();\r\n                    })).dequeue();\r\n                    killEvent(e);\r\n                })).bind(\"focus\", this.bind(function() {\r\n                    if (!this.enabled) return;\r\n                    this.container.addClass(\"select2-container-active\");\r\n                    this.dropdown.addClass(\"select2-drop-active\");\r\n                }));\r\n\r\n            choice.data(\"select2-data\", data);\r\n            choice.insertBefore(this.searchContainer);\r\n\r\n            val.push(id);\r\n            this.setVal(val);\r\n        },\r\n\r\n        // multi\r\n        unselect: function(selected) {\r\n            var val = this.getVal(),\r\n                data,\r\n                index;\r\n\r\n            selected = selected.closest(\".select2-search-choice\");\r\n\r\n            if (selected.length === 0) {\r\n                throw \"Invalid argument: \" + selected + \". Must be .select2-search-choice\";\r\n            }\r\n\r\n            data = selected.data(\"select2-data\");\r\n\r\n            index = indexOf(this.id(data), val);\r\n\r\n            if (index >= 0) {\r\n                val.splice(index, 1);\r\n                this.setVal(val);\r\n                if (this.select) this.postprocessResults();\r\n            }\r\n            selected.remove();\r\n            this.triggerChange({ removed: data });\r\n        },\r\n\r\n        // multi\r\n        postprocessResults: function() {\r\n            var val = this.getVal(),\r\n                choices = this.results.find(\".select2-result-selectable\"),\r\n                compound = this.results.find(\".select2-result-with-children\"),\r\n                self = this;\r\n\r\n            choices.each2(function(i, choice) {\r\n                var id = self.id(choice.data(\"select2-data\"));\r\n                if (indexOf(id, val) >= 0) {\r\n                    choice.addClass(\"select2-disabled\").removeClass(\"select2-result-selectable\");\r\n                } else {\r\n                    choice.removeClass(\"select2-disabled\").addClass(\"select2-result-selectable\");\r\n                }\r\n            });\r\n\r\n            compound.each2(function(i, e) {\r\n                if (e.find(\".select2-result-selectable\").length == 0) {\r\n                    e.addClass(\"select2-disabled\");\r\n                } else {\r\n                    e.removeClass(\"select2-disabled\");\r\n                }\r\n            });\r\n\r\n            choices.each2(function(i, choice) {\r\n                if (!choice.hasClass(\"select2-disabled\") && choice.hasClass(\"select2-result-selectable\")) {\r\n                    self.highlight(0);\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        // multi\r\n        resizeSearch: function() {\r\n\r\n            var minimumWidth, left, maxWidth, containerLeft, searchWidth,\r\n            \tsideBorderPadding = getSideBorderPadding(this.search);\r\n\r\n            minimumWidth = measureTextWidth(this.search) + 10;\r\n\r\n            left = this.search.offset().left;\r\n\r\n            maxWidth = this.selection.width();\r\n            containerLeft = this.selection.offset().left;\r\n\r\n            searchWidth = maxWidth - (left - containerLeft) - sideBorderPadding;\r\n\r\n            if (searchWidth < minimumWidth) {\r\n                searchWidth = maxWidth - sideBorderPadding;\r\n            }\r\n\r\n            if (searchWidth < 40) {\r\n                searchWidth = maxWidth - sideBorderPadding;\r\n            }\r\n            this.search.width(searchWidth);\r\n        },\r\n\r\n        // multi\r\n        getVal: function() {\r\n            var val;\r\n            if (this.select) {\r\n                val = this.select.val();\r\n                return val === null ? [] : val;\r\n            } else {\r\n                val = this.opts.element.val();\r\n                return splitVal(val, this.opts.separator);\r\n            }\r\n        },\r\n\r\n        // multi\r\n        setVal: function(val) {\r\n            var unique;\r\n            if (this.select) {\r\n                this.select.val(val);\r\n            } else {\r\n                unique = [];\r\n                // filter out duplicates\r\n                $(val).each(function() {\r\n                    if (indexOf(this, unique) < 0) unique.push(this);\r\n                });\r\n                this.opts.element.val(unique.length === 0 ? \"\" : unique.join(this.opts.separator));\r\n            }\r\n        },\r\n\r\n        // multi\r\n        val: function() {\r\n            var val, data = [], self = this;\r\n\r\n            if (arguments.length === 0) {\r\n                return this.getVal();\r\n            }\r\n\r\n            val = arguments[0];\r\n\r\n            if (!val) {\r\n                this.opts.element.val(\"\");\r\n                this.updateSelection([]);\r\n                this.clearSearch();\r\n                return;\r\n            }\r\n\r\n            // val is a list of ids\r\n            this.setVal(val);\r\n\r\n            if (this.select) {\r\n                this.select.find(\":selected\").each(function() {\r\n                    data.push({ id: $(this).attr(\"value\"), text: $(this).text() });\r\n                });\r\n                this.updateSelection(data);\r\n            } else {\r\n                if (this.opts.initSelection === undefined) {\r\n                    throw new Error(\"val() cannot be called if initSelection() is not defined\")\r\n                }\r\n\r\n                this.opts.initSelection(this.opts.element, function(data) {\r\n                    var ids = $(data).map(self.id);\r\n                    self.setVal(ids);\r\n                    self.updateSelection(data);\r\n                    self.clearSearch();\r\n                });\r\n            }\r\n            this.clearSearch();\r\n        },\r\n\r\n        // multi\r\n        onSortStart: function() {\r\n            if (this.select) {\r\n                throw new Error(\"Sorting of elements is not supported when attached to <select>. Attach to <input type='hidden'/> instead.\");\r\n            }\r\n\r\n            // collapse search field into 0 width so its container can be collapsed as well\r\n            this.search.width(0);\r\n            // hide the container\r\n            this.searchContainer.hide();\r\n        },\r\n\r\n        // multi\r\n        onSortEnd: function() {\r\n\r\n            var val = [], self = this;\r\n\r\n            // show search and move it to the end of the list\r\n            this.searchContainer.show();\r\n            // make sure the search container is the last item in the list\r\n            this.searchContainer.appendTo(this.searchContainer.parent());\r\n            // since we collapsed the width in dragStarted, we resize it here\r\n            this.resizeSearch();\r\n\r\n            // update selection\r\n\r\n            this.selection.find(\".select2-search-choice\").each(function() {\r\n                val.push(self.opts.id($(this).data(\"select2-data\")));\r\n            });\r\n            this.setVal(val);\r\n            this.triggerChange();\r\n        },\r\n\r\n        // multi\r\n        data: function(values) {\r\n            var self = this, ids;\r\n            if (arguments.length === 0) {\r\n                return this.selection\r\n                     .find(\".select2-search-choice\")\r\n                     .map(function() { return $(this).data(\"select2-data\"); })\r\n                     .get();\r\n            } else {\r\n                if (!values) { values = []; }\r\n                ids = $.map(values, function(e) { return self.opts.id(e) });\r\n                this.setVal(ids);\r\n                this.updateSelection(values);\r\n                this.clearSearch();\r\n            }\r\n        }\r\n    });\r\n\r\n    $.fn.select2 = function() {\r\n\r\n        var args = Array.prototype.slice.call(arguments, 0),\r\n            opts,\r\n            select2,\r\n            value, multiple, allowedMethods = [\"val\", \"destroy\", \"open\", \"close\", \"focus\", \"isFocused\", \"container\", \"onSortStart\", \"onSortEnd\", \"enable\", \"disable\", \"positionDropdown\", \"data\"];\r\n\r\n        this.each(function() {\r\n            if (args.length === 0 || typeof (args[0]) === \"object\") {\r\n                opts = args.length === 0 ? {} : $.extend({}, args[0]);\r\n                opts.element = $(this);\r\n\r\n                if (opts.element.get(0).tagName.toLowerCase() === \"select\") {\r\n                    multiple = opts.element.attr(\"multiple\");\r\n                } else {\r\n                    multiple = opts.multiple || false;\r\n                    if (\"tags\" in opts) { opts.multiple = multiple = true; }\r\n                }\r\n\r\n                select2 = multiple ? new MultiSelect2() : new SingleSelect2();\r\n                select2.init(opts);\r\n            } else if (typeof (args[0]) === \"string\") {\r\n\r\n                if (indexOf(args[0], allowedMethods) < 0) {\r\n                    throw \"Unknown method: \" + args[0];\r\n                }\r\n\r\n                value = undefined;\r\n                select2 = $(this).data(\"select2\");\r\n                if (select2 === undefined) return;\r\n                if (args[0] === \"container\") {\r\n                    value = select2.container;\r\n                } else {\r\n                    value = select2[args[0]].apply(select2, args.slice(1));\r\n                }\r\n                if (value !== undefined) { return false; }\r\n            } else {\r\n                throw \"Invalid arguments to select2 plugin: \" + args;\r\n            }\r\n        });\r\n        return (value === undefined) ? this : value;\r\n    };\r\n\r\n    // plugin defaults, accessible to users\r\n    $.fn.select2.defaults = {\r\n        width: \"copy\",\r\n        closeOnSelect: true,\r\n        containerCss: {},\r\n        dropdownCss: {},\r\n        containerCssClass: \"\",\r\n        dropdownCssClass: \"\",\r\n        formatResult: function(result, container, query) {\r\n            var markup = [];\r\n            markMatch(result.text, query.term, markup);\r\n            return markup.join(\"\");\r\n        },\r\n        formatSelection: function(data, container) {\r\n            return data.text;\r\n        },\r\n        formatNoMatches: function() { return \"No matches found\"; },\r\n        formatInputTooShort: function(input, min) { return \"Please enter \" + (min - input.length) + \" more characters\"; },\r\n        formatSelectionTooBig: function(limit) { return \"You can only select \" + limit + \" items\"; },\r\n        formatLoadMore: function(pageNumber) { return \"Loading more results...\"; },\r\n        minimumResultsForSearch: 0,\r\n        minimumInputLength: 0,\r\n        maximumSelectionSize: 0,\r\n        id: function(e) { return e.id; },\r\n        matcher: function(term, text) {\r\n            return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;\r\n        }\r\n    };\r\n\r\n    // exports\r\n    window.Select2 = {\r\n        query: {\r\n            ajax: ajax,\r\n            local: local,\r\n            tags: tags\r\n        }, util: {\r\n            debounce: debounce,\r\n            markMatch: markMatch\r\n        }, \"class\": {\r\n            \"abstract\": AbstractSelect2,\r\n            \"single\": SingleSelect2,\r\n            \"multi\": MultiSelect2\r\n        }\r\n    };\r\n\r\n} (jQuery));"]],"start1":0,"start2":0,"length1":0,"length2":83786}]],"length":83786,"saved":false}
{"contributors":[],"silentsave":true,"ts":1370636145513,"patch":[[{"diffs":[[0,"sion: 3."],[1,"4."],[0,"0 Timest"]],"start1":39,"start2":39,"length1":16,"length2":18},{"diffs":[[0,"Tue "],[-1,"Jul 31 21:09:16"],[1,"May 14 08:27:33"],[0," PDT 201"],[-1,"2"],[1,"3"],[0,"\r\n\r\n"],[-1,"L"],[1,"This software is l"],[0,"icen"]],"start1":62,"start2":62,"length1":37,"length2":54},{"diffs":[[0,"0 (the \""],[1,"Apache "],[0,"License\""]],"start1":156,"start2":156,"length1":16,"length2":23},{"diffs":[[0,"se\")"],[-1,"; you may not use this work except in\r\ncompliance with"],[1," or the GNU\r\nGeneral Public License version 2 (the \"GPL License\"). You may choose either license to govern your\r\nuse of this software only upon the condition that you accept all of the terms of either the Apache\r\nLicense or"],[0," the "],[1,"GPL "],[0,"License."],[-1," "],[1,"\r\n\r\n"],[0,"You "]],"start1":176,"start2":176,"length1":76,"length2":252},{"diffs":[[0,"the "],[1,"Apache "],[0,"License "],[-1,"in"],[1,"and"],[0," the "],[-1,"LICENSE file, or"],[1,"GPL License"],[0," at:\r\n\r\n"],[1,"    "],[0,"http"]],"start1":449,"start2":449,"length1":47,"length2":54},{"diffs":[[0,"NSE-2.0\r"],[1,"\n    http://www.gnu.org/licenses/gpl-2.0.html\r"],[0,"\n\r\nUnles"]],"start1":534,"start2":534,"length1":16,"length2":62},{"diffs":[[0,"ibuted under the"],[1,"\r\nApache"],[0," License is\r\ndis"]],"start1":664,"start2":664,"length1":32,"length2":40},{"diffs":[[0,"License "],[-1,"is\r\n"],[1,"or the GPL Licesnse is "],[0,"distribu"]],"start1":689,"start2":689,"length1":20,"length2":39},{"diffs":[[0,"NTIES OR"],[-1," "],[1,"\r\n"],[0,"CONDITIO"]],"start1":766,"start2":766,"length1":17,"length2":18},{"diffs":[[0,"ied."],[-1,"\r\n"],[1," "],[0,"See the "],[1,"Apache License and the GPL "],[0,"Lice"]],"start1":822,"start2":822,"length1":18,"length2":44},{"diffs":[[0," License for"],[-1," "],[1,"\r\n"],[0,"the specific"]],"start1":861,"start2":861,"length1":25,"length2":26},{"diffs":[[0,"der the "],[1,"Apache License and the GPL "],[0,"License."]],"start1":937,"start2":937,"length1":16,"length2":43},{"diffs":[[0,"e.\r\n*/\r\n"],[1," "],[0,"(functio"]],"start1":978,"start2":978,"length1":16,"length2":17},{"diffs":[[0,"function"],[1," "],[0,"($) {\r\n "]],"start1":988,"start2":988,"length1":16,"length2":17},{"diffs":[[0," ($) {\r\n    "],[1," "],[0,"if"],[-1," "],[0,"(typeof $.fn"]],"start1":996,"start2":996,"length1":27,"length2":27},{"diffs":[[0,"efined\")"],[-1," "],[0,"{\r\n "],[-1,"       "],[1,"\t\t"],[0,"$.fn.ext"]],"start1":1037,"start2":1037,"length1":28,"length2":22},{"diffs":[[0,"{\r\n "],[-1,"           /*\r\n            "],[1,"\t\t\t/*\r\n\t\t\t"],[0,"* 4-"]],"start1":1063,"start2":1063,"length1":35,"length2":18},{"diffs":[[0,"cement\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"* use it"]],"start1":1108,"start2":1108,"length1":28,"length2":19},{"diffs":[[0,"on\r\n"],[-1,"            */\r\n            "],[1,"\t\t\t*/\r\n\t\t\t"],[0,"each2"],[1," "],[0,": fu"]],"start1":1196,"start2":1196,"length1":41,"length2":24},{"diffs":[[0,"tion"],[1," "],[0,"(c) {\r\n"],[-1,"                "],[1,"\t\t\t\t"],[0,"var "]],"start1":1222,"start2":1222,"length1":31,"length2":20},{"diffs":[[0,"ength;\r\n"],[-1,"                "],[1,"\t\t\t\t"],[0,"while (\r"]],"start1":1272,"start2":1272,"length1":32,"length2":20},{"diffs":[[0,"hile (\r\n"],[-1,"    "],[1,"\t"],[0,"\t\t\t\t++i "]],"start1":1285,"start2":1285,"length1":20,"length2":17},{"diffs":[[0,");\r\n"],[-1,"                return this;\r\n            }\r\n        "],[1,"\t\t\t\treturn this;\r\n\t\t\t}\r\n \t\t"],[0,"});\r\n "],[-1,"   "],[1,"\t"],[0,"}\r\n}"]],"start1":1426,"start2":1426,"length1":70,"length2":42},{"diffs":[[0,"function"],[1," "],[0,"($, unde"]],"start1":1483,"start2":1483,"length1":16,"length2":17},{"diffs":[[0,"d, sizer"],[-1,";"],[1,",\r\n        lastMousePosition, $document, scrollBarDimensions,"],[0,"\r\n\r\n    "]],"start1":1714,"start2":1714,"length1":17,"length2":77},{"diffs":[[0,"sArrow: function"],[-1,""],[0,""],[1," "],[0,"(k) {\r\n         "]],"start1":2143,"start2":2143,"length1":32,"length2":33},{"diffs":[[0," {\r\n            "],[-1,"    "],[0,"case KEY.LEFT:\r\n"]],"start1":2229,"start2":2229,"length1":36,"length2":32},{"diffs":[[0," KEY.LEFT:\r\n"],[-1,"    "],[0,"            "]],"start1":2249,"start2":2249,"length1":28,"length2":24},{"diffs":[[0,"T:\r\n            "],[-1,"    "],[0,"case KEY.UP:\r\n  "]],"start1":2286,"start2":2286,"length1":36,"length2":32},{"diffs":[[0,"  case KEY.UP:\r\n"],[-1,"    "],[0,"            case"]],"start1":2300,"start2":2300,"length1":36,"length2":32},{"diffs":[[0,"                "],[-1,"    "],[0,"return true;\r\n  "]],"start1":2344,"start2":2344,"length1":36,"length2":32},{"diffs":[[0,"ontrol: function"],[-1,"(k"],[1," (e"],[0,") {\r\n           "]],"start1":2439,"start2":2439,"length1":34,"length2":35},{"diffs":[[0,"    "],[1,"var "],[0,"k = "],[-1,"k"],[1,"e"],[0,".which"],[-1," ? k.which : k"],[0,";\r\n "]],"start1":2471,"start2":2471,"length1":33,"length2":23},{"diffs":[[0," {\r\n            "],[-1,"   "],[-1," "],[0,"case KEY.SHIFT:\r"]],"start1":2515,"start2":2515,"length1":36,"length2":32},{"diffs":[[0,"T:\r\n            "],[-1,"    "],[0,"case KEY.CTRL:\r\n"]],"start1":2544,"start2":2544,"length1":36,"length2":32},{"diffs":[[0,"L:\r\n            "],[-1,"   "],[-1," "],[0,"case KEY.ALT:\r\n "]],"start1":2572,"start2":2572,"length1":36,"length2":32},{"diffs":[[0,"e KEY.ALT:\r\n"],[-1,"    "],[0,"            "]],"start1":2591,"start2":2591,"length1":28,"length2":24},{"diffs":[[0,"    if ("],[-1,"k"],[1,"e"],[0,".metaKey"]],"start1":2658,"start2":2658,"length1":17,"length2":17},{"diffs":[[0,"function"],[-1,""],[0,""],[1," "],[0,"(k) {\r\n "]],"start1":2755,"start2":2755,"length1":16,"length2":17},{"diffs":[[0,"        }\r\n    }"],[1,",\r\n    MEASURE_SCROLLBAR_TEMPLATE = \"<div class='select2-measure-scrollbar'></div>\";\r\n\r\n    $document = $(document)"],[0,";\r\n\r\n    nextUid"]],"start1":2853,"start2":2853,"length1":32,"length2":147},{"diffs":[[0," nextUid"],[-1," = "],[1,"="],[0,"(functio"]],"start1":2992,"start2":2992,"length1":19,"length2":17},{"diffs":[[0," counter"],[-1," = "],[1,"="],[0,"1; retur"]],"start1":3018,"start2":3018,"length1":19,"length2":17},{"diffs":[[0,"}; }"],[-1," "],[0,"());\r\n\r\n"],[-1,"    function escapeMarkup(markup) {\r\n        if (markup && typeof (markup) === \"string\") {\r\n            return markup.replace(\"&\", \"&amp;\");\r\n        } else {\r\n            return markup;\r\n        }\r\n    }\r\n\r\n"],[0,"    "]],"start1":3068,"start2":3068,"length1":225,"length2":16},{"diffs":[[0,"ngth"],[-1,", v;\r\n"],[1,";"],[0,"\r\n  "]],"start1":3149,"start2":3149,"length1":14,"length2":9},{"diffs":[[0,"    "],[-1,"if (typeof value === \"undefined\") {\r\n            return -1;\r\n        }\r\n\r\n        if (value.constructor === String) {\r\n            for (; i < l; i = i + 1) if (value.localeCompare("],[1,"for (; i < l; i = i + 1) {\r\n            if (equal(value, "],[0,"arra"]],"start1":3160,"start2":3160,"length1":188,"length2":65},{"diffs":[[0,"rray[i])"],[-1," === 0"],[0,") return"]],"start1":3222,"start2":3222,"length1":22,"length2":16},{"diffs":[[0,"rn i;\r\n        }"],[-1," else {"],[0,"\r\n            fo"]],"start1":3236,"start2":3236,"length1":39,"length2":32},{"diffs":[[0,"    "],[-1,"    for (; i < l; i = i + 1) {\r\n                v = array[i];\r\n                if (v.constructor === String) {\r\n                    if (v.localeCompare(value) === 0) return i;\r\n                } else {\r\n                    if (v === value) return i;\r\n                }\r\n   "],[1,"return -1;\r\n    }\r\n\r\n    function measureScrollbar () {\r\n        var $template = $( MEASURE_SCROLLBAR_TEMPLATE );\r\n        $template.appendTo('body');\r\n\r\n        var dim = {\r\n            width: $template.width() - $template[0].clientWidth,\r\n            height: $template.height() - $template[0].clientHeight\r\n"],[0,"        "],[-1," "],[0,"}"],[1,";"],[0,"\r\n  "]],"start1":3258,"start2":3258,"length1":291,"length2":327},{"diffs":[[0,"    };\r\n        "],[-1,"}"],[1,"$template.remove();\r\n"],[0,"\r\n        return"]],"start1":3575,"start2":3575,"length1":33,"length2":53},{"diffs":[[0,"\n        return "],[-1,"-1"],[1,"dim"],[0,";\r\n    }\r\n\r\n    "]],"start1":3613,"start2":3613,"length1":34,"length2":35},{"diffs":[[0,"\n\r\n    /**\r\n"],[1," "],[0,"    * Compar"]],"start1":3641,"start2":3641,"length1":24,"length2":25},{"diffs":[[0,"nd b"],[-1," taking into account that a and b may be strings, in which case localeCompare is used"],[0,"\r\n"],[1," "],[0,"    "]],"start1":3684,"start2":3684,"length1":95,"length2":11},{"diffs":[[0,"aram a\r\n    "],[1," "],[0,"* @param b\r\n"]],"start1":3699,"start2":3699,"length1":24,"length2":25},{"diffs":[[0,"* @param b\r\n"],[1," "],[0,"    */\r\n    "]],"start1":3712,"start2":3712,"length1":24,"length2":25},{"diffs":[[0,"rn a"],[-1,".localeCompare(b) === 0;\r\n        if (b.constructor === String) return b.localeCompare(a) === 0;"],[1,"+'' === b+''; // IE requires a+'' instead of just a\r\n        if (b.constructor === String) return b+'' === a+''; // IE requires b+'' instead of just b"],[0,"\r\n  "]],"start1":3954,"start2":3954,"length1":104,"length2":158},{"diffs":[[0,"\n\r\n    /**\r\n"],[1," "],[0,"    * Splits"]],"start1":4139,"start2":4139,"length1":24,"length2":25},{"diffs":[[0,"ty\r\n    "],[1," "],[0,"* string"]],"start1":4265,"start2":4265,"length1":16,"length2":17},{"diffs":[[0," * strings\r\n"],[1," "],[0,"    * @param"]],"start1":4273,"start2":4273,"length1":24,"length2":25},{"diffs":[[0,"string\r\n    "],[1," "],[0,"* @param sep"]],"start1":4299,"start2":4299,"length1":24,"length2":25},{"diffs":[[0,"arator\r\n"],[1," "],[0,"    */\r\n"]],"start1":4324,"start2":4324,"length1":16,"length2":17},{"diffs":[[0,".outerWidth("],[1,"false"],[0,") - element."]],"start1":4689,"start2":4689,"length1":24,"length2":29},{"diffs":[[0," var key"],[-1," = "],[1,"="],[0,"\"keyup-c"]],"start1":4793,"start2":4793,"length1":19,"length2":17},{"diffs":[[0,"    element."],[-1,"bind"],[1,"on"],[0,"(\"keydown\", "]],"start1":4829,"start2":4829,"length1":28,"length2":26},{"diffs":[[0,"ydown\", function"],[1," "],[0,"() {\r\n          "]],"start1":4847,"start2":4847,"length1":32,"length2":33},{"diffs":[[0,"element."],[-1,"bind"],[1,"on"],[0,"(\"keyup\""]],"start1":5015,"start2":5015,"length1":20,"length2":18},{"diffs":[[0,"keyup\", function"],[1," "],[0,"() {\r\n          "]],"start1":5027,"start2":5027,"length1":32,"length2":33},{"diffs":[[0," var val"],[-1," "],[0,"= $.data"]],"start1":5061,"start2":5061,"length1":17,"length2":16},{"diffs":[[0,"   $"],[-1,"(document).delegate(\"*\", \"mousemove\", function(e) {\r\n        $.data(document, \"select2-lastpos\", { x: e.pageX, y: e.pageY });\r\n    });\r\n\r\n    /**\r\n    * filters mouse events so an event is fired only if the mouse moved.\r\n    *\r\n    * filters out mouse events that occur when mouse is stationary but\r\n    * the elements under the pointer are scrolled.\r\n    */\r\n    function installFilteredMouseMove(element) {\r\n        element.bind(\"mousemove\", function(e) {\r\n            var lastpos = $.data(document, \"select2-lastpos\");\r\n            if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {\r\n                $(e.target).trigger(\"mousemove-filtered\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n    * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made\r\n    * within the last quietMillis milliseconds.\r\n    *\r\n    * @param quietMillis number of milliseconds to wait before invoking fn\r\n    * @param fn function to be debounced\r\n    * @return debounced version of fn\r\n    */\r\n    function debounce(quietMillis, fn) {\r\n        var timeout;\r\n        return function() {\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(fn, quietMillis);\r\n        };\r\n    }\r\n\r\n    /**\r\n    * A simple implementation of a thunk\r\n    * @param formula function used to lazily initialize the thunk\r\n    * @return {Function}\r\n    */\r\n    function thunk(formula) {\r\n        var evaluated = false,\r\n            value;\r\n        return function() {\r\n            if (evaluated === false) { value = formula(); evaluated = true; }\r\n            return value;\r\n        };\r\n    };\r\n\r\n    function installDebouncedScroll(threshold, element) {\r\n        var notify = debounce(threshold, function(e) { element.trigger(\"scroll-debounced\", e); });\r\n        element.bind(\"scroll\", function(e) {\r\n            if (indexOf(e.target, element.get()) >= 0) notify(e);\r\n        });\r\n    }\r\n\r\n    function killEvent(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    function measureTextWidth(e) {\r\n        if (!sizer) {\r\n            var style = e[0].currentStyle || window.getComputedStyle(e[0], null);\r\n            sizer = $(\"<div></div>\").css({\r\n                position: \"absolute\",\r\n                left: \"-10000px\",\r\n                top: \"-10000px\",\r\n                display: \"none\",\r\n                fontSize: style.fontSize,\r\n                fontFamily: style.fontFamily,\r\n                fontStyle: style.fontStyle,\r\n                fontWeight: style.fontWeight,\r\n                letterSpacing: style.letterSpacing,\r\n                textTransform: style.textTransform,\r\n                whiteSpace: \"nowrap\"\r\n            });\r\n            $(\"body\").append(sizer);\r\n        }\r\n        sizer.text(e.val());\r\n        return sizer.width();\r\n    }\r\n\r\n    function markMatch(text, term, markup) {\r\n        var match = text.toUpperCase().indexOf(term.toUpperCase()),\r\n            tl = term.length;\r\n\r\n        if (match < 0) {\r\n            markup.push(text);\r\n            return;\r\n        }\r\n\r\n        markup.push(text.substring(0, match));\r\n        markup.push(\"<span class='select2-match'>\");\r\n        markup.push(text.substring(match, match + tl));\r\n        markup.push(\"</span>\");\r\n        markup.push(text.substring(match + tl, text.length));\r\n    }\r\n\r\n    /**\r\n    * Produces an ajax-based query function\r\n    *\r\n    * @param options object containing configuration paramters\r\n    * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax\r\n    * @param options.url url for the data\r\n    * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.\r\n    * @param options.dataType request data type: ajax, jsonp, other datatatypes supported by jQuery's $.ajax function or the transport function if specified\r\n    * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often\r\n    * @param options.results a function(remoteData, pageNumber) that converts data returned form the remote request to the format expected by Select2.\r\n    *      The expected format is an object containing the following keys:\r\n    *      results array of objects that will be used as choices\r\n    *      more (optional) boolean indicating whether there are more results available\r\n    *      Example: {results:[{id:1, text:'Red'},{id:2, text:'Blue'}], more:true}\r\n    */\r\n    function ajax(options) {\r\n        var timeout, // current scheduled but not yet executed request\r\n            requestSequence = 0, // sequence used to drop out-of-order responses\r\n            handler = null,\r\n            quietMillis = options.quietMillis || 100;\r\n\r\n        return function(query) {\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                requestSequence += 1; // increment the sequence\r\n                var requestNumber = requestSequence, // this request's sequence number\r\n                    data = options.data, // ajax data function\r\n                    transport = options.transport || $.ajax,\r\n                    type = options.type || 'GET'; // set type of request (GET or POST)\r\n\r\n                data = data.call(this, query.term, query.page, query.context);\r\n\r\n                if (null !== handler) { handler.abort(); }\r\n\r\n                handler = transport.call(null, {\r\n                    url: options."],[1,"document.on(\"mousemove\", function (e) {\r\n        lastMousePosition = {x: e.pageX, y: e.pageY};\r\n    });\r\n\r\n    /**\r\n     * filters mouse events so an event is fired only if the mouse moved.\r\n     *\r\n     * filters out mouse events that occur when mouse is stationary but\r\n     * the elements under the pointer are scrolled.\r\n     */\r\n    function installFilteredMouseMove(element) {\r\n\t    element.on(\"mousemove\", function (e) {\r\n            var lastpos = lastMousePosition;\r\n            if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {\r\n                $(e.target).trigger(\"mousemove-filtered\", e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made\r\n     * within the last quietMillis milliseconds.\r\n     *\r\n     * @param quietMillis number of milliseconds to wait before invoking fn\r\n     * @param fn function to be debounced\r\n     * @param ctx object to be used as this reference within fn\r\n     * @return debounced version of fn\r\n     */\r\n    function debounce(quietMillis, fn, ctx) {\r\n        ctx = ctx || undefined;\r\n        var timeout;\r\n        return function () {\r\n            var args = arguments;\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(function() {\r\n                fn.apply(ctx, args);\r\n            }, quietMillis);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * A simple implementation of a thunk\r\n     * @param formula function used to lazily initialize the thunk\r\n     * @return {Function}\r\n     */\r\n    function thunk(formula) {\r\n        var evaluated = false,\r\n            value;\r\n        return function() {\r\n            if (evaluated === false) { value = formula(); evaluated = true; }\r\n            return value;\r\n        };\r\n    };\r\n\r\n    function installDebouncedScroll(threshold, element) {\r\n        var notify = debounce(threshold, function (e) { element.trigger(\"scroll-debounced\", e);});\r\n        element.on(\"scroll\", function (e) {\r\n            if (indexOf(e.target, element.get()) >= 0) notify(e);\r\n        });\r\n    }\r\n\r\n    function focus($el) {\r\n        if ($el[0] === document.activeElement) return;\r\n\r\n        /* set the focus in a 0 timeout - that way the focus is set after the processing\r\n            of the current event has finished - which seems like the only reliable way\r\n            to set focus */\r\n        window.setTimeout(function() {\r\n            var el=$el[0], pos=$el.val().length, range;\r\n\r\n            $el.focus();\r\n\r\n            /* make sure el received focus so we do not error out when trying to manipulate the caret.\r\n                sometimes modals or others listeners may steal it after its set */\r\n            if ($el.is(\":visible\") && el === document.activeElement) {\r\n\r\n                /* after the focus is set move the caret to the end, necessary when we val()\r\n                    just before setting focus */\r\n                if(el.setSelectionRange)\r\n                {\r\n                    el.setSelectionRange(pos, pos);\r\n                }\r\n                else if (el.createTextRange) {\r\n                    range = el.createTextRange();\r\n                    range.collapse(false);\r\n                    range.select();\r\n                }\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    function getCursorInfo(el) {\r\n        el = $(el)[0];\r\n        var offset = 0;\r\n        var length = 0;\r\n        if ('selectionStart' in el) {\r\n            offset = el.selectionStart;\r\n            length = el.selectionEnd - offset;\r\n        } else if ('selection' in document) {\r\n            el.focus();\r\n            var sel = document.selection.createRange();\r\n            length = document.selection.createRange().text.length;\r\n            sel.moveStart('character', -el.value.length);\r\n            offset = sel.text.length - length;\r\n        }\r\n        return { offset: offset, length: length };\r\n    }\r\n\r\n    function killEvent(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n    function killEventImmediately(event) {\r\n        event.preventDefault();\r\n        event.stopImmediatePropagation();\r\n    }\r\n\r\n    function measureTextWidth(e) {\r\n        if (!sizer){\r\n        \tvar style = e[0].currentStyle || window.getComputedStyle(e[0], null);\r\n        \tsizer = $(document.createElement(\"div\")).css({\r\n\t            position: \"absolute\",\r\n\t            left: \"-10000px\",\r\n\t            top: \"-10000px\",\r\n\t            display: \"none\",\r\n\t            fontSize: style.fontSize,\r\n\t            fontFamily: style.fontFamily,\r\n\t            fontStyle: style.fontStyle,\r\n\t            fontWeight: style.fontWeight,\r\n\t            letterSpacing: style.letterSpacing,\r\n\t            textTransform: style.textTransform,\r\n\t            whiteSpace: \"nowrap\"\r\n\t        });\r\n            sizer.attr(\"class\",\"select2-sizer\");\r\n        \t$(\"body\").append(sizer);\r\n        }\r\n        sizer.text(e.val());\r\n        return sizer.width();\r\n    }\r\n\r\n    function syncCssClasses(dest, src, adapter) {\r\n        var classes, replacements = [], adapted;\r\n\r\n        classes = dest.attr(\"class\");\r\n        if (classes) {\r\n            classes = '' + classes; // for IE which returns object\r\n            $(classes.split(\" \")).each2(function() {\r\n                if (this.indexOf(\"select2-\") === 0) {\r\n                    replacements.push(this);\r\n                }\r\n            });\r\n        }\r\n        classes = src.attr(\"class\");\r\n        if (classes) {\r\n            classes = '' + classes; // for IE which returns object\r\n            $(classes.split(\" \")).each2(function() {\r\n                if (this.indexOf(\"select2-\") !== 0) {\r\n                    adapted = adapter(this);\r\n                    if (adapted) {\r\n                        replacements.push(this);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        dest.attr(\"class\", replacements.join(\" \"));\r\n    }\r\n\r\n\r\n    function markMatch(text, term, markup, escapeMarkup) {\r\n        var match=text.toUpperCase().indexOf(term.toUpperCase()),\r\n            tl=term.length;\r\n\r\n        if (match<0) {\r\n            markup.push(escapeMarkup(text));\r\n            return;\r\n        }\r\n\r\n        markup.push(escapeMarkup(text.substring(0, match)));\r\n        markup.push(\"<span class='select2-match'>\");\r\n        markup.push(escapeMarkup(text.substring(match, match + tl)));\r\n        markup.push(\"</span>\");\r\n        markup.push(escapeMarkup(text.substring(match + tl, text.length)));\r\n    }\r\n\r\n    /**\r\n     * Produces an ajax-based query function\r\n     *\r\n     * @param options object containing configuration paramters\r\n     * @param options.params parameter map for the transport ajax call, can contain such options as cache, jsonpCallback, etc. see $.ajax\r\n     * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax\r\n     * @param options.url url for the data\r\n     * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.\r\n     * @param options.dataType request data type: ajax, jsonp, other datatatypes supported by jQuery's $.ajax function or the transport function if specified\r\n     * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often\r\n     * @param options.results a function(remoteData, pageNumber) that converts data returned form the remote request to the format expected by Select2.\r\n     *      The expected format is an object containing the following keys:\r\n     *      results array of objects that will be used as choices\r\n     *      more (optional) boolean indicating whether there are more results available\r\n     *      Example: {results:[{id:1, text:'Red'},{id:2, text:'Blue'}], more:true}\r\n     */\r\n    function ajax(options) {\r\n        var timeout, // current scheduled but not yet executed request\r\n            requestSequence = 0, // sequence used to drop out-of-order responses\r\n            handler = null,\r\n            quietMillis = options.quietMillis || 100,\r\n            ajaxUrl = options.url,\r\n            self = this;\r\n\r\n        return function (query) {\r\n            window.clearTimeout(timeout);\r\n            timeout = window.setTimeout(function () {\r\n                requestSequence += 1; // increment the sequence\r\n                var requestNumber = requestSequence, // this request's sequence number\r\n                    data = options.data, // ajax data function\r\n                    url = ajaxUrl, // ajax url string or function\r\n                    transport = options.transport || $.fn.select2.ajaxDefaults.transport,\r\n                    // deprecated - to be removed in 4.0  - use params instead\r\n                    deprecated = {\r\n                        type: options.type || 'GET', // set type of request (GET or POST)\r\n                        cache: options.cache || false,\r\n                        jsonpCallback: options.jsonpCallback||undefined,\r\n                        dataType: options.dataType||\"json\"\r\n                    },\r\n                    params = $.extend({}, $.fn.select2.ajaxDefaults.params, deprecated);\r\n\r\n                data = data ? data.call(self, query.term, query.page, query.context) : null;\r\n                url = (typeof url === 'function') ? url.call(self, query.term, query.page, query.context) : url;\r\n\r\n                if( null !== handler) { handler.abort(); }\r\n\r\n                if (options.params) {\r\n                    if ($.isFunction(options.params)) {\r\n                        $.extend(params, options.params.call(self));\r\n                    } else {\r\n                        $.extend(params, options.params);\r\n                    }\r\n                }\r\n\r\n                $.extend(params, {\r\n                    url: "],[0,"url,"]],"start1":5290,"start2":5290,"length1":5624,"length2":9890},{"diffs":[[0,"a,\r\n"],[-1,"                    type: type,\r\n"],[0,"    "]],"start1":15260,"start2":15260,"length1":41,"length2":8},{"diffs":[[0,"uccess: function"],[1," "],[0,"(data) {\r\n      "]],"start1":15285,"start2":15285,"length1":32,"length2":33},{"diffs":[[0,"ODO "],[-1,"3.0 "],[0,""],[1,""],[0,"- re"]],"start1":15468,"start2":15468,"length1":12,"length2":8},{"diffs":[[0,"           });\r\n"],[1,"                handler = transport.call(self, params);\r\n"],[0,"            }, q"]],"start1":15698,"start2":15698,"length1":32,"length2":89},{"diffs":[[0,"    "],[-1,"* Produces a query function that works with a local array\r\n    *\r\n    * @param options object containing configuration parameters. The options parameter can either be an array or an\r\n    * object.\r\n    *\r\n    * If the array form is used it is assumed that it contains objects with 'id' and 'text' keys.\r\n    *\r\n    * If the object form is used ti is assumed that it contains 'data' and 'text' keys. The 'data' key should contain\r\n    * an array of objects that will be used as choices. These objects must contain at least an 'id' key. The 'text'\r\n    * key can either be a String in which case it is expected that each element in the 'data' array has a key with the\r\n    * value of 'text' which will be used to match choices. Alternatively, text can be a function(item) that can extract\r\n    * the text.\r\n    */\r\n    function local(options) {\r\n        var data = options, // data elements\r\n            dataText,\r\n            text = function(item) { return \"\" + item.text; }; // function used to retrieve the text portion of a data item that is matched against the search\r\n\r\n        if (!$.isArray(data)) {\r\n            text = data.text;\r\n            // if text is not a function we assume it to be a key name\r\n            if (!$.isFunction(text)) {\r\n                dataText = data.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available\r\n                text = function(item) { return item[dataText]; };\r\n            }\r\n            data = data.results;\r\n        }\r\n\r\n        return function(query) {\r\n            var t = query.term, filtered = {};\r\n            if (t === \"\") {\r\n                query.callback({ results: data });\r\n                return;\r\n            }\r\n            filtered.results = $(data)\r\n                .filter(function() { return query.matcher(t, text(this)); })\r\n                .get();\r\n            query.callback(filtered);\r\n        };\r\n    }\r\n\r\n    // TODO javadoc\r\n    function tags(data) {\r\n        // TODO even for a function we should probably return a wrapper that does the same object/string check as\r\n        // the function for arrays. otherwise only functions that return objects are supported.\r\n        if ($.isFunction(data)) {\r\n            return data;\r\n        }\r\n\r\n        // if not a function we assume it to be an array\r\n\r\n        return function(query) {\r\n            var t = query.term, filtered = { results: [] };\r\n            $(data).each(function"],[1," * Produces a query function that works with a local array\r\n     *\r\n     * @param options object containing configuration parameters. The options parameter can either be an array or an\r\n     * object.\r\n     *\r\n     * If the array form is used it is assumed that it contains objects with 'id' and 'text' keys.\r\n     *\r\n     * If the object form is used ti is assumed that it contains 'data' and 'text' keys. The 'data' key should contain\r\n     * an array of objects that will be used as choices. These objects must contain at least an 'id' key. The 'text'\r\n     * key can either be a String in which case it is expected that each element in the 'data' array has a key with the\r\n     * value of 'text' which will be used to match choices. Alternatively, text can be a function(item) that can extract\r\n     * the text.\r\n     */\r\n    function local(options) {\r\n        var data = options, // data elements\r\n            dataText,\r\n            tmp,\r\n            text = function (item) { return \"\"+item.text; }; // function used to retrieve the text portion of a data item that is matched against the search\r\n\r\n\t\t if ($.isArray(data)) {\r\n            tmp = data;\r\n            data = { results: tmp };\r\n        }\r\n\r\n\t\t if ($.isFunction(data) === false) {\r\n            tmp = data;\r\n            data = function() { return tmp; };\r\n        }\r\n\r\n        var dataItem = data();\r\n        if (dataItem.text) {\r\n            text = dataItem.text;\r\n            // if text is not a function we assume it to be a key name\r\n            if (!$.isFunction(text)) {\r\n                dataText = dataItem.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available\r\n                text = function (item) { return item[dataText]; };\r\n            }\r\n        }\r\n\r\n        return function (query) {\r\n            var t = query.term, filtered = { results: [] }, process;\r\n            if (t === \"\") {\r\n                query.callback(data());\r\n                return;\r\n            }\r\n\r\n            process = function(datum, collection) {\r\n                var group, attr;\r\n                datum = datum[0];\r\n                if (datum.children) {\r\n                    group = {};\r\n                    for (attr in datum) {\r\n                        if (datum.hasOwnProperty(attr)) group[attr]=datum[attr];\r\n                    }\r\n                    group.children=[];\r\n                    $(datum.children).each2(function(i, childDatum) { process(childDatum, group.children); });\r\n                    if (group.children.length || query.matcher(t, text(group), datum)) {\r\n                        collection.push(group);\r\n                    }\r\n                } else {\r\n                    if (query.matcher(t, text(datum), datum)) {\r\n                        collection.push(datum);\r\n                    }\r\n                }\r\n            };\r\n\r\n            $(data().results).each2(function(i, datum) { process(datum, filtered.results); });\r\n            query.callback(filtered);\r\n        };\r\n    }\r\n\r\n    // TODO javadoc\r\n    function tags(data) {\r\n        var isFunc = $.isFunction(data);\r\n        return function (query) {\r\n            var t = query.term, filtered = {results: []};\r\n            $(isFunc ? data() : data).each(function "],[0,"() {"]],"start1":15831,"start2":15831,"length1":2480,"length2":3280},{"diffs":[[0,"this : {"],[-1," "],[0,"id: this"]],"start1":19339,"start2":19339,"length1":17,"length2":16},{"diffs":[[0,"xt: this"],[-1," "],[0,"});\r\n   "]],"start1":19359,"start2":19359,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"* Checks if the formatter function should be used.\r\n    *\r\n    * Throws an error if it is not a function. Returns true if it should be used,\r\n    * false if no formatting should be performed.\r\n    *\r\n    * @param formatter\r\n"],[1," * Checks if the formatter function should be used.\r\n     *\r\n     * Throws an error if it is not a function. Returns true if it should be used,\r\n     * false if no formatting should be performed.\r\n     *\r\n     * @param formatter\r\n "],[0,"    "]],"start1":19477,"start2":19477,"length1":232,"length2":239},{"diffs":[[0,"eturn fa"],[-1,"s"],[0,"l"],[1,"s"],[0,"e;\r\n    "]],"start1":19853,"start2":19853,"length1":18,"length2":18},{"diffs":[[0,"    "],[-1,"/**\r\n    * blurs any Select2 container that has focus when an element outside them was clicked or received focus\r\n    *\r\n    * also takes care of clicks on label tags that point to the source element\r\n    */\r\n    $(document).ready(function() {\r\n        $(document).delegate(\"*\", \"mousedown touchend\", function(e) {\r\n            var target = $(e.target).closest(\"div.select2-container\").get(0), attr;\r\n            if (target) {\r\n                $(document).find(\"div.select2-container-active\").each(function() {\r\n                    if (this !== target) $(this).data(\"select2\").blur();\r\n                });\r\n            } else {\r\n                target = $(e.target).closest(\"div.select2-drop\").get(0);\r\n                $(document).find(\"div.select2-drop-active\").each(function() {\r\n                    if (this !== target) $(this).data(\"select2\").blur();\r\n                });\r\n            }\r\n\r\n            target = $(e.target);\r\n            attr = target.attr(\"for\");\r\n            if (\"LABEL\" === e.target.tagName && attr && attr.length > 0) {\r\n                target = $(\"#\" + attr);\r\n                target = target.data(\"select2\");\r\n                if (target !== undefined) { target.focus(); e.preventDefault(); }\r\n            }\r\n        });\r\n    });\r\n\r\n    function evaluate(val) {\r\n        return $.isFunction(val) ? val() : val;\r\n    }\r\n\r\n    /**\r\n    * Creates a new class\r\n    *\r\n    * @param superClass\r\n    * @param methods\r\n    */\r\n    function clazz(SuperClass, methods) {\r\n        var constructor = function() { "],[1,"function evaluate(val) {\r\n        return $.isFunction(val) ? val() : val;\r\n    }\r\n\r\n    function countResults(results) {\r\n        var count = 0;\r\n        $.each(results, function(i, item) {\r\n            if (item.children) {\r\n                count += countResults(item.children);\r\n            } else {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    }\r\n\r\n    /**\r\n     * Default tokenizer. This function uses breaks the input on substring match of any string from the\r\n     * opts.tokenSeparators array and uses opts.createSearchChoice to create the choice object. Both of those\r\n     * two options have to be defined in order for the tokenizer to work.\r\n     *\r\n     * @param input text user has typed so far or pasted into the search field\r\n     * @param selection currently selected choices\r\n     * @param selectCallback function(choice) callback tho add the choice to selection\r\n     * @param opts select2's opts\r\n     * @return undefined/null to leave the current input unchanged, or a string to change the input to the returned value\r\n     */\r\n    function defaultTokenizer(input, selection, selectCallback, opts) {\r\n        var original = input, // store the original so we can compare and know if we need to tell the search to update its text\r\n            dupe = false, // check for whether a token we extracted represents a duplicate selected choice\r\n            token, // token\r\n            index, // position at which the separator was found\r\n            i, l, // looping variables\r\n            separator; // the matched separator\r\n\r\n        if (!opts.createSearchChoice || !opts.tokenSeparators || opts.tokenSeparators.length < 1) return undefined;\r\n\r\n        while (true) {\r\n            index = -1;\r\n\r\n            for (i = 0, l = opts.tokenSeparators.length; i < l; i++) {\r\n                separator = opts.tokenSeparators[i];\r\n                index = input.indexOf(separator);\r\n                if (index >= 0) break;\r\n            }\r\n\r\n            if (index < 0) break; // did not find any token separator in the input string, bail\r\n\r\n            token = input.substring(0, index);\r\n            input = input.substring(index + separator.length);\r\n\r\n            if (token.length > 0) {\r\n                token = opts.createSearchChoice(token, selection);\r\n                if (token !== undefined && token !== null && opts.id(token) !== undefined && opts.id(token) !== null) {\r\n                    dupe = false;\r\n                    for (i = 0, l = selection.length; i < l; i++) {\r\n                        if (equal(opts.id(token), opts.id(selection[i]))) {\r\n                            dupe = true; break;\r\n                        }\r\n                    }\r\n\r\n                    if (!dupe) selectCallback(token);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (original!==input) return input;\r\n    }\r\n\r\n    /**\r\n     * Creates a new class\r\n     *\r\n     * @param superClass\r\n     * @param methods\r\n     */\r\n    function clazz(SuperClass, methods) {\r\n        var constructor = function () {"],[0,"};\r\n"]],"start1":19955,"start2":19955,"length1":1534,"length2":3052},{"diffs":[[0,"tion"],[-1,"(func) {\r\n            var self = this;\r\n            return function() {\r\n                func.apply(self, arguments);\r\n            };\r\n        },\r\n\r\n        // abstract\r\n        init: function(opts) {\r\n            var results, search, resultsSelector = \".select2-results\""],[1," (func) {\r\n            var self = this;\r\n            return function () {\r\n                func.apply(self, arguments);\r\n            };\r\n        },\r\n\r\n        // abstract\r\n        init: function (opts) {\r\n            var results, search, resultsSelector = \".select2-results\", disabled, readonly"],[0,";\r\n\r"]],"start1":23369,"start2":23369,"length1":279,"length2":302},{"diffs":[[0," this.id"],[-1," = "],[1,"="],[0,"opts.id;"]],"start1":23773,"start2":23773,"length1":19,"length2":17},{"diffs":[[0,"\r\n\r\n"],[-1,"            this.enabled = true;\r\n"],[0,"    "]],"start1":24020,"start2":24020,"length1":42,"length2":8},{"diffs":[[0,"    "],[-1,"// cache the body so future lookups are cheap\r\n            this.body = thunk(function() { return opts.element.closest(\"body\"); });\r\n\r\n            if (opts.element.attr(\"class\") !== undefined) {\r\n                this.container.addClass(opts.element.attr(\"class\"));\r\n            }"],[1,"this.containerId=\"s2id_\"+(opts.element.attr(\"id\") || \"autogen\"+nextUid());\r\n            this.containerSelector=\"#\"+this.containerId.replace(/([;&,\\.\\+\\*\\~':\"\\!\\^#$%@\\[\\]\\(\\)=>\\|])/g, '\\\\$1');\r\n            this.container.attr(\"id\", this.containerId);\r\n\r\n            // cache the body so future lookups are cheap\r\n            this.body = thunk(function() { return opts.element.closest(\"body\"); });\r\n\r\n            syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);"],[0,"\r\n\r\n"]],"start1":24088,"start2":24088,"length1":286,"length2":503},{"diffs":[[0,"Class));\r\n\r\n"],[1,"            this.elementTabIndex = this.opts.element.attr(\"tabindex\");\r\n\r\n"],[0,"            "]],"start1":24715,"start2":24715,"length1":24,"length2":98},{"diffs":[[0,"   ."],[-1,"hide()\r\n                .after"],[1,"attr(\"tabindex\", \"-1\")\r\n                .before"],[0,"(thi"]],"start1":24932,"start2":24932,"length1":38,"length2":55},{"diffs":[[0,");\r\n"],[-1,"            this.dropdown.css(evaluate(opts.dropdownCss));\r\n"],[0,"    "]],"start1":25118,"start2":25118,"length1":68,"length2":8},{"diffs":[[0,"\r\n\r\n"],[-1,"            search.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\"));\r\n\r\n"],[0,"    "]],"start1":25398,"start2":25398,"length1":84,"length2":8},{"diffs":[[0,"();\r"],[-1,"\n            this.initContainerWidth();\r"],[0,"\n\r\n "]],"start1":25544,"start2":25544,"length1":48,"length2":8},{"diffs":[[0,"own."],[-1,"delegate(resultsSelector, \"mousemove-filtered\", this.bind(this.highlightUnderEvent));\r\n\r\n            installDebouncedScroll(80, this.results);\r\n            this.dropdown.delegate(resultsSelector, \"scroll-debounced\", this.bind(this.loadMoreIfNeeded)"],[1,"on(\"mousemove-filtered touchstart touchmove touchend\", resultsSelector, this.bind(this.highlightUnderEvent));\r\n\r\n            installDebouncedScroll(80, this.results);\r\n            this.dropdown.on(\"scroll-debounced\", resultsSelector, this.bind(this.loadMoreIfNeeded));\r\n\r\n            // do not propagate change event from the search field out of the component\r\n            $(this.container).on(\"change\", \".select2-input\", function(e) {e.stopPropagation();});\r\n            $(this.dropdown).on(\"change\", \".select2-input\", function(e) {e.stopPropagation();}"],[0,");\r\n"]],"start1":25626,"start2":25626,"length1":256,"length2":562},{"diffs":[[0,"function"],[-1,""],[0,""],[1," "],[0,"(e, delt"]],"start1":26383,"start2":26383,"length1":16,"length2":17},{"diffs":[[0,"rch."],[-1,"bind(\"keyup-change\", this.bind(this.updateResults));\r\n            search.bind(\"focus\", function() { search.addClass(\"select2-focused\"); if (search.val() === \" \") search.val(\"\"); });\r\n            search.bind(\"blur\", function() { search.removeClass(\"select2-focused\"); });\r\n\r\n            this.dropdown.delegate(resultsSelector, \"mouseup\", this.bind(function(e) {\r\n                if ($(e.target).closest(\".select2-result-selectable:not(.select2-disabled)\").length > 0) {\r\n                    this.highlightUnderEvent(e);\r\n                    this.selectHighlighted(e);\r\n                } else {\r\n                    this.focusSearch();\r\n                }\r\n                killEvent(e);"],[1,"on(\"keyup-change input paste\", this.bind(this.updateResults));\r\n            search.on(\"focus\", function () { search.addClass(\"select2-focused\"); });\r\n            search.on(\"blur\", function () { search.removeClass(\"select2-focused\");});\r\n\r\n            this.dropdown.on(\"mouseup\", resultsSelector, this.bind(function (e) {\r\n                if ($(e.target).closest(\".select2-result-selectable\").length > 0) {\r\n                    this.highlightUnderEvent(e);\r\n                    this.selectHighlighted(e);\r\n                }"],[0,"\r\n  "]],"start1":27009,"start2":27009,"length1":691,"length2":530},{"diffs":[[0,"ropdown."],[-1,"bind"],[1,"on"],[0,"(\"click "]],"start1":27891,"start2":27891,"length1":20,"length2":18},{"diffs":[[0,"n\", function"],[1," "],[0,"(e) { e.stop"]],"start1":27925,"start2":27925,"length1":24,"length2":25},{"diffs":[[0,"pts."],[-1,"element.is(\":disabled\")) this.disable"],[1,"maximumInputLength !== null) {\r\n                this.search.attr(\"maxlength\", opts.maximumInputLength);\r\n            }\r\n\r\n            var disabled = opts.element.prop(\"disabled\");\r\n            if (disabled === undefined) disabled = false;\r\n            this.enable(!disabled);\r\n\r\n            var readonly = opts.element.prop(\"readonly\");\r\n            if (readonly === undefined) readonly = false;\r\n            this.readonly(readonly);\r\n\r\n            // Calculate size of scrollbar\r\n            scrollBarDimensions = scrollBarDimensions || measureScrollbar();\r\n\r\n            this.autofocus = opts.element.prop(\"autofocus\")\r\n            opts.element.prop(\"autofocus\", false);\r\n            if (this.autofocus) this.focus"],[0,"();\r"]],"start1":28470,"start2":28470,"length1":45,"length2":724},{"diffs":[[0,"estroy: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":29239,"start2":29239,"length1":32,"length2":33},{"diffs":[[0,"ta(\"select2\");\r\n"],[1,"\r\n            if (this.propertyObserver) { delete this.propertyObserver; this.propertyObserver = null; }\r\n\r\n"],[0,"            if ("]],"start1":29308,"start2":29308,"length1":32,"length2":140},{"diffs":[[0,"= undefined) {\r\n"],[1,"\r\n"],[0,"                "]],"start1":29458,"start2":29458,"length1":32,"length2":34},{"diffs":[[0,"move"],[-1,"Data(\"select2\")\r\n                    .unbind(\".select2\")\r\n                    .show();\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        prepareOpts: function(opts) {\r\n            var element, select, idKey, ajaxUrl"],[1,"Class(\"select2-offscreen\")\r\n                    .removeData(\"select2\")\r\n                    .off(\".select2\")\r\n                    .attr({\"tabindex\": this.elementTabIndex})\r\n                    .prop(\"autofocus\", this.autofocus||false)\r\n                    .show();\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        optionToData: function(element) {\r\n            if (element.is(\"option\")) {\r\n                return {\r\n                    id:element.prop(\"value\"),\r\n                    text:element.text(),\r\n                    element: element.get(),\r\n                    css: element.attr(\"class\"),\r\n                    disabled: element.prop(\"disabled\"),\r\n                    locked: equal(element.attr(\"locked\"), \"locked\")\r\n                };\r\n            } else if (element.is(\"optgroup\")) {\r\n                return {\r\n                    text:element.attr(\"label\"),\r\n                    children:[],\r\n                    element: element.get(),\r\n                    css: element.attr(\"class\")\r\n                };\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        prepareOpts: function (opts) {\r\n            var element, select, idKey, ajaxUrl, self = this"],[0,";\r\n\r"]],"start1":29626,"start2":29626,"length1":232,"length2":1185},{"diffs":[[0,"\r\n\r\n"],[-1,"            //Custom tags separator.\r\n            opts.separator = opts.separator || \",\";\r\n\r\n"],[0,"    "]],"start1":30988,"start2":30988,"length1":101,"length2":8},{"diffs":[[0,"tags\"], function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":31252,"start2":31252,"length1":32,"length2":33},{"diffs":[[0,"te, "],[-1,"data, result, children, id = this.opts.id;\r\n\r\n                    populate = function(results, container, depth) {\r\n\r\n                        var i, l, result, selectable, compound, node, label, innerContainer, formatted;\r\n                        for (i = 0, l = results.length; i < l; i = i + 1) {\r\n\r\n                            result = results[i];\r\n                            selectable = id(result) !== undefined;\r\n                            compound = (\"children\" in result) && result.children.length > 0;\r\n\r\n                            node = $(\"<li></li>\");\r\n                            node.addClass(\"select2-results-dept-\" + "],[1," data, result, children, id=this.opts.id;\r\n\r\n                    populate=function(results, container, depth) {\r\n\r\n                        var i, l, result, selectable, disabled, compound, node, label, innerContainer, formatted;\r\n\r\n                        results = opts.sortResults(results, container, query);\r\n\r\n                        for (i = 0, l = results.length; i < l; i = i + 1) {\r\n\r\n                            result=results[i];\r\n\r\n                            disabled = (result.disabled === true);\r\n                            selectable = (!disabled) && (id(result) !== undefined);\r\n\r\n                            compound=result.children && result.children.length > 0;\r\n\r\n                            node=$(\"<li></li>\");\r\n                            node.addClass(\"select2-results-dept-\"+"],[0,"dept"]],"start1":31645,"start2":31645,"length1":644,"length2":809},{"diffs":[[0,"nselectable\");\r\n"],[1,"                            if (disabled) { node.addClass(\"select2-disabled\"); }\r\n"],[0,"                "]],"start1":32623,"start2":32623,"length1":32,"length2":114},{"diffs":[[0," }\r\n"],[-1,"\r\n                            label = $(\"<div></div>\");\r\n                            label.addClass(\"select2-result-label\");\r\n\r\n                            formatted = opts.formatResult(result, label, query);\r\n                            if (formatted !== undefined) {\r\n                                label.html(escapeMarkup(formatted)"],[1,"                            node.addClass(self.opts.formatResultCssClass(result));\r\n\r\n                            label=$(document.createElement(\"div\"));\r\n                            label.addClass(\"select2-result-label\");\r\n\r\n                            formatted=opts.formatResult(result, label, query, self.opts.escapeMarkup);\r\n                            if (formatted!==undefined) {\r\n                                label.html(formatted"],[0,");\r\n"]],"start1":32811,"start2":32811,"length1":344,"length2":448},{"diffs":[[0,"nerContainer"],[-1," = "],[1,"="],[0,"$(\"<ul></ul>"]],"start1":33424,"start2":33424,"length1":27,"length2":25},{"diffs":[[0,"r, depth"],[-1," + "],[1,"+"],[0,"1);\r\n   "]],"start1":33605,"start2":33605,"length1":19,"length2":17},{"diffs":[[0,"peof"],[-1," (opts.id) !== \"function\") {\r\n                idKey = opts.id;\r\n                opts.id = function(e) { return e[idKey]; };\r\n            }\r\n\r\n            if (select) {\r\n                opts.query = this.bind(function"],[1,"(opts.id) !== \"function\") {\r\n                idKey = opts.id;\r\n                opts.id = function (e) { return e[idKey]; };\r\n            }\r\n\r\n            if ($.isArray(opts.element.data(\"select2Tags\"))) {\r\n                if (\"tags\" in opts) {\r\n                    throw \"tags specified as both an attribute 'data-select2-tags' and in options of Select2 \" + opts.element.attr(\"id\");\r\n                }\r\n                opts.tags=opts.element.data(\"select2Tags\");\r\n            }\r\n\r\n            if (select) {\r\n                opts.query = this.bind(function "],[0,"(que"]],"start1":34023,"start2":34023,"length1":224,"length2":564},{"diffs":[[0,"         process"],[-1," = "],[1,"="],[0,"function(element"]],"start1":34769,"start2":34769,"length1":35,"length2":33},{"diffs":[[0,"ush("],[-1,"{ id: element.attr(\"value\"), text: element.text(), element: element.get() });\r\n                            }\r\n                        } else if (element.is(\"optgroup\")) {\r\n                            group = { text: element.attr(\"label\"), children: [], element: element.get() }"],[1,"self.optionToData(element));\r\n                            }\r\n                        } else if (element.is(\"optgroup\")) {\r\n                            group=self.optionToData(element)"],[0,";\r\n "]],"start1":35033,"start2":35033,"length1":285,"length2":191},{"diffs":[[0,".children.length"],[-1," > "],[1,">"],[0,"0) {\r\n          "]],"start1":35367,"start2":35367,"length1":35,"length2":33},{"diffs":[[0,"children"],[-1," = "],[1,"="],[0,"element."]],"start1":35551,"start2":35551,"length1":19,"length2":17},{"diffs":[[0,"children"],[-1," = "],[1,"="],[0,"children"]],"start1":35879,"start2":35879,"length1":19,"length2":17},{"diffs":[[0,"s.id"],[-1," = function(e) { return e.id"],[1,"=function(e) { return e.id; };\r\n                opts.formatResultCssClass = function(data) { return data.css"],[0,"; };"]],"start1":36255,"start2":36255,"length1":36,"length2":116},{"diffs":[[0,"n opts)) {\r\n"],[1,"\r\n"],[0,"            "]],"start1":36426,"start2":36426,"length1":24,"length2":26},{"diffs":[[0,"y = ajax"],[-1,"("],[1,".call(opts.element, "],[0,"opts.aja"]],"start1":36725,"start2":36725,"length1":17,"length2":36},{"diffs":[[0,"    "],[-1,"opts.createSearchChoice = function(term) { return { id: term, text: term }; };\r\n                        opts.initSelection = function(element, callback) {\r\n                            var data = [];\r\n                            $(splitVal(element.val(), opts.separator)).each(function() {\r\n                                var id = this, text = this, tags = opts.tags;\r\n                                if ($.isFunction(tags)) tags = tags();\r\n                                $(tags).each(function() { if (equal(this.id, id)) { text = this.text; return false; } });\r\n                                data.push({ id: id, text: text });\r\n                            });\r\n\r\n                            callback(data);\r\n                        };"],[1,"if (opts.createSearchChoice === undefined) {\r\n                            opts.createSearchChoice = function (term) { return {id: term, text: term}; };\r\n                        }\r\n                        if (opts.initSelection === undefined) {\r\n                            opts.initSelection = function (element, callback) {\r\n                                var data = [];\r\n                                $(splitVal(element.val(), opts.separator)).each(function () {\r\n                                    var id = this, text = this, tags=opts.tags;\r\n                                    if ($.isFunction(tags)) tags=tags();\r\n                                    $(tags).each(function() { if (equal(this.id, id)) { text = this.text; return false; } });\r\n                                    data.push({id: id, text: text});\r\n                                });\r\n\r\n                                callback(data);\r\n                            };\r\n                        }"],[0,"\r\n  "]],"start1":36997,"start2":36997,"length1":746,"length2":974},{"diffs":[[0," (typeof"],[-1," "],[0,""],[1,""],[0,"(opts.qu"]],"start1":38040,"start2":38040,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"* Monitor the original element for changes and update select2 accordingly\r\n        */\r\n        // abstract\r\n        monitorSource: function() {\r\n            this.opts.element.bind(\"change.select2\", this.bind(function(e) {\r\n                if (this.opts.element.data(\"select2-change-triggered\") !== true) {\r\n                    this.initSelection();\r\n                }\r\n            }));\r\n        },\r\n\r\n        /**\r\n        * Triggers the change event on the source element\r\n        */\r\n        // abstract\r\n        triggerChange: function(details) {\r\n\r\n            details = details || {};\r\n            details = $.extend({}, details, { type: \"change\", val: this.val() });\r\n            // prevents recursive triggering\r\n            this.opts.element.data(\"select2-change-triggered\", true);\r\n            this.opts.element.trigger(details);\r\n            this.opts.element.data(\"select2-change-triggered\", false);\r\n\r\n            // some validation frameworks ignore the change event and listen instead to keyup, click for selects\r\n            // so here we trigger the click event manually\r\n            this.opts.element.click();\r\n        },\r\n\r\n\r\n        // abstract\r\n        enable: function() {\r\n            if (this.enabled) return;\r\n\r\n            this.enabled = true;\r\n            this.container.removeClass(\"select2-container-disabled\");\r\n        },\r\n\r\n        // abstract\r\n        disable: function() {\r\n            if (!this.enabled) return;\r\n\r\n            this.close();\r\n\r\n            this.enabled = false;\r\n            this.container.addClass(\"select2-container-disabled\")"],[1," * Monitor the original element for changes and update select2 accordingly\r\n         */\r\n        // abstract\r\n        monitorSource: function () {\r\n            var el = this.opts.element, sync;\r\n\r\n            el.on(\"change.select2\", this.bind(function (e) {\r\n                if (this.opts.element.data(\"select2-change-triggered\") !== true) {\r\n                    this.initSelection();\r\n                }\r\n            }));\r\n\r\n            sync = this.bind(function () {\r\n\r\n                var enabled, readonly, self = this;\r\n\r\n                // sync enabled state\r\n\r\n                var disabled = el.prop(\"disabled\");\r\n                if (disabled === undefined) disabled = false;\r\n                this.enable(!disabled);\r\n\r\n                var readonly = el.prop(\"readonly\");\r\n                if (readonly === undefined) readonly = false;\r\n                this.readonly(readonly);\r\n\r\n                syncCssClasses(this.container, this.opts.element, this.opts.adaptContainerCssClass);\r\n                this.container.addClass(evaluate(this.opts.containerCssClass));\r\n\r\n                syncCssClasses(this.dropdown, this.opts.element, this.opts.adaptDropdownCssClass);\r\n                this.dropdown.addClass(evaluate(this.opts.dropdownCssClass));\r\n\r\n            });\r\n\r\n            // mozilla and IE\r\n            el.on(\"propertychange.select2 DOMAttrModified.select2\", sync);\r\n\r\n\r\n            // hold onto a reference of the callback to work around a chromium bug\r\n            if (this.mutationCallback === undefined) {\r\n                this.mutationCallback = function (mutations) {\r\n                    mutations.forEach(sync);\r\n                }\r\n            }\r\n\r\n            // safari and chrome\r\n            if (typeof WebKitMutationObserver !== \"undefined\") {\r\n                if (this.propertyObserver) { delete this.propertyObserver; this.propertyObserver = null; }\r\n                this.propertyObserver = new WebKitMutationObserver(this.mutationCallback);\r\n                this.propertyObserver.observe(el.get(0), { attributes:true, subtree:false });\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        triggerSelect: function(data) {\r\n            var evt = $.Event(\"select2-selecting\", { val: this.id(data), object: data });\r\n            this.opts.element.trigger(evt);\r\n            return !evt.isDefaultPrevented();\r\n        },\r\n\r\n        /**\r\n         * Triggers the change event on the source element\r\n         */\r\n        // abstract\r\n        triggerChange: function (details) {\r\n\r\n            details = details || {};\r\n            details= $.extend({}, details, { type: \"change\", val: this.val() });\r\n            // prevents recursive triggering\r\n            this.opts.element.data(\"select2-change-triggered\", true);\r\n            this.opts.element.trigger(details);\r\n            this.opts.element.data(\"select2-change-triggered\", false);\r\n\r\n            // some validation frameworks ignore the change event and listen instead to keyup, click for selects\r\n            // so here we trigger the click event manually\r\n            this.opts.element.click();\r\n\r\n            // ValidationEngine ignorea the change event and listens instead to blur\r\n            // so here we trigger the blur event manually if so desired\r\n            if (this.opts.blurOnChange)\r\n                this.opts.element.blur();\r\n        },\r\n\r\n        //abstract\r\n        isInterfaceEnabled: function()\r\n        {\r\n            return this.enabledInterface === true;\r\n        },\r\n\r\n        // abstract\r\n        enableInterface: function() {\r\n            var enabled = this._enabled && !this._readonly,\r\n                disabled = !enabled;\r\n\r\n            if (enabled === this.enabledInterface) return false;\r\n\r\n            this.container.toggleClass(\"select2-container-disabled\", disabled);\r\n            this.close();\r\n            this.enabledInterface = enabled;\r\n\r\n            return true;\r\n        },\r\n\r\n        // abstract\r\n        enable: function(enabled) {\r\n            if (enabled === undefined) enabled = true;\r\n            if (this._enabled === enabled) return false;\r\n            this._enabled = enabled;\r\n\r\n            this.opts.element.prop(\"disabled\", !enabled);\r\n            this.enableInterface();\r\n            return true;\r\n        },\r\n\r\n        // abstract\r\n        readonly: function(enabled) {\r\n            if (enabled === undefined) enabled = false;\r\n            if (this._readonly === enabled) return false;\r\n            this._readonly = enabled;\r\n\r\n            this.opts.element.prop(\"readonly\", enabled);\r\n            this.enableInterface();\r\n            return true"],[0,";\r\n "]],"start1":38246,"start2":38246,"length1":1585,"length2":4591},{"diffs":[[0,"opened: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":42879,"start2":42879,"length1":32,"length2":33},{"diffs":[[0,"var "],[-1,"offset = this.container.offset(),\r\n                height = this.container.outerHeight(),\r\n                width = this.container.outerWidth(),\r\n                dropHeight = this.dropdown.outerHeight(),\r\n                viewportBottom = $(window).scrollTop() + document.documentElement.clientHeight"],[1,"$dropdown = this.dropdown,\r\n                offset = this.container.offset(),\r\n                height = this.container.outerHeight(false),\r\n                width = this.container.outerWidth(false),\r\n                dropHeight = $dropdown.outerHeight(false),\r\n\t            viewPortRight = $(window).scrollLeft() + $(window).width(),\r\n                viewportBottom = $(window).scrollTop() + $(window).height()"],[0,",\r\n "]],"start1":43059,"start2":43059,"length1":306,"length2":416},{"diffs":[[0," + height,\r\n"],[1,"                dropLeft = offset.left,\r\n"],[0,"            "]],"start1":43510,"start2":43510,"length1":24,"length2":65},{"diffs":[[0,"),\r\n"],[-1,"                aboveNow = this.dropdown.hasClass(\"select2-drop-above\"),\r\n                above,\r\n                css;\r\n\r\n            // console.log(\"below/ droptop:\", dropTop, \"dropHeight\", dropHeight, \"sum\", (dropTop+dropHeight)+\" viewport bottom\", viewportBottom, \"enough?\", enoughRoomBelow);\r\n            // console.log(\"above/ offset.top\", offset.top, \"dropHeight\", dropHeight, \"top\", (offset.top-dropHeight), \"scrollTop\", this.body().scrollTop(), \"enough?\", enoughRoomAbove);"],[1,"\t            dropWidth = $dropdown.outerWidth(false),\r\n\t            enoughRoomOnRight = dropLeft + dropWidth <= viewPortRight,\r\n                aboveNow = $dropdown.hasClass(\"select2-drop-above\"),\r\n                bodyOffset,\r\n                above,\r\n                css,\r\n                resultsListNode;\r\n\r\n            if (this.opts.dropdownAutoWidth) {\r\n                resultsListNode = $('.select2-results', $dropdown)[0];\r\n                $dropdown.addClass('select2-drop-auto-width');\r\n                $dropdown.css('width', '');\r\n                // Add scrollbar width to dropdown if vertical scrollbar is present\r\n                dropWidth = $dropdown.outerWidth(false) + (resultsListNode.scrollHeight === resultsListNode.clientHeight ? 0 : scrollBarDimensions.width);\r\n                dropWidth > width ? width = dropWidth : dropWidth = width;\r\n                enoughRoomOnRight = dropLeft + dropWidth <= viewPortRight;\r\n            }\r\n            else {\r\n                this.container.removeClass('select2-drop-auto-width');\r\n            }\r\n\r\n            //console.log(\"below/ droptop:\", dropTop, \"dropHeight\", dropHeight, \"sum\", (dropTop+dropHeight)+\" viewport bottom\", viewportBottom, \"enough?\", enoughRoomBelow);\r\n            //console.log(\"above/ offset.top\", offset.top, \"dropHeight\", dropHeight, \"top\", (offset.top-dropHeight), \"scrollTop\", this.body().scrollTop(), \"enough?\", enoughRoomAbove);\r\n\r\n            // fix positioning when body has an offset and is not position: static\r\n\r\n            if (this.body().css('position') !== 'static') {\r\n                bodyOffset = this.body().offset();\r\n                dropTop -= bodyOffset.top;\r\n                dropLeft -= bodyOffset.left;\r\n            }"],[0,"\r\n\r\n"]],"start1":43723,"start2":43723,"length1":489,"length2":1726},{"diffs":[[0,"           }\r\n\r\n"],[1,"            if (!enoughRoomOnRight) {\r\n               dropLeft = offset.left + width - dropWidth;\r\n            }\r\n\r\n"],[0,"            if ("]],"start1":45808,"start2":45808,"length1":32,"length2":148},{"diffs":[[0,"                "],[-1,"this."],[1,"$"],[0,"dropdown.addClas"]],"start1":46082,"start2":46082,"length1":37,"length2":33},{"diffs":[[0,"    "],[-1,"this.dropdown.removeClass(\"select2-drop-above\");\r\n            }\r\n\r\n            css = {\r\n                top: dropTop,\r\n                left: offset.left,\r\n                width: width\r\n            };\r\n\r\n            this."],[1,"$dropdown.removeClass(\"select2-drop-above\");\r\n            }\r\n\r\n            css = $.extend({\r\n                top: dropTop,\r\n                left: dropLeft,\r\n                width: width\r\n            }, evaluate(this.opts.dropdownCss));\r\n\r\n            $"],[0,"drop"]],"start1":46255,"start2":46255,"length1":228,"length2":260},{"diffs":[[0,"    "],[-1,"event = jQuery.Event(\"open"],[1,"if (this._enabled === false || this._readonly === true) return false;\r\n\r\n            event = $.Event(\"select2-opening"],[0,"\");\r"]],"start1":46682,"start2":46682,"length1":34,"length2":125},{"diffs":[[0,"    "],[-1,"* Opens the dropdown\r\n        *\r\n        * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,\r\n        * the dropdown is already open, or if the 'open' event listener on the element called preventDefault().\r\n        */\r\n        // abstract\r\n        open: function() {\r\n\r\n            if (!this.shouldOpen()) return false;\r\n\r\n            window.setTimeout(this.bind(this.opening), 1);\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n        * Performs the opening of the dropdown\r\n        */\r\n        // abstract\r\n        opening: function() {\r\n            this.clearDropdownAlignmentPreference();\r\n\r\n            if (this.search.val() === \" \") { this.search.val(\"\"); }\r\n\r\n            this.dropdown.addClass(\"select2-drop-active\");\r\n            this.container.addClass(\"select2-dropdown-open\").addClass(\"select2-container-active\");\r\n\r\n            this.updateResults(true);\r\n\r\n            if (this.dropdown[0] !== this.body().children().last()[0]) {\r\n                this.dropdown.detach().appendTo(this.body());\r\n            }\r\n\r\n            this.dropdown.show();\r\n            this.ensureHighlightVisible();\r\n\r\n            this.positionDropdown();\r\n\r\n            this.focusSearch();"],[1," * Opens the dropdown\r\n         *\r\n         * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,\r\n         * the dropdown is already open, or if the 'open' event listener on the element called preventDefault().\r\n         */\r\n        // abstract\r\n        open: function () {\r\n\r\n            if (!this.shouldOpen()) return false;\r\n\r\n            this.opening();\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Performs the opening of the dropdown\r\n         */\r\n        // abstract\r\n        opening: function() {\r\n            var cid = this.containerId,\r\n                scroll = \"scroll.\" + cid,\r\n                resize = \"resize.\"+cid,\r\n                orient = \"orientationchange.\"+cid,\r\n                mask;\r\n\r\n            this.container.addClass(\"select2-dropdown-open\").addClass(\"select2-container-active\");\r\n\r\n            this.clearDropdownAlignmentPreference();\r\n\r\n            if(this.dropdown[0] !== this.body().children().last()[0]) {\r\n                this.dropdown.detach().appendTo(this.body());\r\n            }\r\n\r\n            // create the dropdown mask if doesnt already exist\r\n            mask = $(\"#select2-drop-mask\");\r\n            if (mask.length == 0) {\r\n                mask = $(document.createElement(\"div\"));\r\n                mask.attr(\"id\",\"select2-drop-mask\").attr(\"class\",\"select2-drop-mask\");\r\n                mask.hide();\r\n                mask.appendTo(this.body());\r\n                mask.on(\"mousedown touchstart\", function (e) {\r\n                    var dropdown = $(\"#select2-drop\"), self;\r\n                    if (dropdown.length > 0) {\r\n                        self=dropdown.data(\"select2\");\r\n                        if (self.opts.selectOnBlur) {\r\n                            self.selectHighlighted({noFocus: true});\r\n                        }\r\n                        self.close();\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                    }\r\n                });\r\n            }\r\n\r\n            // ensure the mask is always right before the dropdown\r\n            if (this.dropdown.prev()[0] !== mask[0]) {\r\n                this.dropdown.before(mask);\r\n            }\r\n\r\n            // move the global id to the correct dropdown\r\n            $(\"#select2-drop\").removeAttr(\"id\");\r\n            this.dropdown.attr(\"id\", \"select2-drop\");\r\n\r\n            // show the elements\r\n            mask.css(_makeMaskCss());\r\n            mask.show();\r\n            this.dropdown.show();\r\n            this.positionDropdown();\r\n\r\n            this.dropdown.addClass(\"select2-drop-active\");\r\n            this.ensureHighlightVisible();\r\n\r\n            // attach listeners to events that can change the position of the container and thus require\r\n            // the position of the dropdown to be updated as well so it does not come unglued from the container\r\n            var that = this;\r\n            this.container.parents().add(window).each(function () {\r\n                $(this).on(resize+\" \"+scroll+\" \"+orient, function (e) {\r\n                    $(\"#select2-drop-mask\").css(_makeMaskCss());\r\n                    that.positionDropdown();\r\n                });\r\n            });\r\n\r\n            function _makeMaskCss() {\r\n                return {\r\n                    width  : Math.max(document.documentElement.scrollWidth,  $(window).width()),\r\n                    height : Math.max(document.documentElement.scrollHeight, $(window).height())\r\n                }\r\n            }"],[0,"\r\n  "]],"start1":47258,"start2":47258,"length1":1245,"length2":3509},{"diffs":[[0," close: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":50807,"start2":50807,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"this.clearDropdownAlignmentPreference();\r\n\r\n            this.dropdown.hide();\r\n            this.container.removeClass(\"select2-dropdown-open\").removeClass(\"select2-container-active"],[1,"var cid = this.containerId,\r\n                scroll = \"scroll.\" + cid,\r\n                resize = \"resize.\"+cid,\r\n                orient = \"orientationchange.\"+cid;\r\n\r\n            // unbind event listeners\r\n            this.container.parents().add(window).each(function () { $(this).off(scroll).off(resize).off(orient); });\r\n\r\n            this.clearDropdownAlignmentPreference();\r\n\r\n            $(\"#select2-drop-mask\").hide();\r\n            this.dropdown.removeAttr(\"id\"); // only the active dropdown has the select2-drop id\r\n            this.dropdown.hide();\r\n            this.container.removeClass(\"select2-dropdown-open"],[0,"\");\r"]],"start1":50881,"start2":50881,"length1":188,"length2":628},{"diffs":[[0,"sults.empty();\r\n"],[1,"\r\n\r\n"],[0,"            this"]],"start1":51529,"start2":51529,"length1":32,"length2":36},{"diffs":[[0,");\r\n"],[-1,"\r\n            this.opts.element.trigger(jQuery.Event(\"close\"));\r\n        },\r\n\r\n        // abstract\r\n        clearSearch: function() {\r\n\r\n        },\r\n\r\n        // abstract\r\n        ensureHighlightVisible: function"],[1,"            this.search.removeClass(\"select2-active\");\r\n            this.opts.element.trigger($.Event(\"select2-close\"));\r\n        },\r\n\r\n        // abstract\r\n        clearSearch: function () {\r\n\r\n        },\r\n\r\n        //abstract\r\n        getMaximumSelectionSize: function() {\r\n            return evaluate(this.opts.maximumSelectionSize);\r\n        },\r\n\r\n        // abstract\r\n        ensureHighlightVisible: function "],[0,"() {"]],"start1":51578,"start2":51578,"length1":220,"length2":422},{"diffs":[[0,"n = "],[-1,"results.find(\".select2-result-selectable\""],[1,"this.findHighlightableChoices().find('.select2-result-label'"],[0,");\r\n"]],"start1":52502,"start2":52502,"length1":49,"length2":68},{"diffs":[[0,"outerHeight("],[1,"true"],[0,");\r\n\r\n      "]],"start1":52659,"start2":52659,"length1":24,"length2":28},{"diffs":[[0,"ore.outerHeight("],[1,"true"],[0,");\r\n            "]],"start1":52976,"start2":52976,"length1":32,"length2":36},{"diffs":[[0,"outerHeight("],[1,"true"],[0,");\r\n        "]],"start1":53084,"start2":53084,"length1":24,"length2":28},{"diffs":[[0,"   if (y < 0"],[-1,""],[0,""],[1," && child.css('display') != 'none' "],[0,") {\r\n       "]],"start1":53347,"start2":53347,"length1":24,"length2":59},{"diffs":[[0,"    "],[-1,"moveHighlight: function(delta) {\r\n            var choices = this.results.find(\".select2-result-selectable\"),\r\n                index = this.highlight();\r\n\r\n            while (index > -1 && index < choices.length) {\r\n                index += delta;\r\n                var choice = $(choices[index]);\r\n                if (choice.hasClass(\"select2-result-selectable\") && !choice.hasClass(\"select2-disabled\")) {\r\n                    this.highlight(index);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        highlight: function(index) {\r\n            var choices = this.results.find(\".select2-result-selectable\").not(\".select2-disabled\");\r\n\r\n            if (arguments.length === 0) {\r\n                return indexOf(choices.filter(\".select2-highlighted\")[0], choices.get());\r\n            }\r\n\r\n            if (index >= choices.length) index = choices.length - 1;\r\n            if (index < 0) index = 0;\r\n\r\n            choices.removeClass(\"select2-highlighted\");\r\n\r\n            $(choices[index]).addClass(\"select2-highlighted\");\r\n            this.ensureHighlightVisible();\r\n\r\n        },\r\n\r\n        // abstract\r\n        countSelectableResults: function() {\r\n            return this.results.find(\".select2-result-selectable\").not(\".select2-disabled\").length;\r\n        },\r\n\r\n        // abstract\r\n        highlightUnderEvent: function"],[1,"findHighlightableChoices: function() {\r\n            return this.results.find(\".select2-result-selectable:not(.select2-selected):not(.select2-disabled)\");\r\n        },\r\n\r\n        // abstract\r\n        moveHighlight: function (delta) {\r\n            var choices = this.findHighlightableChoices(),\r\n                index = this.highlight();\r\n\r\n            while (index > -1 && index < choices.length) {\r\n                index += delta;\r\n                var choice = $(choices[index]);\r\n                if (choice.hasClass(\"select2-result-selectable\") && !choice.hasClass(\"select2-disabled\") && !choice.hasClass(\"select2-selected\")) {\r\n                    this.highlight(index);\r\n                    break;\r\n                }\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        highlight: function (index) {\r\n            var choices = this.findHighlightableChoices(),\r\n                choice,\r\n                data;\r\n\r\n            if (arguments.length === 0) {\r\n                return indexOf(choices.filter(\".select2-highlighted\")[0], choices.get());\r\n            }\r\n\r\n            if (index >= choices.length) index = choices.length - 1;\r\n            if (index < 0) index = 0;\r\n\r\n            this.results.find(\".select2-highlighted\").removeClass(\"select2-highlighted\");\r\n\r\n            choice = $(choices[index]);\r\n            choice.addClass(\"select2-highlighted\");\r\n\r\n            this.ensureHighlightVisible();\r\n\r\n            data = choice.data(\"select2-data\");\r\n            if (data) {\r\n                this.opts.element.trigger({ type: \"select2-highlight\", val: this.id(data), choice: data });\r\n            }\r\n        },\r\n\r\n        // abstract\r\n        countSelectableResults: function() {\r\n            return this.findHighlightableChoices().length;\r\n        },\r\n\r\n        // abstract\r\n        highlightUnderEvent: function "],[0,"(eve"]],"start1":53531,"start2":53531,"length1":1381,"length2":1836},{"diffs":[[0,"    "],[-1,"        var choices = this.results.find('.select2-result-selectable'"],[1,"\t\tvar choices = this.findHighlightableChoices("],[0,");\r\n"]],"start1":55523,"start2":55523,"length1":76,"length2":54},{"diffs":[[0,"Needed: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":55911,"start2":55911,"length1":32,"length2":33},{"diffs":[[0,"        self"],[-1," = "],[1,"="],[0,"this,\r\n     "]],"start1":56290,"start2":56290,"length1":27,"length2":25},{"diffs":[[0,"    term"],[-1," = "],[1,"="],[0,"this.sea"]],"start1":56322,"start2":56322,"length1":19,"length2":17},{"diffs":[[0,"     context"],[-1," = "],[1,"="],[0,"this.context"]],"start1":56362,"start2":56362,"length1":27,"length2":25},{"diffs":[[0,"f (below <= "],[-1,"0"],[1,"this.opts.loadMorePadding"],[0,") {\r\n       "]],"start1":56533,"start2":56533,"length1":25,"length2":49},{"diffs":[[0,"    "],[-1,"term: term,\r\n                    page: page,\r\n                    context: context,\r\n                    matcher: this.opts.matcher,\r\n                    callback: this.bind(function(data) {\r\n\r\n                        self.opts.populateResults.call(this, results, data.results, { term: term, page: page, context: context });\r\n\r\n                        if (data.more === true) {\r\n                            more.detach().appendTo(results.children(\":last\")).text(self.opts.formatLoadMore(page + 1));\r\n                            window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                        } else {\r\n                            more.remove();\r\n                        }\r\n                        self.positionDropdown();\r\n                        self.resultsPage = page;\r\n                    })\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n        * @param initial whether or not this is the call to this method right after the dropdown has been opened\r\n        */\r\n        // abstract\r\n        updateResults: function(initial) {\r\n            var search = this.search, results = this.results, opts = this.opts, data, self = this"],[1,"    element: this.opts.element,\r\n                        term: term,\r\n                        page: page,\r\n                        context: context,\r\n                        matcher: this.opts.matcher,\r\n                        callback: this.bind(function (data) {\r\n\r\n                    // ignore a response if the select2 has been closed before it was received\r\n                    if (!self.opened()) return;\r\n\r\n\r\n                    self.opts.populateResults.call(this, results, data.results, {term: term, page: page, context:context});\r\n                    self.postprocessResults(data, false, false);\r\n\r\n                    if (data.more===true) {\r\n                        more.detach().appendTo(results).text(self.opts.formatLoadMore(page+1));\r\n                        window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                    } else {\r\n                        more.remove();\r\n                    }\r\n                    self.positionDropdown();\r\n                    self.resultsPage = page;\r\n                    self.context = data.context;\r\n                })});\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Default tokenizer function which does nothing\r\n         */\r\n        tokenize: function() {\r\n\r\n        },\r\n\r\n        /**\r\n         * @param initial whether or not this is the call to this method right after the dropdown has been opened\r\n         */\r\n        // abstract\r\n        updateResults: function (initial) {\r\n            var search = this.search,\r\n                results = this.results,\r\n                opts = this.opts,\r\n                data,\r\n                self = this,\r\n                input,\r\n                term = search.val(),\r\n                lastTerm=$.data(this.container, \"select2-last-term\");\r\n\r\n            // prevent duplicate queries against the same term\r\n            if (initial !== true && lastTerm && equal(term, lastTerm)) return;\r\n\r\n            $.data(this.container, \"select2-last-term\", term)"],[0,";\r\n\r"]],"start1":56676,"start2":56676,"length1":1181,"length2":1985},{"diffs":[[0,"\r\n\r\n"],[-1,"            search.addClass(\"select2-active\");\r\n\r\n"],[0,"    "]],"start1":58869,"start2":58869,"length1":58,"length2":8},{"diffs":[[0,"tml("],[-1,"escapeMarkup(html));\r\n                postRender();\r\n            }\r\n\r\n            if (opts.maximumSelectionSize >= 1) {\r\n                data = this.data();\r\n                if ($.isArray(data) && data.length >= opts.maximumSelectionSize && checkFormatter(opts.formatSelectionTooBig, \"formatSelectionTooBig\")) {\r\n                    render(\"<li class='select2-selection-limit'>\" + opts.formatSelectionTooBig(opts.maximumSelectionSize) + \"</li>\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (search.val().length < opts.minimumInputLength && checkFormatter(opts.formatInputTooShort, \"formatInputTooShort\")) {\r\n                render(\"<li class='select2-no-results'>\" + opts.formatInputTooShort(search.val(), opts.minimumInputLength) + \"</li>\");\r\n                return"],[1,"html);\r\n                postRender();\r\n            }\r\n\r\n            var maxSelSize = this.getMaximumSelectionSize();\r\n            if (maxSelSize >=1) {\r\n                data = this.data();\r\n                if ($.isArray(data) && data.length >= maxSelSize && checkFormatter(opts.formatSelectionTooBig, \"formatSelectionTooBig\")) {\r\n            \t    render(\"<li class='select2-selection-limit'>\" + opts.formatSelectionTooBig(maxSelSize) + \"</li>\");\r\n            \t    return;\r\n                }\r\n            }\r\n\r\n            if (search.val().length < opts.minimumInputLength) {\r\n                if (checkFormatter(opts.formatInputTooShort, \"formatInputTooShort\")) {\r\n                    render(\"<li class='select2-no-results'>\" + opts.formatInputTooShort(search.val(), opts.minimumInputLength) + \"</li>\");\r\n                } else {\r\n                    render(\"\");\r\n                }\r\n                if (initial) this.showSearch(true);\r\n                return;\r\n            }\r\n\r\n            if (opts.maximumInputLength && search.val().length > opts.maximumInputLength) {\r\n                if (checkFormatter(opts.formatInputTooLong, \"formatInputTooLong\")) {\r\n                    render(\"<li class='select2-no-results'>\" + opts.formatInputTooLong(search.val(), opts.maximumInputLength) + \"</li>\");\r\n                } else {\r\n                    render(\"\");\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (opts.formatSearching && this.findHighlightableChoices().length === 0) {\r\n                render(\"<li class='select2-searching'>\" + opts.formatSearching() + \"</li>\");\r\n            }\r\n\r\n            search.addClass(\"select2-active\");\r\n\r\n            // give the tokenizer a chance to pre-process the input\r\n            input = this.tokenize();\r\n            if (input != undefined && input != null) {\r\n                search.val(input)"],[0,";\r\n "]],"start1":59125,"start2":59125,"length1":812,"length2":1868},{"diffs":[[0,"sPage = 1;\r\n"],[1,"\r\n"],[0,"            "]],"start1":61032,"start2":61032,"length1":24,"length2":26},{"diffs":[[0,"    "],[-1,"term: search.val(),\r\n                page: this.resultsPage,\r\n                context: null,\r\n                matcher: opts.matcher,\r\n                callback: this.bind(function(data) {\r\n                    var def; // default choice\r\n\r\n                    // save context, if any\r\n                    this.context = (data.context === undefined) ? null : data.context;\r\n\r\n                    // create a default choice and prepend it to the list\r\n                    if (this.opts.createSearchChoice && search.val() !== \"\") {\r\n                        def = this.opts.createSearchChoice.call(null, search.val(), data.results);\r\n                        if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {\r\n                            if ($(data.results).filter(\r\n                            function() {\r\n                                return equal(self.id(this), self.id(def));\r\n                            }).length === 0) {\r\n                                data.results.unshift(def);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, \"formatNoMatches\")) {\r\n                        render(\"<li class='select2-no-results'>\" + opts.formatNoMatches(search.val()) + \"</li>\");\r\n                        return;\r\n                    }\r\n\r\n                    results.empty();\r\n                    self.opts.populateResults.call(this, results, data.results, { term: search.val(), page: this.resultsPage, context: null });\r\n\r\n                    if (data.more === true && checkFormatter(opts.formatLoadMore, \"formatLoadMore\")) {\r\n                        results.children().filter(\":last\").append(\"<li class='select2-more-results'>\" + escapeMarkup(opts.formatLoadMore(this.resultsPage)) + \"</li>\");\r\n                        window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                    }\r\n\r\n                    this.postprocessResults(data, initial);\r\n\r\n                    postRender();\r\n                })\r\n            "],[1,"element: opts.element,\r\n                    term: search.val(),\r\n                    page: this.resultsPage,\r\n                    context: null,\r\n                    matcher: opts.matcher,\r\n                    callback: this.bind(function (data) {\r\n                var def; // default choice\r\n\r\n                // ignore a response if the select2 has been closed before it was received\r\n                if (!this.opened()) {\r\n                    this.search.removeClass(\"select2-active\");\r\n                    return;\r\n                }\r\n\r\n                // save context, if any\r\n                this.context = (data.context===undefined) ? null : data.context;\r\n                // create a default choice and prepend it to the list\r\n                if (this.opts.createSearchChoice && search.val() !== \"\") {\r\n                    def = this.opts.createSearchChoice.call(null, search.val(), data.results);\r\n                    if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {\r\n                        if ($(data.results).filter(\r\n                            function () {\r\n                                return equal(self.id(this), self.id(def));\r\n                            }).length === 0) {\r\n                            data.results.unshift(def);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, \"formatNoMatches\")) {\r\n                    render(\"<li class='select2-no-results'>\" + opts.formatNoMatches(search.val()) + \"</li>\");\r\n                    return;\r\n                }\r\n\r\n                results.empty();\r\n                self.opts.populateResults.call(this, results, data.results, {term: search.val(), page: this.resultsPage, context:null});\r\n\r\n                if (data.more === true && checkFormatter(opts.formatLoadMore, \"formatLoadMore\")) {\r\n                    results.append(\"<li class='select2-more-results'>\" + self.opts.escapeMarkup(opts.formatLoadMore(this.resultsPage)) + \"</li>\");\r\n                    window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\r\n                }\r\n\r\n                this.postprocessResults(data, initial);\r\n\r\n                postRender();\r\n\r\n                this.opts.element.trigger({ type: \"select2-loaded\", data:data });\r\n            })"],[0,"});\r"]],"start1":61084,"start2":61084,"length1":2111,"length2":2365},{"diffs":[[0,"cancel: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":63493,"start2":63493,"length1":32,"length2":33},{"diffs":[[0,"  blur: function"],[1," "],[0,"() {\r\n"],[1,"            // if selectOnBlur == true, select the currently highlighted option\r\n            if (this.opts.selectOnBlur)\r\n                this.selectHighlighted({noFocus: true});\r\n\r\n"],[0,"            this"]],"start1":63584,"start2":63584,"length1":38,"length2":221},{"diffs":[[0,");\r\n"],[-1,"            this.dropdown.removeClass(\"select2-drop-active\");\r\n"],[0,"    "]],"start1":63881,"start2":63881,"length1":71,"length2":8},{"diffs":[[0,"tion"],[-1,"() {\r\n            /* we do this in a timeout so that current event processing can complete before this code is executed.\r\n            this makes sure the search field is focussed even if the current event would blur it */\r\n            window.setTimeout(this.bind(function() {\r\n                this.search.focus();\r\n                // reset the value so IE places the cursor at the end of the input box\r\n                this.search.val(this.search.val());\r\n            }), 10);\r\n        },\r\n\r\n        // abstract\r\n        selectHighlighted: function() {\r\n            var index = this.highlight(),\r\n                highlighted = this.results.find(\".select2-highlighted\").not(\".select2-disabled\"),\r\n                data = highlighted.closest('.select2-result-selectable').data(\"select2-data\");\r\n            if (data) {\r\n                highlighted.addClass(\"select2-disabled\");\r\n                this.highlight(index);\r\n                this.onSelect(data"],[1," () {\r\n            focus(this.search);\r\n        },\r\n\r\n        // abstract\r\n        selectHighlighted: function (options) {\r\n            var index=this.highlight(),\r\n                highlighted=this.results.find(\".select2-highlighted\"),\r\n                data = highlighted.closest('.select2-result').data(\"select2-data\");\r\n\r\n            if (data) {\r\n                this.highlight(index);\r\n                this.onSelect(data, options"],[0,");\r\n"]],"start1":64252,"start2":64252,"length1":958,"length2":440},{"diffs":[[0,"holder: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":64758,"start2":64758,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"* Get the desired width for the container element.  This is\r\n        * derived first from option `width` passed to select2, then\r\n        * the inline 'style' on the original element, and finally\r\n        * falls back to the jQuery calculated element width.\r\n        */\r\n        // abstract\r\n        initContainerWidth: function() {\r\n            function resolveContainerWidth() {\r\n                var style, attrs, matches, i, l;\r\n\r\n                if (this.opts.width === \"off\") {\r\n                    return null;\r\n                } else if (this.opts.width === \"element\") {\r\n                    return this.opts.element.outerWidth() === 0 ? 'auto' : this.opts.element.outerWidth("],[1," * Get the desired width for the container element.  This is\r\n         * derived first from option `width` passed to select2, then\r\n         * the inline 'style' on the original element, and finally\r\n         * falls back to the jQuery calculated element width.\r\n         */\r\n        // abstract\r\n        initContainerWidth: function () {\r\n            function resolveContainerWidth() {\r\n                var style, attrs, matches, i, l;\r\n\r\n                if (this.opts.width === \"off\") {\r\n                    return null;\r\n                } else if (this.opts.width === \"element\"){\r\n                    return this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false"],[0,") + "]],"start1":65055,"start2":65055,"length1":691,"length2":706},{"diffs":[[0,"pt|pc))/"],[-1,""],[0,""],[1,"i"],[0,");\r\n    "]],"start1":66344,"start2":66344,"length1":16,"length2":17},{"diffs":[[0,"    "],[-1,"if (this.opts.width === \"resolve\") {\r\n                        // next check if css('width') can resolve a width that is percent based, this is sometimes possible\r\n                        // when attached to input type=hidden or elements hidden via css\r\n                        style = this.opts.element.css('width');\r\n                        if (style.indexOf(\"%\") > 0) return style;\r\n\r\n                        // finally, fallback on the calculated width of the element\r\n                        return (this.opts.element.outerWidth() === 0 ? 'auto' : this.opts.element.outerWidth("],[1,"// next check if css('width') can resolve a width that is percent based, this is sometimes possible\r\n                    // when attached to input type=hidden or elements hidden via css\r\n                    style = this.opts.element.css('width');\r\n                    if (style && style.length > 0) return style;\r\n\r\n                    if (this.opts.width === \"resolve\") {\r\n                        // finally, fallback on the calculated width of the element\r\n                        return (this.opts.element.outerWidth(false) === 0 ? 'auto' : this.opts.element.outerWidth(false"],[0,") + "]],"start1":66551,"start2":66551,"length1":589,"length2":586},{"diffs":[[0,"\n               "],[-1," "],[0,""],[1,""],[0,"}\r\n            }"]],"start1":67382,"start2":67382,"length1":33,"length2":32},{"diffs":[[0,"ner."],[-1,"attr(\"style\", \"width: \" +"],[1,"css(\"width\","],[0," wid"]],"start1":67540,"start2":67540,"length1":33,"length2":20},{"diffs":[[0,"\r\n\r\n"],[-1,"        createContainer: function() {\r\n            var container = $(\"<div></div>\", {\r\n                \"class\": \"select2-container\"\r\n            }).html([\r\n                \"    <a href='javascript:void(0)' class='select2-choice'>\",\r\n                \"   <span></span><abbr class='select2-search-choice-close' style='display:none;'></abbr>\",\r\n                \"   <div><b></b></div>\",\r\n                \"</a>\",\r\n                \"    <div class='select2-drop select2-offscreen'>\",\r\n                \"   <div class='select2-search'>\",\r\n                \"       <input type='text' autocomplete='off' class='select2-input'/>\",\r\n                \"   </div>\",\r\n                \"   <ul class='select2-results'>\",\r\n                \"   </ul>\",\r\n                \"</div>\"].join(\"\"));\r\n            return container;\r\n        },\r\n\r\n        // single\r\n        opening: function() {\r\n            this.search.show();\r\n            this.parent.opening.apply(this, arguments);\r\n            this.dropdown.removeClass(\"select2-offscreen\""],[1,"\t\tcreateContainer: function () {\r\n            var container = $(document.createElement(\"div\")).attr({\r\n                \"class\": \"select2-container\"\r\n            }).html([\r\n                \"<a href='javascript:void(0)' onclick='return false;' class='select2-choice' tabindex='-1'>\",\r\n                \"   <span>&nbsp;</span><abbr class='select2-search-choice-close'></abbr>\",\r\n                \"   <div><b></b></div>\" ,\r\n                \"</a>\",\r\n                \"<input class='select2-focusser select2-offscreen' type='text'/>\",\r\n                \"<div class='select2-drop select2-display-none'>\" ,\r\n                \"   <div class='select2-search'>\" ,\r\n                \"       <input type='text' autocomplete='off' autocorrect='off' autocapitilize='off' spellcheck='false' class='select2-input'/>\" ,\r\n                \"   </div>\" ,\r\n                \"   <ul class='select2-results'>\" ,\r\n                \"   </ul>\" ,\r\n                \"</div>\"].join(\"\"));\r\n            return container;\r\n        },\r\n\r\n        // single\r\n        enableInterface: function() {\r\n            if (this.parent.enableInterface.apply(this, arguments)) {\r\n                this.focusser.prop(\"disabled\", !this.isInterfaceEnabled());\r\n            }\r\n        },\r\n\r\n        // single\r\n        opening: function () {\r\n            var el, range;\r\n            this.parent.opening.apply(this, arguments);\r\n            if (this.showSearchInput !== false) {\r\n                // IE appends focusser.val() at the end of field :/ so we manually insert it at the beginning using a range\r\n                // all other browsers handle this just fine\r\n\r\n                this.search.val(this.focusser.val());\r\n            }\r\n            this.search.focus();\r\n            // in IE we have to move the cursor to the end after focussing, otherwise it will be at the beginning and\r\n            // new text will appear *before* focusser.val()\r\n            el = this.search.get(0);\r\n            if (el.createTextRange) {\r\n                range = el.createTextRange();\r\n                range.collapse(false);\r\n                range.select();\r\n            }\r\n\r\n            this.focusser.prop(\"disabled\", true).val(\"\");\r\n            this.updateResults(true);\r\n            this.opts.element.trigger($.Event(\"select2-open\")"],[0,");\r\n"]],"start1":67668,"start2":67668,"length1":1017,"length2":2269},{"diffs":[[0," close: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":69977,"start2":69977,"length1":32,"length2":33},{"diffs":[[0,"his."],[-1,"dropdown.removeAttr(\"style\").addClass(\"select2-offscreen\").insertAfter(this.selection).show();\r\n        },\r\n\r\n        // single\r\n        focus: function() {\r\n            this.close();\r\n            this.selection.focus();\r\n        },\r\n\r\n        // single\r\n        isFocused: function() {\r\n            return this.selection[0] === document.activeElement"],[1,"focusser.removeAttr(\"disabled\");\r\n            this.focusser.focus();\r\n        },\r\n\r\n        // single\r\n        focus: function () {\r\n            if (this.opened()) {\r\n                this.close();\r\n            } else {\r\n                this.focusser.removeAttr(\"disabled\");\r\n                this.focusser.focus();\r\n            }\r\n        },\r\n\r\n        // single\r\n        isFocused: function () {\r\n            return this.container.hasClass(\"select2-container-active\")"],[0,";\r\n "]],"start1":70109,"start2":70109,"length1":359,"length2":475},{"diffs":[[0,"cancel: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":70624,"start2":70624,"length1":32,"length2":33},{"diffs":[[0,"his."],[-1,"selection.focus();\r\n        },\r\n\r\n        // single\r\n        initContainer: function() {\r\n\r\n            var selection,\r\n                container = this.container,\r\n                dropdown = this.dropdown,\r\n                clickingInside = false;\r\n\r\n            this.selection = selection = container.find(\".select2-choice\");\r\n\r\n            this.search.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    switch (e.which) {\r\n                        case KEY.UP:\r\n                        case KEY.DOWN:\r\n                            this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.TAB:\r\n                        case KEY.ENTER:\r\n                            this.selectHighlighted();\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ESC:\r\n                            this.cancel(e);\r\n                            killEvent(e);\r\n                            return;\r\n                    }\r\n                } else {\r\n\r\n                    if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\r\n                        return;\r\n                    }\r\n\r\n                    this.open();\r\n\r\n                    if (e.which === KEY.ENTER) {\r\n                        // do not propagate the event otherwise we open, and propagate enter which closes\r\n                        return;\r\n                    }\r\n                }\r\n            }));\r\n\r\n            this.search.bind(\"focus\", this.bind(function() {\r\n                this.selection.attr(\"tabIndex\", \"-1\");\r\n            }));\r\n            this.search.bind(\"blur\", this.bind(function() {\r\n                if (!this.opened()) this.container.removeClass(\"select2-container-active\");\r\n                window.setTimeout(this.bind(function() { this.selection.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\")); }), 10);\r\n            }));\r\n\r\n            selection.bind(\"mousedown\", this.bind(function(e) {\r\n                clickingInside = true;\r\n\r\n                if (this.opened()) {\r\n                    this.close();\r\n                    this.selection.focus();\r\n                } else if (this.enabled) {\r\n                    this.open();\r\n                }\r\n                killEvent(e);\r\n\r\n                clickingInside = false;\r\n            }));\r\n\r\n            dropdown.bind(\"mousedown\", this.bind(function() { this.search.focus(); }));\r\n\r\n            selection.bind(\"focus\", this.bind(function() {\r\n                this.container.addClass(\"select2-container-active\");\r\n                // hide the search so the tab key does not focus on it\r\n                this.search.attr(\"tabIndex\", \"-1\");\r\n            }));\r\n\r\n            selection.bind(\"blur\", this.bind(function() {\r\n                this.container.removeClass(\"select2-container-active\");\r\n                window.setTimeout(this.bind(function() { this.search.attr(\"tabIndex\", this.opts.element.attr(\"tabIndex\")); }), 10);\r\n            }));\r\n\r\n            selection.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                this.open();\r\n\r\n                if (e.which === KEY.ENTER) {\r\n                    // do not propagate the event otherwise we open, and propagate enter which closes\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                // do not set the search input value for non-alpha-numeric keys\r\n                // otherwise pressing down results in a '(' being set in the search field\r\n                if (e.which < 48) { // '0' == 48\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                var keyWritten = String.fromCharCode(e.which).toLowerCase();\r\n\r\n                if (e.shiftKey) {\r\n                    keyWritten = keyWritten.toUpperCase();\r\n                }\r\n\r\n                this.search.val(keyWritten);\r\n\r\n                // prevent event propagation so it doesnt replay on the now focussed search field and result in double key entry\r\n                killEvent(e);\r\n            }));\r\n\r\n            selection.delegate(\"abbr\", \"mousedown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n                this.clear();\r\n                killEvent(e);\r\n                this.close();\r\n                this.triggerChange();\r\n                this.selection.focus();\r\n            }));\r\n\r\n            this.setPlaceholder();\r\n\r\n            this.search.bind(\"focus\", this.bind(function() {\r\n                this.container.addClass(\"select2-container-active\");\r\n            }));\r\n        },\r\n\r\n        // single\r\n        clear: function() {\r\n            this.opts.element.val(\"\");\r\n            this.selection.find(\"span\").empty();\r\n            this.selection.removeData(\"select2-data\");\r\n            this.setPlaceholder();\r\n        },\r\n\r\n        /**\r\n        * Sets selection based on source element's value\r\n        */\r\n        // single\r\n        initSelection: function() {\r\n            var selected;\r\n            if (this.opts.element.val() === \"\") {"],[1,"focusser.removeAttr(\"disabled\");\r\n            this.focusser.focus();\r\n        },\r\n\r\n        // single\r\n        initContainer: function () {\r\n\r\n            var selection,\r\n                container = this.container,\r\n                dropdown = this.dropdown;\r\n\r\n            this.showSearch(false);\r\n\r\n            this.selection = selection = container.find(\".select2-choice\");\r\n\r\n            this.focusser = container.find(\".select2-focusser\");\r\n\r\n            // rewrite labels from original element to focusser\r\n            this.focusser.attr(\"id\", \"s2id_autogen\"+nextUid());\r\n\r\n            $(\"label[for='\" + this.opts.element.attr(\"id\") + \"']\")\r\n                .attr('for', this.focusser.attr('id'));\r\n\r\n            this.focusser.attr(\"tabindex\", this.elementTabIndex);\r\n\r\n            this.search.on(\"keydown\", this.bind(function (e) {\r\n                if (!this.isInterfaceEnabled()) return;\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                switch (e.which) {\r\n                    case KEY.UP:\r\n                    case KEY.DOWN:\r\n                        this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                        killEvent(e);\r\n                        return;\r\n                    case KEY.ENTER:\r\n                        this.selectHighlighted();\r\n                        killEvent(e);\r\n                        return;\r\n                    case KEY.TAB:\r\n                        this.selectHighlighted({noFocus: true});\r\n                        return;\r\n                    case KEY.ESC:\r\n                        this.cancel(e);\r\n                        killEvent(e);\r\n                        return;\r\n                }\r\n            }));\r\n\r\n            this.search.on(\"blur\", this.bind(function(e) {\r\n                // a workaround for chrome to keep the search field focussed when the scroll bar is used to scroll the dropdown.\r\n                // without this the search field loses focus which is annoying\r\n                if (document.activeElement === this.body().get(0)) {\r\n                    window.setTimeout(this.bind(function() {\r\n                        this.search.focus();\r\n                    }), 0);\r\n                }\r\n            }));\r\n\r\n            this.focusser.on(\"keydown\", this.bind(function (e) {\r\n                if (!this.isInterfaceEnabled()) return;\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (e.which == KEY.DOWN || e.which == KEY.UP\r\n                    || (e.which == KEY.ENTER && this.opts.openOnEnter)) {\r\n                    this.open();\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n\r\n                if (e.which == KEY.DELETE || e.which == KEY.BACKSPACE) {\r\n                    if (this.opts.allowClear) {\r\n                        this.clear();\r\n                    }\r\n                    killEvent(e);\r\n                    return;\r\n                }\r\n            }));\r\n\r\n\r\n            installKeyUpChangeEvent(this.focusser);\r\n            this.focusser.on(\"keyup-change input\", this.bind(function(e) {\r\n                e.stopPropagation();\r\n                if (this.opened()) return;\r\n                this.open();\r\n            }));\r\n\r\n            selection.on(\"mousedown\", \"abbr\", this.bind(function (e) {\r\n                if (!this.isInterfaceEnabled()) return;\r\n                this.clear();\r\n                killEventImmediately(e);\r\n                this.close();\r\n                this.selection.focus();\r\n            }));\r\n\r\n            selection.on(\"mousedown\", this.bind(function (e) {\r\n\r\n                if (!this.container.hasClass(\"select2-container-active\")) {\r\n                    this.opts.element.trigger($.Event(\"select2-focus\"));\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    this.close();\r\n                } else if (this.isInterfaceEnabled()) {\r\n                    this.open();\r\n                }\r\n\r\n                killEvent(e);\r\n            }));\r\n\r\n            dropdown.on(\"mousedown\", this.bind(function() { this.search.focus(); }));\r\n\r\n            selection.on(\"focus\", this.bind(function(e) {\r\n                killEvent(e);\r\n            }));\r\n\r\n            this.focusser.on(\"focus\", this.bind(function(){\r\n                if (!this.container.hasClass(\"select2-container-active\")) {\r\n                    this.opts.element.trigger($.Event(\"select2-focus\"));\r\n                }\r\n                this.container.addClass(\"select2-container-active\");\r\n            })).on(\"blur\", this.bind(function() {\r\n                if (!this.opened()) {\r\n                    this.container.removeClass(\"select2-container-active\");\r\n                    this.opts.element.trigger($.Event(\"select2-blur\"));\r\n                }\r\n            }));\r\n            this.search.on(\"focus\", this.bind(function(){\r\n                if (!this.container.hasClass(\"select2-container-active\")) {\r\n                    this.opts.element.trigger($.Event(\"select2-focus\"));\r\n                }\r\n                this.container.addClass(\"select2-container-active\");\r\n            }));\r\n\r\n            this.initContainerWidth();\r\n            this.opts.element.addClass(\"select2-offscreen\");\r\n            this.setPlaceholder();\r\n\r\n        },\r\n\r\n        // single\r\n        clear: function(triggerChange) {\r\n            var data=this.selection.data(\"select2-data\");\r\n            if (data) { // guard against queued quick consecutive clicks\r\n                this.opts.element.val(\"\");\r\n                this.selection.find(\"span\").empty();\r\n                this.selection.removeData(\"select2-data\");\r\n                this.setPlaceholder();\r\n\r\n                if (triggerChange !== false){\r\n                    this.opts.element.trigger({ type: \"select2-removed\", val: this.id(data), choice: data });\r\n                    this.triggerChange({removed:data});\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sets selection based on source element's value\r\n         */\r\n        // single\r\n        initSelection: function () {\r\n            var selected;\r\n            if (this.opts.element.val() === \"\" && this.opts.element.text() === \"\") {\r\n                this.updateSelection([]);"],[0,"\r\n  "]],"start1":70716,"start2":70716,"length1":5848,"length2":6605},{"diffs":[[0,"nction(selected)"],[-1," "],[0,""],[1,""],[0,"{\r\n             "]],"start1":77518,"start2":77518,"length1":33,"length2":32},{"diffs":[[0,"reOpts: function"],[1," "],[0,"() {\r\n          "]],"start1":77858,"start2":77858,"length1":32,"length2":33},{"diffs":[[0,"this, arguments)"],[1,",\r\n                self=this"],[0,";\r\n\r\n           "]],"start1":77934,"start2":77934,"length1":32,"length2":60},{"diffs":[[0,"ction = function"],[-1,""],[0,""],[1," "],[0,"(element, callba"]],"start1":78141,"start2":78141,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"if ($.isFunction(callback))\r\n                        callback({ id: selected.attr(\"value\"), text: selected.text() });\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        // single\r\n        setPlaceholder: function() {\r\n            var placeholder = this.getPlaceholder();\r\n\r\n            if (this.opts.element.val() === \"\" && placeholder !== undefined) {\r\n\r\n                // check for a first blank option if attached to a select\r\n                if (this.select && this.select.find(\"option:first\").text() !== \"\") return;\r\n\r\n                this.selection.find(\"span\").html(escapeMarkup(placeholder));\r\n\r\n                this.selection.addClass(\"select2-default\");\r\n\r\n                this.selection.find(\"abbr\").hide();\r\n            }\r\n        },\r\n\r\n        // single\r\n        postprocessResults: function(data, initial"],[1,"callback(self.optionToData(selected));\r\n                };\r\n            } else if (\"data\" in opts) {\r\n                // install default initSelection when applied to hidden input and data is local\r\n                opts.initSelection = opts.initSelection || function (element, callback) {\r\n                    var id = element.val();\r\n                    //search in data by id, storing the actual matching item\r\n                    var match = null;\r\n                    opts.query({\r\n                        matcher: function(term, text, el){\r\n                            var is_match = equal(id, opts.id(el));\r\n                            if (is_match) {\r\n                                match = el;\r\n                            }\r\n                            return is_match;\r\n                        },\r\n                        callback: !$.isFunction(callback) ? $.noop : function() {\r\n                            callback(match);\r\n                        }\r\n                    });\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        // single\r\n        getPlaceholder: function() {\r\n            // if a placeholder is specified on a single select without the first empty option ignore it\r\n            if (this.select) {\r\n                if (this.select.find(\"option\").first().text() !== \"\") {\r\n                    return undefined;\r\n                }\r\n            }\r\n\r\n            return this.parent.getPlaceholder.apply(this, arguments);\r\n        },\r\n\r\n        // single\r\n        setPlaceholder: function () {\r\n            var placeholder = this.getPlaceholder();\r\n\r\n            if (this.opts.element.val() === \"\" && placeholder !== undefined) {\r\n\r\n                // check for a first blank option if attached to a select\r\n                if (this.select && this.select.find(\"option:first\").text() !== \"\") return;\r\n\r\n                this.selection.find(\"span\").html(this.opts.escapeMarkup(placeholder));\r\n\r\n                this.selection.addClass(\"select2-default\");\r\n\r\n                this.container.removeClass(\"select2-allowclear\");\r\n            }\r\n        },\r\n\r\n        // single\r\n        postprocessResults: function (data, initial, noHighlightUpdate"],[0,") {\r"]],"start1":78357,"start2":78357,"length1":862,"length2":2206},{"diffs":[[0,"his."],[-1,"results.find(\".select2-result-selectable\").each2(function"],[1,"findHighlightableChoices().each2(function "],[0,"(i, "]],"start1":80710,"start2":80710,"length1":65,"length2":50},{"diffs":[[0,"it\r\n"],[-1,"\r\n            this.highlight(selected);\r\n\r\n            // hide the search box if this is the first we got the results and there are a few of them\r\n\r\n            if (initial === true) {\r\n                // TODO below we use data.results.length, but what we really need is something recursive to calc the length\r\n                // TODO in case there are optgroups\r\n                showSearchInput = this.showSearchInput = data.results.length >= this.opts.minimumResultsForSearch;\r\n                this.dropdown.find(\".select2-search\")[showSearchInput ? \"removeClass\" : \"addClass\"](\"select2-search-hidden\");\r\n\r\n                //add \"select2-with-searchbox\" to the container if search box is shown\r\n                $(this.dropdown, this.container)[showSearchInput ? \"addClass\" : \"removeClass\"](\"select2-with-searchbox\");\r\n            }\r\n\r\n        },\r\n\r\n        // single\r\n        onSelect: function(data) {\r\n            var old = this.opts.element.val();\r\n\r\n            this.opts.element.val(this.id(data));\r\n            this.updateSelection(data);\r\n            this.close();\r\n            this.selection.focus();\r\n\r\n            if (!equal(old, this.id(data))) { this.triggerChange(); }\r\n        },\r\n\r\n        // single\r\n        updateSelection: function(data) {\r\n\r\n            var container = this.selection.find(\"span\"), formatted;\r\n\r\n            this.selection.data(\"select2-data\", data);\r\n\r\n            container.empty();\r\n            formatted = this.opts.formatSelection(data, container);\r\n            if (formatted !== undefined) {\r\n                container.append(escapeMarkup(formatted));\r\n            }\r\n\r\n            this.selection.removeClass(\"select2-default\");\r\n\r\n            if (this.opts.allowClear && this.getPlaceholder() !== undefined) {\r\n                this.selection.find(\"abbr\").show();\r\n            }\r\n        },\r\n\r\n        // single\r\n        val: function() {\r\n            var val, data = null, self = this;\r\n\r\n            if (arguments.length === 0) {\r\n                return this.opts.element.val();\r\n            }\r\n\r\n            val = arguments[0];\r\n\r\n            if (this.select) {\r\n                this.select\r\n                    .val(val)\r\n                    .find(\":selected\").each2(function(i, elm) {\r\n                        data = { id: elm.attr(\"value\"), text: elm.text() }"],[1,"            if (noHighlightUpdate !== false) {\r\n                this.highlight(selected);\r\n            }\r\n\r\n            // show the search box if this is the first we got the results and there are enough of them for search\r\n\r\n            if (initial === true && this.showSearchInput === false) {\r\n                var min=this.opts.minimumResultsForSearch;\r\n                if (min>=0) {\r\n                    this.showSearch(countResults(data.results)>=min);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        // single\r\n        showSearch: function(showSearchInput) {\r\n            this.showSearchInput = showSearchInput;\r\n\r\n            this.dropdown.find(\".select2-search\").toggleClass(\"select2-search-hidden\", !showSearchInput);\r\n            this.dropdown.find(\".select2-search\").toggleClass(\"select2-offscreen\", !showSearchInput);\r\n            //add \"select2-with-searchbox\" to the container if search box is shown\r\n            $(this.dropdown, this.container).toggleClass(\"select2-with-searchbox\", showSearchInput);\r\n        },\r\n\r\n        // single\r\n        onSelect: function (data, options) {\r\n\r\n            if (!this.triggerSelect(data)) { return; }\r\n\r\n            var old = this.opts.element.val(),\r\n                oldData = this.data();\r\n\r\n            this.opts.element.val(this.id(data));\r\n            this.updateSelection(data);\r\n\r\n            this.opts.element.trigger({ type: \"select2-selected\", val: this.id(data), choice: data });\r\n\r\n            this.close();\r\n\r\n            if (!options || !options.noFocus)\r\n                this.selection.focus();\r\n\r\n            if (!equal(old, this.id(data))) { this.triggerChange({added:data,removed:oldData}); }\r\n        },\r\n\r\n        // single\r\n        updateSelection: function (data) {\r\n\r\n            var container=this.selection.find(\"span\"), formatted;\r\n\r\n            this.selection.data(\"select2-data\", data);\r\n\r\n            container.empty();\r\n            formatted=this.opts.formatSelection(data, container);\r\n            if (formatted !== undefined) {\r\n                container.append(this.opts.escapeMarkup(formatted));\r\n            }\r\n\r\n            this.selection.removeClass(\"select2-default\");\r\n\r\n            if (this.opts.allowClear && this.getPlaceholder() !== undefined) {\r\n                this.container.addClass(\"select2-allowclear\");\r\n            }\r\n        },\r\n\r\n        // single\r\n        val: function () {\r\n            var val,\r\n                triggerChange = false,\r\n                data = null,\r\n                self = this,\r\n                oldData = this.data();\r\n\r\n            if (arguments.length === 0) {\r\n                return this.opts.element.val();\r\n            }\r\n\r\n            val = arguments[0];\r\n\r\n            if (arguments.length > 1) {\r\n                triggerChange = arguments[1];\r\n            }\r\n\r\n            if (this.select) {\r\n                this.select\r\n                    .val(val)\r\n                    .find(\":selected\").each2(function (i, elm) {\r\n                        data = self.optionToData(elm)"],[0,";\r\n "]],"start1":80995,"start2":80995,"length1":2317,"length2":3025},{"diffs":[[0,"Placeholder();\r\n"],[1,"                if (triggerChange) {\r\n                    this.triggerChange({added: data, removed:oldData});\r\n                }\r\n"],[0,"            } el"]],"start1":84152,"start2":84152,"length1":32,"length2":162},{"diffs":[[0,"l,''"],[-1,"]\r\n                if (!val) {\r\n                    this.clear();\r\n                    return;\r\n                }\r\n                this.opts.initSelection(this.opts.element, function(data) {\r\n                    self.opts.element.val(!data ? \"\" : self.id(data));\r\n                    self.updateSelection(data);\r\n                    self.setPlaceholder();\r\n                });\r\n            }\r\n        },\r\n\r\n        // single\r\n        clearSearch: function() {\r\n            this.search.val(\"\");\r\n        },\r\n\r\n        // single\r\n        data: function(valu"],[1,",0] - 0 is legal\r\n                if (!val && val !== 0) {\r\n                    this.clear(triggerChange);\r\n                    return;\r\n                }\r\n                this.opts.element.val(val);\r\n                this.opts.initSelection(this.opts.element, function(data){\r\n                    self.opts.element.val(!data ? \"\" : self.id(data));\r\n                    self.updateSelection(data);\r\n                    self.setPlaceholder();\r\n                    if (triggerChange) {\r\n                        self.triggerChange({added: data, removed:oldData});\r\n                    }\r\n                });\r\n            }\r\n        },\r\n\r\n        // single\r\n        clearSearch: function () {\r\n            this.search.val(\"\");\r\n            this.focusser.val(\"\");\r\n        },\r\n\r\n        // single\r\n        data: function(value, triggerChang"],[0,"e) {"]],"start1":84558,"start2":84558,"length1":563,"length2":842},{"diffs":[[0,"     this.clear("],[1,"triggerChange"],[0,");\r\n            "]],"start1":85698,"start2":85698,"length1":32,"length2":45},{"diffs":[[0,"      } else {\r\n"],[1,"                    data = this.data();\r\n"],[0,"                "]],"start1":85741,"start2":85741,"length1":32,"length2":73},{"diffs":[[0,"on(value);\r\n"],[1,"                    if (triggerChange) {\r\n                        this.triggerChange({added: value, removed:data});\r\n                    }\r\n"],[0,"            "]],"start1":85910,"start2":85910,"length1":24,"length2":164},{"diffs":[[0,"tion"],[-1,"() {\r\n            var container = $(\"<div></div>\", "],[1," () {\r\n            var container = $(document.createElement(\"div\")).attr("],[0,"{\r\n "]],"start1":86212,"start2":86212,"length1":59,"length2":81},{"diffs":[[0,"    "],[-1,"//\"<li class='select2-search-choice'><span>California</span><a href=\"javascript:void(0)\" class=\"select2-search-choice-close\"></a></li>\" ,\r\n                \"  <li class='select2-search-field'>\",\r\n                \"    <input type='text' autocomplete='off' style='width: 25px;' class='select2-input'>\",\r\n                \"  </li>\",\r\n                \"</ul>\",\r\n                \"<div class='select2-drop select2-drop-multi' style='display:none;'>\",\r\n                \"   <ul class='select2-results'>\",\r\n                \"   </ul>\""],[1,"    //\"<li class='select2-search-choice'><span>California</span><a href=\"javascript:void(0)\" class=\"select2-search-choice-close\"></a></li>\" ,\r\n                \"  <li class='select2-search-field'>\" ,\r\n                \"    <input type='text' autocomplete='off' autocorrect='off' autocapitilize='off' spellcheck='false' class='select2-input'>\" ,\r\n                \"  </li>\" ,\r\n                \"</ul>\" ,\r\n                \"<div class='select2-drop select2-drop-multi select2-display-none'>\" ,\r\n                \"   <ul class='select2-results'>\" ,\r\n                \"   </ul>\" "],[0,",\r\n "]],"start1":86446,"start2":86446,"length1":529,"length2":576},{"diffs":[[0,"join(\"\"));\r\n"],[-1,"            "],[1,"\t\t\t"],[0,"return conta"]],"start1":87047,"start2":87047,"length1":36,"length2":27},{"diffs":[[0,"reOpts: function"],[1," "],[0,"() {\r\n          "]],"start1":87126,"start2":87126,"length1":32,"length2":33},{"diffs":[[0,"this, arguments)"],[1,",\r\n                self=this"],[0,";\r\n\r\n           "]],"start1":87202,"start2":87202,"length1":32,"length2":60},{"diffs":[[0,"tion"],[-1,"(element, callback) {\r\n\r\n                    var data = [];\r\n                    element.find(\":selected\").each2(function(i, elm) {\r\n                        data.push({ id: elm.attr(\"value\"), text: elm.text() });\r\n                    });\r\n\r\n                    if ($.isFunction(callback))\r\n                        callback(data);\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        // multi\r\n        initContainer: function() {\r\n\r\n            var selector = \".select2-choices\", selection;\r\n\r\n            this.searchContainer = this.container.find(\".select2-search-field\");\r\n            this.selection = selection = this.container.find(selector);\r\n\r\n            this.search.bind(\"keydown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n\r\n                if (e.which === KEY.BACKSPACE && this.search.val() === \"\") {\r\n                    this.close();\r\n\r\n                    var choices,\r\n                        selected = selection.find(\".select2-search-choice-focus\");\r\n                    if (selected.length > 0) {\r\n                        this.unselect(selected.first());\r\n                        this.search.width(10);\r\n                        killEvent(e);\r\n                        return;\r\n                    }\r\n\r\n                    choices = selection.find(\".select2-search-choice\");\r\n                    if (choices.length > 0) {\r\n                        choices.last().addClass(\"select2-search-choice-focus\");\r\n                    }\r\n                } else {\r\n                    selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    switch (e.which) {\r\n                        case KEY.UP:\r\n                        case KEY.DOWN:\r\n                            this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ENTER:\r\n                        case KEY.TAB:\r\n                            this.selectHighlighted();\r\n                            killEvent(e);\r\n                            return;\r\n                        case KEY.ESC:\r\n                            this.cancel(e);\r\n                            killEvent(e);\r\n                            return;\r\n                    }\r\n                }\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                this.open();\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                }\r\n            }));\r\n\r\n            this.search.bind(\"keyup\", this.bind(this.resizeSearch));\r\n\r\n            this.search.bind(\"blur\", this.bind(function() {\r\n                this.container.removeClass(\"select2-container-active\");\r\n            }));\r\n\r\n            this.container.delegate(selector, \"mousedown\", this.bind(function(e) {\r\n                if (!this.enabled) return;\r\n                this.clearPlaceholder();\r\n                this.open();\r\n                this.focusSearch();\r\n                e.preventDefault();\r\n            }));\r\n\r\n            this.container.delegate(selector, \"focus\", this.bind(function() {\r\n                if (!this.enabled) return;"],[1," (element, callback) {\r\n\r\n                    var data = [];\r\n\r\n                    element.find(\":selected\").each2(function (i, elm) {\r\n                        data.push(self.optionToData(elm));\r\n                    });\r\n                    callback(data);\r\n                };\r\n            } else if (\"data\" in opts) {\r\n                // install default initSelection when applied to hidden input and data is local\r\n                opts.initSelection = opts.initSelection || function (element, callback) {\r\n                    var ids = splitVal(element.val(), opts.separator);\r\n                    //search in data by array of ids, storing matching items in a list\r\n                    var matches = [];\r\n                    opts.query({\r\n                        matcher: function(term, text, el){\r\n                            var is_match = $.grep(ids, function(id) {\r\n                                return equal(id, opts.id(el));\r\n                            }).length;\r\n                            if (is_match) {\r\n                                matches.push(el);\r\n                            }\r\n                            return is_match;\r\n                        },\r\n                        callback: !$.isFunction(callback) ? $.noop : function() {\r\n                            // reorder matches based on the order they appear in the ids array because right now\r\n                            // they are in the order in which they appear in data array\r\n                            var ordered = [];\r\n                            for (var i = 0; i < ids.length; i++) {\r\n                                var id = ids[i];\r\n                                for (var j = 0; j < matches.length; j++) {\r\n                                    var match = matches[j];\r\n                                    if (equal(id, opts.id(match))) {\r\n                                        ordered.push(match);\r\n                                        matches.splice(j, 1);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            callback(ordered);\r\n                        }\r\n                    });\r\n                };\r\n            }\r\n\r\n            return opts;\r\n        },\r\n\r\n        selectChoice: function (choice) {\r\n\r\n            var selected = this.container.find(\".select2-search-choice-focus\");\r\n            if (selected.length && choice && choice[0] == selected[0]) {\r\n\r\n            } else {\r\n                if (selected.length) {\r\n                    this.opts.element.trigger(\"choice-deselected\", selected);\r\n                }\r\n                selected.removeClass(\"select2-search-choice-focus\");\r\n                if (choice && choice.length) {\r\n                    this.close();\r\n                    choice.addClass(\"select2-search-choice-focus\");\r\n                    this.opts.element.trigger(\"choice-selected\", choice);\r\n                }\r\n            }\r\n        },\r\n\r\n        // multi\r\n        initContainer: function () {\r\n\r\n            var selector = \".select2-choices\", selection;\r\n\r\n            this.searchContainer = this.container.find(\".select2-search-field\");\r\n            this.selection = selection = this.container.find(selector);\r\n\r\n            var _this = this;\r\n            this.selection.on(\"mousedown\", \".select2-search-choice\", function (e) {\r\n                //killEvent(e);\r\n                _this.search[0].focus();\r\n                _this.selectChoice($(this));\r\n            })\r\n            //.sortable({\r\n            //    items: \" > li\",\r\n            //    tolerance: \"pointer\",\r\n            //    revert: 100\r\n            //});\r\n\r\n            // rewrite labels from original element to focusser\r\n            this.search.attr(\"id\", \"s2id_autogen\"+nextUid());\r\n            $(\"label[for='\" + this.opts.element.attr(\"id\") + \"']\")\r\n                .attr('for', this.search.attr('id'));\r\n\r\n            this.search.on(\"input paste\", this.bind(function() {\r\n                if (!this.isInterfaceEnabled()) return;\r\n                if (!this.opened()) {\r\n                    this.open();\r\n                }\r\n            }));\r\n\r\n            this.search.attr(\"tabindex\", this.elementTabIndex);\r\n\r\n            this.keydowns = 0;\r\n            this.search.on(\"keydown\", this.bind(function (e) {\r\n                if (!this.isInterfaceEnabled()) return;\r\n\r\n                ++this.keydowns;\r\n                var selected = selection.find(\".select2-search-choice-focus\");\r\n                var prev = selected.prev(\".select2-search-choice:not(.select2-locked)\");\r\n                var next = selected.next(\".select2-search-choice:not(.select2-locked)\");\r\n                var pos = getCursorInfo(this.search);\r\n\r\n                if (selected.length &&\r\n                    (e.which == KEY.LEFT || e.which == KEY.RIGHT || e.which == KEY.BACKSPACE || e.which == KEY.DELETE || e.which == KEY.ENTER)) {\r\n                    var selectedChoice = selected;\r\n                    if (e.which == KEY.LEFT && prev.length) {\r\n                        selectedChoice = prev;\r\n                    }\r\n                    else if (e.which == KEY.RIGHT) {\r\n                        selectedChoice = next.length ? next : null;\r\n                    }\r\n                    else if (e.which === KEY.BACKSPACE) {\r\n                        this.unselect(selected.first());\r\n                        this.search.width(10);\r\n                        selectedChoice = prev.length ? prev : next;\r\n                    } else if (e.which == KEY.DELETE) {\r\n                        this.unselect(selected.first());\r\n                        this.search.width(10);\r\n                        selectedChoice = next.length ? next : null;\r\n                    } else if (e.which == KEY.ENTER) {\r\n                        selectedChoice = null;\r\n                    }\r\n\r\n                    this.selectChoice(selectedChoice);\r\n                    killEvent(e);\r\n                    if (!selectedChoice || !selectedChoice.length) {\r\n                        this.open();\r\n                    }\r\n                    return;\r\n                } else if (((e.which === KEY.BACKSPACE && this.keydowns == 1)\r\n                    || e.which == KEY.LEFT) && (pos.offset == 0 && !pos.length)) {\r\n\r\n                    this.selectChoice(selection.find(\".select2-search-choice:not(.select2-locked)\").last());\r\n                    killEvent(e);\r\n                    return;\r\n                } else {\r\n                    this.selectChoice(null);\r\n                }\r\n\r\n                if (this.opened()) {\r\n                    switch (e.which) {\r\n                    case KEY.UP:\r\n                    case KEY.DOWN:\r\n                        this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\r\n                        killEvent(e);\r\n                        return;\r\n                    case KEY.ENTER:\r\n                        this.selectHighlighted();\r\n                        killEvent(e);\r\n                        return;\r\n                    case KEY.TAB:\r\n                        this.selectHighlighted({noFocus:true});\r\n                        return;\r\n                    case KEY.ESC:\r\n                        this.cancel(e);\r\n                        killEvent(e);\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e)\r\n                 || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {\r\n                    return;\r\n                }\r\n\r\n                if (e.which === KEY.ENTER) {\r\n                    if (this.opts.openOnEnter === false) {\r\n                        return;\r\n                    } else if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                this.open();\r\n\r\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\r\n                    // prevent the page from scrolling\r\n                    killEvent(e);\r\n                }\r\n\r\n                if (e.which === KEY.ENTER) {\r\n                    // prevent form from being submitted\r\n                    killEvent(e);\r\n                }\r\n\r\n            }));\r\n\r\n            this.search.on(\"keyup\", this.bind(function (e) {\r\n                this.keydowns = 0;\r\n                this.resizeSearch();\r\n            })\r\n            );\r\n\r\n            this.search.on(\"blur\", this.bind(function(e) {\r\n                this.container.removeClass(\"select2-container-active\");\r\n                this.search.removeClass(\"select2-focused\");\r\n                this.selectChoice(null);\r\n                if (!this.opened()) this.clearSearch();\r\n                e.stopImmediatePropagation();\r\n                this.opts.element.trigger($.Event(\"select2-blur\"));\r\n            }));\r\n\r\n            this.container.on(\"mousedown\", selector, this.bind(function (e) {\r\n                if (!this.isInterfaceEnabled()) return;\r\n                if ($(e.target).closest(\".select2-search-choice\").length > 0) {\r\n                    // clicked inside a select2 search choice, do not open\r\n                    return;\r\n                }\r\n                this.selectChoice(null);\r\n                this.clearPlaceholder();\r\n                if (!this.container.hasClass(\"select2-container-active\")) {\r\n                    this.opts.element.trigger($.Event(\"select2-focus\"));\r\n                }\r\n                this.open();\r\n                this.focusSearch();\r\n                e.preventDefault();\r\n            }));\r\n\r\n            this.container.on(\"focus\", selector, this.bind(function () {\r\n                if (!this.isInterfaceEnabled()) return;\r\n                if (!this.container.hasClass(\"select2-container-active\")) {\r\n                    this.opts.element.trigger($.Event(\"select2-focus\"));\r\n                }"],[0,"\r\n  "]],"start1":87491,"start2":87491,"length1":3478,"length2":9855},{"diffs":[[0,"        }));\r\n\r\n"],[1,"            this.initContainerWidth();\r\n            this.opts.element.addClass(\"select2-offscreen\");\r\n\r\n"],[0,"            // s"]],"start1":97524,"start2":97524,"length1":32,"length2":136},{"diffs":[[0,"able"],[-1,": function() {\r\n            if (this.enabled) return;\r\n\r\n            this.parent.enable.apply(this, arguments);\r\n\r\n            this.search.removeAttr(\"disabled\");\r\n        },\r\n\r\n        // multi\r\n        disable: function() {\r\n            if (!this.enabled) return;\r\n\r\n            this.parent.disable.apply(this, arguments);\r\n\r\n            this.search.attr(\"disabled\", true);\r\n        },\r\n\r\n        // multi\r\n        initSelection: function() {\r\n            var data;\r\n            if (this.opts.element.val"],[1,"Interface: function() {\r\n            if (this.parent.enableInterface.apply(this, arguments)) {\r\n                this.search.prop(\"disabled\", !this.isInterfaceEnabled());\r\n            }\r\n        },\r\n\r\n        // multi\r\n        initSelection: function () {\r\n            var data;\r\n            if (this.opts.element.val() === \"\" && this.opts.element.text"],[0,"() ="]],"start1":97768,"start2":97768,"length1":514,"length2":359},{"diffs":[[0,", function(data)"],[-1," "],[0,""],[1,""],[0,"{\r\n             "]],"start1":98484,"start2":98484,"length1":33,"length2":32},{"diffs":[[0,"tion"],[-1,"() {\r\n            var placeholder = this.getPlaceholder();\r\n\r\n            if (placeholder !== undefined && this.getVal().length === 0 && this.search.hasClass(\"select2-focused\") === false) {\r\n                this.search.val(placeholder).addClass(\"select2-default\");\r\n                // stretch the search box to full width of the container so as much of the placeholder is visible as possible\r\n                this.resizeSearch();\r\n            } else {\r\n                // we set this to \" \" instead of \"\" and later clear it on focus() because there is a firefox bug\r\n                // that does not properly render the caret when the field starts out blank\r\n                this.search.val(\" "],[1," () {\r\n            var placeholder = this.getPlaceholder(),\r\n                maxWidth = this.getMaxSearchWidth();\r\n\r\n            if (placeholder !== undefined  && this.getVal().length === 0 && this.search.hasClass(\"select2-focused\") === false) {\r\n                this.search.val(placeholder).addClass(\"select2-default\");\r\n                // stretch the search box to full width of the container so as much of the placeholder is visible as possible\r\n                // we could call this.resizeSearch(), but we do not because that requires a sizer and we do not want to create one so early because of a firefox bug, see #944\r\n                this.search.width(maxWidth > 0 ? maxWidth : this.container.css(\"width\"));\r\n            } else {\r\n                this.search.val(\""],[0,"\").w"]],"start1":98881,"start2":98881,"length1":701,"length2":779},{"diffs":[[0,"holder: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":99736,"start2":99736,"length1":32,"length2":33},{"diffs":[[0,"   }"],[-1," else {\r\n                // work around for the space character we set to avoid firefox caret bug\r\n                if (this.search.val() === \" \") this.search.val(\"\");\r\n            }\r\n        },\r\n\r\n        // multi\r\n        opening: function() {\r\n            this.parent.opening.apply(this, arguments);\r\n\r\n            this.clearPlaceholder();\r\n            this.resizeSearch();\r\n            this.focusSearch("],[1,"\r\n        },\r\n\r\n        // multi\r\n        opening: function () {\r\n            this.clearPlaceholder(); // should be done before super so placeholder is not used to search\r\n            this.resizeSearch();\r\n\r\n            this.parent.opening.apply(this, arguments);\r\n\r\n            this.focusSearch();\r\n\r\n            this.updateResults(true);\r\n            this.search.focus();\r\n            this.opts.element.trigger($.Event(\"select2-open\")"],[0,");\r\n"]],"start1":99897,"start2":99897,"length1":414,"length2":444},{"diffs":[[0," close: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":100380,"start2":100380,"length1":32,"length2":33},{"diffs":[[0," focus: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":100538,"start2":100538,"length1":32,"length2":33},{"diffs":[[0,"earch.focus();\r\n"],[1,"            //this.opts.element.triggerHandler(\"focus\");\r\n"],[0,"        },\r\n\r\n  "]],"start1":100606,"start2":100606,"length1":32,"length2":90},{"diffs":[[0,"ocused: function"],[1," "],[0,"() {\r\n          "]],"start1":100723,"start2":100723,"length1":32,"length2":33},{"diffs":[[0,"ection: function"],[-1,""],[0,""],[1," "],[0,"(data) {\r\n      "]],"start1":100856,"start2":100856,"length1":32,"length2":33},{"diffs":[[0,"a).each(function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":100995,"start2":100995,"length1":32,"length2":33},{"diffs":[[0,"a).each(function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":101316,"start2":101316,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"onSelect: function(data) {\r\n            this.addSelectedChoice(data);\r\n            if (this.select) { this.postprocessResults(); }\r\n\r\n            if (this.opts.closeOnSelect) {\r\n                this.close();\r\n                this.search.width(10);\r\n            } else {\r\n                this.search.width(10);\r\n                this.resizeSearch();\r\n\r\n                if (this.countSelectableResults() > 0) {"],[1,"tokenize: function() {\r\n            var input = this.search.val();\r\n            input = this.opts.tokenizer(input, this.data(), this.bind(this.onSelect), this.opts);\r\n            if (input != null && input != undefined) {\r\n                this.search.val(input);\r\n                if (input.length > 0) {\r\n                    this.open();\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        // multi\r\n        onSelect: function (data, options) {\r\n\r\n            if (!this.triggerSelect(data)) { return; }\r\n\r\n            this.addSelectedChoice(data);\r\n\r\n            this.opts.element.trigger({ type: \"selected\", val: this.id(data), choice: data });\r\n\r\n            if (this.select || !this.opts.closeOnSelect) this.postprocessResults();\r\n\r\n            if (this.opts.closeOnSelect) {\r\n                this.close();\r\n                this.search.width(10);\r\n            } else {\r\n                if (this.countSelectableResults()>0) {\r\n                    this.search.width(10);\r\n                    this.resizeSearch();\r\n                    if (this.getMaximumSelectionSize() > 0 && this.val().length >= this.getMaximumSelectionSize()) {\r\n                        // if we reached max selection size repaint the results so choices\r\n                        // are replaced with the max selection reached message\r\n                        this.updateResults(true);\r\n                    }"],[0,"\r\n  "]],"start1":101479,"start2":101479,"length1":415,"length2":1392},{"diffs":[[0," this.close();\r\n"],[1,"                    this.search.width(10);\r\n"],[0,"                "]],"start1":103016,"start2":103016,"length1":32,"length2":76},{"diffs":[[0,"\r\n\r\n            "],[-1,""],[0,""],[1,"if (!options || !options.noFocus)\r\n                "],[0,"this.focusSearch"]],"start1":103334,"start2":103334,"length1":32,"length2":83},{"diffs":[[0,"cancel: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":103462,"start2":103462,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"// multi\r\n        addSelectedChoice: function(data) {\r\n            var choice = $(\r\n                    \"<li class='select2-search-choice'>\" +\r\n                    \"    <div></div>\" +\r\n                    \"    <a href='javascript:void(0)' class='select2-search-choice-close' tabindex='-1'></a>\" +\r\n                    \"</li>\"),\r\n                id = this.id(data),\r\n                val = this.getVal(),\r\n                formatted;\r\n\r\n            formatted = this.opts.formatSelection(data, choice);\r\n            choice.find(\"div\").replaceWith(\"<div>\" + escapeMarkup(formatted) + \"</div>\");\r\n            choice.find(\".select2-search-choice-close\")\r\n                .bind(\"click dblclick\", this.bind(function(e) {\r\n                    if (!this.enabled) return;\r\n\r\n                    $(e.target).closest(\".select2-search-choice\").fadeOut('fast').animate({ width: \"hide\" }, 50, this.bind(function() {\r\n                        this.unselect($(e.target));\r\n                        this.selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n                        this.close();\r\n                        this.focusSearch();\r\n                    })).dequeue();\r\n                    killEvent(e);\r\n                })).bind(\"focus\", this.bind(function() {\r\n                    if (!this.enabled) return;\r\n                    this.container.addClass(\"select2-container-active\");\r\n                    this.dropdown.addClass(\"select2-drop-active\");\r\n                }));"],[1,"addSelectedChoice: function (data) {\r\n            var enableChoice = !data.locked,\r\n                enabledItem = $(\r\n                    \"<li class='select2-search-choice'>\" +\r\n                    \"    <div></div>\" +\r\n                    \"    <a href='#' onclick='return false;' class='select2-search-choice-close' tabindex='-1'></a>\" +\r\n                    \"</li>\"),\r\n                disabledItem = $(\r\n                    \"<li class='select2-search-choice select2-locked'>\" +\r\n                    \"<div></div>\" +\r\n                    \"</li>\");\r\n            var choice = enableChoice ? enabledItem : disabledItem,\r\n                id = this.id(data),\r\n                val = this.getVal(),\r\n                formatted;\r\n\r\n            formatted=this.opts.formatSelection(data, choice.find(\"div\"));\r\n            if (formatted != undefined) {\r\n                choice.find(\"div\").replaceWith(\"<div title='\"+this.opts.escapeMarkup(formatted)+\"'>\"+this.opts.escapeMarkup(formatted)+\"</div>\");\r\n            }\r\n\r\n            if(enableChoice){\r\n              choice.find(\".select2-search-choice-close\")\r\n                  .on(\"mousedown\", killEvent)\r\n                  .on(\"click dblclick\", this.bind(function (e) {\r\n                  if (!this.isInterfaceEnabled()) return;\r\n\r\n                  $(e.target).closest(\".select2-search-choice\").fadeOut('fast', this.bind(function(){\r\n                      this.unselect($(e.target));\r\n                      this.selection.find(\".select2-search-choice-focus\").removeClass(\"select2-search-choice-focus\");\r\n                      this.close();\r\n                      this.focusSearch();\r\n                  })).dequeue();\r\n                  killEvent(e);\r\n              })).on(\"focus\", this.bind(function () {\r\n                  if (!this.isInterfaceEnabled()) return;\r\n                  this.container.addClass(\"select2-container-active\");\r\n                  this.dropdown.addClass(\"select2-drop-active\");\r\n              }));\r\n            }"],[0,"\r\n\r\n"]],"start1":103563,"start2":103563,"length1":1505,"length2":1982},{"diffs":[[0,"select: function"],[-1,""],[0,""],[1," "],[0,"(selected) {\r\n  "]],"start1":105751,"start2":105751,"length1":32,"length2":33},{"diffs":[[0,"ect2-data\");\r\n\r\n"],[1,"            if (!data) {\r\n                // prevent a race condition when the 'x' is clicked really fast repeatedly the event can be queued\r\n                // and invoked on an element already removed\r\n                return;\r\n            }\r\n\r\n"],[0,"            inde"]],"start1":106128,"start2":106128,"length1":32,"length2":278},{"diffs":[[0,");\r\n"],[-1,"            this.triggerChange({ removed: data });\r\n        },\r\n\r\n        // multi\r\n        postprocessResults: function() {\r\n            var val = this.getVal(),\r\n                choices = this.results.find(\".select2-result-selectable"],[1,"\r\n            this.opts.element.trigger({ type: \"removed\", val: this.id(data), choice: data });\r\n            this.triggerChange({ removed: data });\r\n        },\r\n\r\n        // multi\r\n        postprocessResults: function (data, initial, noHighlightUpdate) {\r\n            var val = this.getVal(),\r\n                choices = this.results.find(\".select2-result"],[0,"\"),\r"]],"start1":106651,"start2":106651,"length1":243,"length2":362},{"diffs":[[0,"s.each2(function"],[-1,""],[0,""],[1," "],[0,"(i, choice) {\r\n "]],"start1":107144,"start2":107144,"length1":32,"length2":33},{"diffs":[[0,"ct2-"],[-1,"disabled\").removeClass(\"select2-result-selectable\");\r\n                } else {\r\n                    choice.removeClass(\"select2-disabled\").addClass(\"select2-result-selectable\");\r\n                }\r\n            });\r\n\r\n            compound.each2(function(i, e) {\r\n                if (e.find(\".select2-result-selectable\").length == 0) {\r\n                    e.addClass(\"select2-disabled\");\r\n                } else {\r\n                    e.removeClass(\"select2-disabled\");\r\n                }\r\n            });\r\n\r\n            choices.each2(function(i, choice) {\r\n                if (!choice.hasClass(\"select2-disabled\") && choice.hasClass(\"select2-result-selectable\")) {\r\n                    self.highlight(0);\r\n                    return false;\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        // multi\r\n        resizeSearch: function() {\r\n"],[1,"selected\");\r\n                    // mark all children of the selected parent as selected\r\n                    choice.find(\".select2-result-selectable\").addClass(\"select2-selected\");\r\n                }\r\n            });\r\n\r\n            compound.each2(function(i, choice) {\r\n                // hide an optgroup if it doesnt have any selectable children\r\n                if (!choice.is('.select2-result-selectable')\r\n                    && choice.find(\".select2-result-selectable:not(.select2-selected)\").length === 0) {\r\n                    choice.addClass(\"select2-selected\");\r\n                }\r\n            });\r\n\r\n            if (this.highlight() == -1 && noHighlightUpdate !== false){\r\n                self.highlight(0);\r\n            }\r\n\r\n            //If all results are chosen render formatNoMAtches\r\n            if(!this.opts.createSearchChoice && !choices.filter('.select2-result:not(.select2-selected)').length > 0){\r\n                this.results.append(\"<li class='select2-no-results'>\" + self.opts.formatNoMatches(self.search.val()) + \"</li>\");\r\n            }\r\n\r\n        },\r\n\r\n        // multi\r\n        getMaxSearchWidth: function() {\r\n            return this.selection.width() - getSideBorderPadding(this.search);\r\n        },\r\n\r\n        // multi\r\n        resizeSearch: function () {"],[0,"\r\n  "]],"start1":107327,"start2":107327,"length1":855,"length2":1298},{"diffs":[[0,"\n            }\r\n"],[1,"\r\n            if (searchWidth <= 0) {\r\n              searchWidth = minimumWidth;\r\n            }\r\n\r\n"],[0,"            this"]],"start1":109299,"start2":109299,"length1":32,"length2":131},{"diffs":[[0,"getVal: function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":109499,"start2":109499,"length1":32,"length2":33},{"diffs":[[0,"al: function"],[-1,""],[0,""],[1," "],[0,"(val) {\r\n   "]],"start1":109856,"start2":109856,"length1":24,"length2":25},{"diffs":[[0,"l).each(function"],[-1,""],[0,""],[1," "],[0,"() {\r\n          "]],"start1":110088,"start2":110088,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"val: function() {\r\n            var val, data = [], self = this;\r\n\r\n            if (arguments.length === 0) {\r\n                return this.getVal();\r\n            }\r\n\r\n            val = arguments[0];\r\n\r\n            if (!val) {\r\n                this.opts.element.val(\"\");\r\n                this.updateSelection([]);\r\n                this.clearSearch();\r\n                return;\r\n            }\r\n\r\n            // val is a list of ids\r\n            this.setVal(val);\r\n\r\n            if (this.select) {\r\n                this.select.find(\":selected\").each(function() {\r\n                    data.push({ id: $(this).attr(\"value\"), text: $(this).text() });\r\n                });\r\n                this.updateSelection(data);\r\n            } else {\r\n                if (this.opts.initSelection === undefined) {\r\n                    throw new Error(\"val() cannot be called if initSelection() is not defined\")\r\n                }\r\n\r\n                this.opts.initSelection(this.opts.element, function(data) {\r\n                    var ids = $(data).map(self.id);\r\n                    self.setVal(ids);\r\n                    self.updateSelection(data);\r\n                    self.clearSearch();"],[1,"buildChangeDetails: function (old, current) {\r\n            var current = current.slice(0),\r\n                old = old.slice(0);\r\n\r\n            // remove intersection from each array\r\n            for (var i = 0; i < current.length; i++) {\r\n                for (var j = 0; j < old.length; j++) {\r\n                    if (equal(this.opts.id(current[i]), this.opts.id(old[j]))) {\r\n                        current.splice(i, 1);\r\n                        i--;\r\n                        old.splice(j, 1);\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {added: current, removed: old};\r\n        },\r\n\r\n\r\n        // multi\r\n        val: function (val, triggerChange) {\r\n            var oldData, self=this, changeDetails;\r\n\r\n            if (arguments.length === 0) {\r\n                return this.getVal();\r\n            }\r\n\r\n            oldData=this.data();\r\n            if (!oldData.length) oldData=[];\r\n\r\n            // val is an id. !val is true for [undefined,null,'',0] - 0 is legal\r\n            if (!val && val !== 0) {\r\n                this.opts.element.val(\"\");\r\n                this.updateSelection([]);\r\n                this.clearSearch();\r\n                if (triggerChange) {\r\n                    this.triggerChange({added: this.data(), removed: oldData});\r\n                }\r\n                return;\r\n            }\r\n\r\n            // val is a list of ids\r\n            this.setVal(val);\r\n\r\n            if (this.select) {\r\n                this.opts.initSelection(this.select, this.bind(this.updateSelection));\r\n                if (triggerChange) {\r\n                    this.triggerChange(this.buildChangeDetails(oldData, this.data()));\r\n                }\r\n            } else {\r\n                if (this.opts.initSelection === undefined) {\r\n                    throw new Error(\"val() cannot be called if initSelection() is not defined\");\r\n                }\r\n\r\n                this.opts.initSelection(this.opts.element, function(data){\r\n                    var ids=$(data).map(self.id);\r\n                    self.setVal(ids);\r\n                    self.updateSelection(data);\r\n                    self.clearSearch();\r\n                    if (triggerChange) {\r\n                        self.triggerChange(this.buildChangeDetails(oldData, this.data()));\r\n                    }"],[0,"\r\n  "]],"start1":110355,"start2":110355,"length1":1177,"length2":2334},{"diffs":[[0,"SortEnd:"],[-1," "],[0,"function"]],"start1":113262,"start2":113262,"length1":17,"length2":16},{"diffs":[[0," var val"],[-1," = "],[1,"="],[0,"[], self"],[-1," = "],[1,"="],[0,"this;\r\n\r"]],"start1":113297,"start2":113297,"length1":30,"length2":26},{"diffs":[[0,"lues"],[-1,") {\r\n            var self = this, ids"],[1,", triggerChange) {\r\n            var self=this, ids, old"],[0,";\r\n "]],"start1":114018,"start2":114018,"length1":45,"length2":63},{"diffs":[[0,"                "],[-1,""],[0,""],[1," "],[0,"return this.sele"]],"start1":114123,"start2":114123,"length1":32,"length2":33},{"diffs":[[0,"      } else {\r\n"],[1,"                old = this.data();\r\n"],[0,"                "]],"start1":114333,"start2":114333,"length1":32,"length2":68},{"diffs":[[0,"ts.id(e)"],[-1,""],[0,""],[1,";"],[0," });\r\n  "]],"start1":114496,"start2":114496,"length1":16,"length2":17},{"diffs":[[0,"clearSearch();\r\n"],[1,"                if (triggerChange) {\r\n                    this.triggerChange(this.buildChangeDetails(old, this.data()));\r\n                }\r\n"],[0,"            }\r\n "]],"start1":114614,"start2":114614,"length1":32,"length2":173},{"diffs":[[0,"lect2 = function"],[-1,""],[0,""],[1," "],[0,"() {\r\n\r\n        "]],"start1":114819,"start2":114819,"length1":32,"length2":33},{"diffs":[[0,"ple,"],[-1," allowedMethods = [\"val\", \"destroy\", \"open\", \"close\", \"focus\", \"isFocused\", \"container\", \"onSortStart\", \"onSortEnd\", \"enable\", \"disable\", \"positionDropdown\", \"data\"];\r\n\r\n        this.each(function() {\r\n            if (args.length === 0 || typeof "],[1,"\r\n            allowedMethods = [\"val\", \"destroy\", \"opened\", \"open\", \"close\", \"focus\", \"isFocused\", \"container\", \"onSortStart\", \"onSortEnd\", \"enable\", \"readonly\", \"positionDropdown\", \"data\"],\r\n            valueMethods = [\"val\", \"opened\", \"isFocused\", \"container\", \"data\"];\r\n\r\n        this.each(function () {\r\n            if (args.length === 0 || typeof"],[0,"(arg"]],"start1":114971,"start2":114971,"length1":254,"length2":359},{"diffs":[[0,"element."],[-1,"attr"],[1,"prop"],[0,"(\"multip"]],"start1":115583,"start2":115583,"length1":20,"length2":20},{"diffs":[[0," opts) {"],[-1," "],[0,"opts.mul"]],"start1":115725,"start2":115725,"length1":17,"length2":16},{"diffs":[[0,"multiple = true;"],[-1," "],[0,"}\r\n             "]],"start1":115749,"start2":115749,"length1":33,"length2":32},{"diffs":[[0," (typeof"],[-1," "],[0,""],[1,""],[0,"(args[0]"]],"start1":115927,"start2":115927,"length1":17,"length2":16},{"diffs":[[0,"       value"],[-1," = "],[1,"="],[0,"select2.cont"]],"start1":116304,"start2":116304,"length1":27,"length2":25},{"diffs":[[0,"if ("],[-1,"value !== undefined) { return false;"],[1,"indexOf(args[0], valueMethods) >= 0) {\r\n                    return false;\r\n               "],[0," }\r\n"]],"start1":116475,"start2":116475,"length1":44,"length2":98},{"diffs":[[0,"h: \"copy\",\r\n"],[1,"        loadMorePadding: 0,\r\n"],[0,"        clos"]],"start1":116846,"start2":116846,"length1":24,"length2":53},{"diffs":[[0,"ect: true,\r\n"],[1,"        openOnEnter: true,\r\n"],[0,"        cont"]],"start1":116905,"start2":116905,"length1":24,"length2":52},{"diffs":[[0,"uery"],[-1,") {\r\n            var markup = [];\r\n            markMatch(result.text, query.term, markup);\r\n            return markup.join(\"\");\r\n        },\r\n        formatSelection: function(data, container) {\r\n            return data.text;\r\n        },\r\n        formatNoMatches: function() { return \"No matches found\"; },\r\n        formatInputTooShort: function(input, min) { return \"Please enter \" + (min - input.length) + \" more characters\"; },\r\n        formatSelectionTooBig: function(limit) { return \"You can only select \" + limit + \" items\"; },\r\n        formatLoadMore: function(pageNumber) { return \"Loading more results...\"; },\r\n        minimumResultsForSearch: 0,\r\n        minimumInputLength: 0,\r\n        maximumSelectionSize: 0,\r\n        id: function(e) { return e.id; },\r\n        matcher: function(term, text) {\r\n            return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;"],[1,", escapeMarkup) {\r\n            var markup=[];\r\n            markMatch(result.text, query.term, markup, escapeMarkup);\r\n            return markup.join(\"\");\r\n        },\r\n        formatSelection: function (data, container) {\r\n            return data ? data.text : undefined;\r\n        },\r\n        sortResults: function (results, container, query) {\r\n            return results;\r\n        },\r\n        formatResultCssClass: function(data) {return undefined;},\r\n        formatNoMatches: function () { return \"No matches found\"; },\r\n        formatInputTooShort: function (input, min) { var n = min - input.length; return \"Please enter \" + n + \" more character\" + (n == 1? \"\" : \"s\"); },\r\n        formatInputTooLong: function (input, max) { var n = input.length - max; return \"Please delete \" + n + \" character\" + (n == 1? \"\" : \"s\"); },\r\n        formatSelectionTooBig: function (limit) { return \"You can only select \" + limit + \" item\" + (limit == 1 ? \"\" : \"s\"); },\r\n        formatLoadMore: function (pageNumber) { return \"Loading more results...\"; },\r\n        formatSearching: function () { return \"Searching...\"; },\r\n        minimumResultsForSearch: 0,\r\n        minimumInputLength: 0,\r\n        maximumInputLength: null,\r\n        maximumSelectionSize: 0,\r\n        id: function (e) { return e.id; },\r\n        matcher: function(term, text) {\r\n            return (''+text).toUpperCase().indexOf((''+term).toUpperCase()) >= 0;\r\n        },\r\n        separator: \",\",\r\n        tokenSeparators: [],\r\n        tokenizer: defaultTokenizer,\r\n        escapeMarkup: function (markup) {\r\n            var replace_map = {\r\n                '\\\\': '&#92;',\r\n                '&': '&amp;',\r\n                '<': '&lt;',\r\n                '>': '&gt;',\r\n                '\"': '&quot;',\r\n                \"'\": '&#39;',\r\n                \"/\": '&#47;'\r\n            };\r\n\r\n            return String(markup).replace(/[&<>\"'\\/\\\\]/g, function (match) {\r\n                    return replace_map[match];\r\n            });\r\n        },\r\n        blurOnChange: false,\r\n        selectOnBlur: false,\r\n        adaptContainerCssClass: function(c) { return c; },\r\n        adaptDropdownCssClass: function(c) { return null; }\r\n    };\r\n\r\n    $.fn.select2.ajaxDefaults = {\r\n        transport: $.ajax,\r\n        params: {\r\n            type: \"GET\",\r\n            cache: false,\r\n            dataType: \"json\""],[0,"\r\n  "]],"start1":117112,"start2":117112,"length1":885,"length2":2345},{"diffs":[[0," };\r\n\r\n}"],[-1," "],[0,""],[1,""],[0,"(jQuery)"]],"start1":119849,"start2":119849,"length1":17,"length2":16}]],"length":119867,"saved":false}
